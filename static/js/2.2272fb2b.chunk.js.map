{"version":3,"sources":["../node_modules/react/jsx-runtime.js","../node_modules/react/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/object-assign/index.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/mic-recorder-to-mp3/dist/index.js"],"names":["module","exports","require","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","shouldUseNative","target","source","symbols","to","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","l","p","Fragment","StrictMode","Profiler","q","r","t","Suspense","u","v","for","w","x","z","a","b","c","encodeURIComponent","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","props","context","refs","updater","D","E","isReactComponent","setState","Error","forceUpdate","F","isPureReactComponent","G","current","H","I","ref","__self","__source","J","e","d","k","h","g","children","f","m","defaultProps","$$typeof","type","_owner","L","M","N","replace","escape","O","K","y","P","Q","_status","_result","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","count","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","aa","ba","Set","ca","da","ea","add","fa","window","document","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","oa","pa","toUpperCase","qa","ma","isNaN","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","stack","trim","match","Oa","Pa","prepareStackTrace","defineProperty","set","Reflect","construct","displayName","Qa","tag","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","eb","db","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","style","indexOf","setProperty","charAt","substring","ub","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","addEventListener","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","cc","child","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","delete","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","Math","clz32","bd","cd","log","LN2","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","id","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","offset","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","start","selectionStart","end","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","concat","Ze","Yb","instance","listener","$e","has","af","bf","random","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","setTimeout","pf","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","state","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","create","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","hi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","size","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","message","Ni","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","pop","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","jsx","jsxs","new_byte$1","Int8Array","new_short","Int16Array","new_int$1","Int32Array","new_float$1","Float32Array","new_double$1","Float64Array","new_float_n$1","sz","new_int_n$1","new_short_n","new_array_n$1","Arrays$1","fromIndex","toIndex","System$1","src","srcPos","dest","destPos","srcEnd","Util$1","ShortBlock$1","ordinal","SQRT2","FAST_LOG10","log10","FAST_LOG10_X","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float$1","VbrMode$1","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","common","System$6","System","Util$6","Util","Arrays$6","Arrays","new_float$6","new_float","NewMDCT","enwindow","NS","NL","win","tantab_l","Encoder_1","SHORT_TYPE","cx","cs","window_subband","x1","x1Pos","xr","wp","x2","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","gfc","w0","w1","wkPos","channels_out","gr","mode_gr","band","l3_side","tt","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","block_type","band0","band1","mixed_block_flag","amp_filter","fill","work","bu","arraycopy","NewMDCT_1","System$7","new_float$7","new_float_n$7","new_float_n","III_psy_xmin","SBMAX_l","SBMAX_s","iii_psy_xmin","j","III_psy_xmin_1","III_psy_ratio","thm","en","III_psy_ratio_1","System$5","VbrMode$5","VbrMode","new_array_n$5","new_array_n","new_float$5","new_float_n$5","new_int$5","new_int","assert$5","assert","Encoder$2","FFTOFFSET","MPG_MD_MS_LR","bs","psy","vbr","qupvt","setModules","_bs","_psy","_qupvt","_vbr","newMDCT","adjust_ATH","gr2_max","max_pow","ATH","useAdjust","loudness_sq","max","aaSensitivityP","adjust","adjustLimit","adj_lim_new","updateStats","bitrate_index","mode_ext","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","lame_encode_frame_init","gfp","inbuf","internal_flags","primebuff0","primebuff1","mf_size","BLKSIZE","framesize","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","tot_ener","ms_ener_ratio","pe_MS","padding","slot_lag","frac_SpF","out_samplerate","psymodel","bufp","bufpPos","blocktype","VBR","L3psycho_anal_vbr","L3psycho_anal_ns","MPEGMode","JOINT_STEREO","cod_info","NORM_TYPE","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","analysis","pinfo","ms_ratio","ers","energy","nsPsy","pefirbuf","fircoef","iteration_loop","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","CBANDS","SBPSY_l","SBPSY_s","PSFB21","PSFB12","HBLKSIZE","BLKSIZE_s","HBLKSIZE_s","START_TYPE","STOP_TYPE","MPG_MD_LR_I","MPG_MD_MS_I","Util$4","new_float$4","FFT","window_s","costab","fht","fz","fzPos","k4","tri","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","fft_short","x_real","chn","buffer","bufPos","fft_long","init_fft","cos","PI","FFT_1","VbrMode$3","Float$3","Float","ShortBlock$3","ShortBlock","Util$3","Arrays$3","new_float$3","new_float_n$3","new_int$3","assert$3","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","loudness_power","eql_w","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","im","totalenergy","energy_save","athaa_loudapprox","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","tab","init_mask_add_max_values","pow","table1","table2","table3","mask_add","m1","m2","shortblock","ratio","cb_s","cb_l","table2_","vbrpsy_mask_add","calc_interchannel_masking","sblock","msfix1","mld","mld_l","rmid","rside","mld_s","ns_msfix","msfix","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","convert_partition2scalefac_s","thr","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","blocktype_old","nb_s2","block_type_set","uselongblock","blocktype_d","short_blocks","NS_INTERP","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","ResvMax","ResvSize","firbuf","firbufPos","sum1","sum2","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","last_en_subshort","pfPos","pfe","abs","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","ATHlower","ppe","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","int","dd_n","avg_mask","minval_s","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","exp","norm_s3_func_x","lim_a","lim_b","sum","s3_func","tempx","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","j2","bark1","sfb","i1","i2","f_tmp","bark2","init_s3_values","npart","norm","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","ch01","mld_cb_l","mld_cb_s","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","decay","exp_nspsytune","frame_duration","ATHtype","freq_inc","eql_balance","ATHcurve","PsyModel_1","MPEGMode$1","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","MPEGMode_1","LameGlobalFlags","class_id","num_samples","num_channels","in_samplerate","scale","scale_left","scale_right","decode_only","quality","free_format","findReplayGain","decode_on_the_fly","write_id3tag_automatic","brate","compression_ratio","copyright","original","extension","emphasis","error_protection","strict_ISO","disable_reservoir","quant_comp","quant_comp_short","experimentalY","preset","VBR_q_frac","VBR_q","VBR_mean_bitrate_kbps","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","maskingadjust","maskingadjust_short","ATHonly","ATHshort","noATH","athaa_type","athaa_sensitivity","useTemporal","tune","tune_value_a","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","LameGlobalFlags_1","L3Side$1","SFBMAX","L3Side_1","new_float$10","new_int$10","GrInfo","l3_enc","scalefac","xrpow_max","part2_3_length","big_values","count1","global_gain","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","part2_length","sfb_lmax","sfb_smin","psy_lmax","sfbmax","psymax","sfbdivide","count1bits","sfb_partition_table","slen","max_nonzero_coeff","clone_int","array","clone_float","other","GrInfo_1","new_int$9","IIISideInfo","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","IIISideInfo_1","System$11","new_int$11","ScaleFac","arrL","arrS","arr21","arr12","psfb21","psfb12","ScaleFac_1","new_float$12","new_float_n$12","new_int$12","NsPsy","longfact","shortfact","NsPsy_1","VBRSeekInfo","seen","want","pos","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","VBRSeekInfo_1","new_byte$8","new_byte","new_double$8","new_double","new_float$8","new_float_n$8","new_int$8","new_int_n$8","new_int_n","LameInternalFlags$1","MAX_HEADER_LEN","Header","write_timing","ptr","buf","Class_ID","iteration_init_init","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping","noise_shaping_amp","substep_shaping","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","nMusicCRC","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sideinfo_len","header","MAX_HEADER_BUF","h_ptr","w_ptr","ancillary_flag","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","VBR_seek_table","nogap_total","nogap_current","findPeakSample","PeakSample","RadioGain","AudiophileGain","rgdata","noclipGainChange","noclipScale","hip","in_buffer_nsamples","in_buffer_0","in_buffer_1","MAX_BITS_PER_CHANNEL","MAX_BITS_PER_GRANULE","LameInternalFlags_1","new_float$13","ATH_1","System$15","Arrays$15","GainAnalysis$1","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","inputPos","output","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","analyzeResult","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","ival","GetTitleGain","retval","MAX_dB","GainAnalysis_1","new_float$14","new_int$14","ReplayGain","freqindex","first","ReplayGain_1","MeanBits$1","meanBits","bits","MeanBits_1","new_float$16","new_int$16","assert$16","CBRNewIterationLoop","_quantize","quantize","max_bits","l3_xmin","xrpow","targ_bits","mean_bits","rv","ResvFrameBegin","on_pe","ms_convert","reduce_side","masking_lower_db","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ResvFrameEnd","CBRNewIterationLoop_1","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables$1","ht","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","Tables_1","VbrMode$19","Float$19","Util$19","new_float$19","new_int$19","assert$19","QuantizePVT$1","tak","POW20","Q_MAX2","Q_MAX","pow20","_tk","_rv","IPOW20","ipow20","DBL_EPSILON","PRECALC_SIZE","IXMAX_VAL","NSATHSCALE","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow43","adj43","ATHmdct","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","StartLine","iteration_init","bass","alto","treble","sfb21","huffman_init","cbr","tbits","add_bits","extra_bits","ResvMaxBits","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","rh1","xmin","rh2","en0","max_nonzero","BitStream","EQ","tmpATH","calc_noise_core","startline","step","noise","ix","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over","over_noise_db","tot_noise_db","max_noise","scalefacPos","over_SSD","tmp","noise_log","usefullsize","sl","over_count","tot_noise","over_noise","set_pinfo","sfb2","en1","ifqstep","L3Side","xfsf","CalcNoiseResult","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","QuantizePVT_1","System$18","Arrays$18","new_int$18","assert$18","Takehiro$1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x3","rx0","rx1","rx2","rx3","quantize_xrpow","xp","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","sfb_count1","ix_max","endPos","max1","max2","count_bit_ESC","t1","t2","linbits","count_bit_noESC","hlen1","count_bit_noESC_from2","count_bit_noESC_from3","sum3","hlen2","hlen3","huf_tbl_noESC","choose_table","choice2","choice","recalc_divide_init","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r0","a1","r0bits","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","r2","r2t","noquant_count_bits","best_huffman_divide","count_bits","gain","roundfac","slen1_n","slen2_n","slen1_tab","slen2_tab","scfsi_calc","all_scalefactors_not_negative","best_scalefac_store","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen1","slen2","slen3","slen4","log2tab","printf","bv_index","scfb_anz","Takehiro_1","System$17","Arrays$17","new_byte$17","new_float_n$17","new_int$17","assert$17","BitStream$1","CRC16_POLYNOMIAL","MAX_LENGTH","ga","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","putbits2","Lame","LAME_MAXMP3BUFFER","putbits_noheaders","drain_into_ancillary","remainingBits","getLameShortVersion","writeheader","CRC_update","crc","encodeSideInfo2","bitsPerFrame","CRC_writeheader","old","println","huffman_coder_count1","huffbits","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","getframebits","bit_rate","byte","flush_bitstream","NEQ","GainAnalysis","add_dummy_byte","bufferPos","mp3data","minimum","updateMusicCRC","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","init_bit_stream_w","BitStream_1","System$2","VbrMode$2","ShortBlock$2","new_float$2","new_int_n$2","new_short_n$1","assert$2","Lame$1","LAME_MAXALBUMART","V9","V8","V7","V6","V5","V4","V3","V2","V1","V0","R3MIX","STANDARD","EXTREME","INSANE","STANDARD_FAST","EXTREME_FAST","MEDIUM","MEDIUM_FAST","qu","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","bitrate","lPass","lowpass","enc","_p","_qu","_id3","_mpglib","LAME_ID","lame_init_old","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","BitrateIndex","optimum_bandwidth","freq_map","table_index","nearestBitrateFullIndex","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","InitVbrTag","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","ret","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","time0","joff","xvalue","n_shift","io","numUsed","lame_init","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","apply_preset","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","Lame_1","VbrMode$20","Presets$1","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","mask","interCh","sfScale","nsmsfix","nsbass","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","lame_set_VBR_q","abr_switch_map","apply_abr_preset","actual_bitrate","Presets_1","VBRQuantize","VBRQuantize_1","CalcNoiseResult$1","CalcNoiseResult_1","new_float$22","new_int$22","CalcNoiseData","CalcNoiseData_1","System$21","VbrMode$21","Util$21","Arrays$21","new_float$21","assert$21","Quantize$1","init_xrpow_core","psfb21_analogsilence","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","flagGoneOver","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","trigger","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","status","ixwork","trancate_smallspectrums","allowedNoise","trancateThreshold","nsame","sort","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","ResvAdjust","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","LameInternalFlags","get_framebits","frameBits","MeanBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","Quantize_1","assert$23","Reservoir$1","maxmp3buf","frameLength","resvLimit","fullFrameBits","resvsize","over_bits","stuffingBits","mdb_bytes","Reservoir_1","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","Version_1","System$22","VbrMode$22","ShortBlock$22","Arrays$22","new_byte$22","assert$24","VBRTag","_v","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","xingSeekTable","indx","seek_point","extractInteger","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","putLameVBR","musicLength","streamBuffer","streamBufferPos","revMethod","abrBitrate","bytesWritten","encDelay","encPadding","revision","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","skipId3v2","fpStream","seek","id3v2Header","readFully","startsWith","Tables","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","head_flags","frames","bytes","toc","vbrScale","headersize","kbps_header","totalFrameSize","headerSize","getLameTagFrame","streamIndex","streamSize","putVbrTag","stream","id3v2TagSize","write","VBRTag_1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","Mp3Encoder","channels","gaud","Presets","QuantizePVT","Quantize","Reservoir","Takehiro","parse","retcode","maxSamples","encodeBuffer","right","_sz","subarray","flush","WavHeader","dataOffset","dataLen","sampleRate","fourccToInt","fourcc","charCodeAt","RIFF","WAVE","fmt_","readHeader","dataView","getUint32","fmtLen","getUint16","Mp3Encoder_1","classCallCheck","Constructor","createClass","defineProperties","descriptor","protoProps","staticProps","Encoder","config","bitRate","mp3Encoder","samplesMono","clearBuffer","dataBuffer","arrayBuffer","floatTo16BitPCM","convertBuffer","appendToBuffer","MicRecorder","startRecordingAt","deviceId","activeStream","microphone","processor","_this","timerToStart","createMediaStreamSource","createScriptProcessor","onaudioprocess","lameEncoder","encode","inputBuffer","getChannelData","connect","destination","disconnect","close","getAudioTracks","_this2","AudioContext","webkitAudioContext","audio","exact","navigator","mediaDevices","getUserMedia","addMicrophoneListener","catch","_this3","finalBuffer","Blob","factory"],"mappings":";wGAGEA,EAAOC,QAAUC,EAAQ,K,6BCAzBF,EAAOC,QAAUC,EAAQ,I,6BCHZ,SAASC,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,mDKLtGtC,EAAOC,QAAU,EAAQ,K,6BCAzB,SAASsC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBrB,EAAQsB,EAAKtB,MACjB,MAAOuB,GAEP,YADAN,EAAOM,GAILD,EAAKxB,KACPkB,EAAQhB,GAERwB,QAAQR,QAAQhB,GAAOyB,KAAKP,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMlB,GACbc,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQnB,GAGlE,SAASmB,EAAOlB,GACda,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASlB,GAGnEiB,OAAMxB,OA/BZ,mC,6BCQA,IAAIuC,EAAwB5C,OAAO4C,sBAC/BC,EAAiB7C,OAAOgB,UAAU6B,eAClCC,EAAmB9C,OAAOgB,UAAU+B,qBAExC,SAASC,EAASC,GACjB,GAAY,OAARA,QAAwB5C,IAAR4C,EACnB,MAAM,IAAIzB,UAAU,yDAGrB,OAAOxB,OAAOiD,GA+Cf/D,EAAOC,QA5CP,WACC,IACC,IAAKa,OAAOkD,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCnD,OAAOqD,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IADA,IAAIG,EAAQ,GACH7D,EAAI,EAAGA,EAAI,GAAIA,IACvB6D,EAAM,IAAMF,OAAOG,aAAa9D,IAAMA,EAKvC,GAAwB,eAHXO,OAAOqD,oBAAoBC,GAAOE,KAAI,SAAUzC,GAC5D,OAAOuC,EAAMvC,MAEH0C,KAAK,IACf,OAAO,EAIR,IAAIC,EAAQ,GAIZ,MAHA,uBAAuBC,MAAM,IAAIC,SAAQ,SAAUC,GAClDH,EAAMG,GAAUA,KAGf,yBADE7D,OAAO8D,KAAK9D,OAAOkD,OAAO,GAAIQ,IAAQD,KAAK,IAM9C,MAAO7C,GAER,OAAO,GAIQmD,GAAoB/D,OAAOkD,OAAS,SAAUc,EAAQC,GAKtE,IAJA,IAAI3C,EAEA4C,EADAC,EAAKnB,EAASgB,GAGTI,EAAI,EAAGA,EAAI1B,UAAUlD,OAAQ4E,IAAK,CAG1C,IAAK,IAAIrC,KAFTT,EAAOtB,OAAO0C,UAAU0B,IAGnBvB,EAAe3B,KAAKI,EAAMS,KAC7BoC,EAAGpC,GAAOT,EAAKS,IAIjB,GAAIa,EAAuB,CAC1BsB,EAAUtB,EAAsBtB,GAChC,IAAK,IAAI7B,EAAI,EAAGA,EAAIyE,EAAQ1E,OAAQC,IAC/BqD,EAAiB5B,KAAKI,EAAM4C,EAAQzE,MACvC0E,EAAGD,EAAQzE,IAAM6B,EAAK4C,EAAQzE,MAMlC,OAAO0E,I,8BCtFR,SAASE,IAEP,GAC4C,qBAAnCC,gCAC4C,oBAA5CA,+BAA+BD,SAcxC,IAEEC,+BAA+BD,SAASA,GACxC,MAAOzD,GAGP2D,QAAQrC,MAAMtB,IAOhByD,GACAnF,EAAOC,QAAUC,EAAQ,I,6BC1Bd,IAAIoF,EAAEpF,EAAQ,GAAiB2B,EAAE,MAAM0D,EAAE,MAAMtF,EAAQuF,SAAS,MAAMvF,EAAQwF,WAAW,MAAMxF,EAAQyF,SAAS,MAAM,IAAIC,EAAE,MAAMC,EAAE,MAAMC,EAAE,MAAM5F,EAAQ6F,SAAS,MAAM,IAAIC,EAAE,MAAMC,EAAE,MACpM,GAAG,oBAAoBpF,QAAQA,OAAOqF,IAAI,CAAC,IAAIC,EAAEtF,OAAOqF,IAAIpE,EAAEqE,EAAE,iBAAiBX,EAAEW,EAAE,gBAAgBjG,EAAQuF,SAASU,EAAE,kBAAkBjG,EAAQwF,WAAWS,EAAE,qBAAqBjG,EAAQyF,SAASQ,EAAE,kBAAkBP,EAAEO,EAAE,kBAAkBN,EAAEM,EAAE,iBAAiBL,EAAEK,EAAE,qBAAqBjG,EAAQ6F,SAASI,EAAE,kBAAkBH,EAAEG,EAAE,cAAcF,EAAEE,EAAE,cAAc,IAAIC,EAAE,oBAAoBvF,QAAQA,OAAOC,SACtR,SAASuF,EAAEC,GAAG,IAAI,IAAIC,EAAE,yDAAyDD,EAAEE,EAAE,EAAEA,EAAE/C,UAAUlD,OAAOiG,IAAID,GAAG,WAAWE,mBAAmBhD,UAAU+C,IAAI,MAAM,yBAAyBF,EAAE,WAAWC,EAAE,iHACpU,IAAIG,EAAE,CAACC,UAAU,WAAW,OAAM,GAAIC,mBAAmB,aAAaC,oBAAoB,aAAaC,gBAAgB,cAAcC,EAAE,GAAG,SAASC,EAAEV,EAAEC,EAAEC,GAAGjD,KAAK0D,MAAMX,EAAE/C,KAAK2D,QAAQX,EAAEhD,KAAK4D,KAAKJ,EAAExD,KAAK6D,QAAQZ,GAAGE,EACpN,SAASW,KAA6B,SAASC,EAAEhB,EAAEC,EAAEC,GAAGjD,KAAK0D,MAAMX,EAAE/C,KAAK2D,QAAQX,EAAEhD,KAAK4D,KAAKJ,EAAExD,KAAK6D,QAAQZ,GAAGE,EADsGM,EAAEjF,UAAUwF,iBAAiB,GAAGP,EAAEjF,UAAUyF,SAAS,SAASlB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMmB,MAAMpB,EAAE,KAAK9C,KAAK6D,QAAQN,gBAAgBvD,KAAK+C,EAAEC,EAAE,aAAaS,EAAEjF,UAAU2F,YAAY,SAASpB,GAAG/C,KAAK6D,QAAQR,mBAAmBrD,KAAK+C,EAAE,gBACnde,EAAEtF,UAAUiF,EAAEjF,UAAsF,IAAI4F,EAAEL,EAAEvF,UAAU,IAAIsF,EAAEM,EAAExF,YAAYmF,EAAE/B,EAAEoC,EAAEX,EAAEjF,WAAW4F,EAAEC,sBAAqB,EAAG,IAAIC,EAAE,CAACC,QAAQ,MAAMC,EAAEhH,OAAOgB,UAAU6B,eAAeoE,EAAE,CAAClF,KAAI,EAAGmF,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChS,SAASC,EAAE9B,EAAEC,EAAEC,GAAG,IAAI6B,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAK,GAAG,MAAMjC,EAAE,IAAI8B,UAAK,IAAS9B,EAAE0B,MAAMO,EAAEjC,EAAE0B,UAAK,IAAS1B,EAAEzD,MAAMyF,EAAE,GAAGhC,EAAEzD,KAAKyD,EAAEwB,EAAE9F,KAAKsE,EAAE8B,KAAKL,EAAEpE,eAAeyE,KAAKC,EAAED,GAAG9B,EAAE8B,IAAI,IAAII,EAAEhF,UAAUlD,OAAO,EAAE,GAAG,IAAIkI,EAAEH,EAAEI,SAASlC,OAAO,GAAG,EAAEiC,EAAE,CAAC,IAAI,IAAIE,EAAEjI,MAAM+H,GAAGG,EAAE,EAAEA,EAAEH,EAAEG,IAAID,EAAEC,GAAGnF,UAAUmF,EAAE,GAAGN,EAAEI,SAASC,EAAE,GAAGrC,GAAGA,EAAEuC,aAAa,IAAIR,KAAKI,EAAEnC,EAAEuC,kBAAe,IAASP,EAAED,KAAKC,EAAED,GAAGI,EAAEJ,IAAI,MAAM,CAACS,SAAShH,EAAEiH,KAAKzC,EAAExD,IAAIyF,EAAEN,IAAIO,EAAEvB,MAAMqB,EAAEU,OAAOnB,EAAEC,SACxU,SAASmB,EAAE3C,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEwC,WAAWhH,EAAqG,IAAIoH,EAAE,OAAO,SAASC,EAAE7C,EAAEC,GAAG,MAAM,kBAAkBD,GAAG,OAAOA,GAAG,MAAMA,EAAExD,IAA7K,SAAgBwD,GAAG,IAAIC,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAID,EAAE8C,QAAQ,SAAQ,SAAS9C,GAAG,OAAOC,EAAED,MAAmF+C,CAAO,GAAG/C,EAAExD,KAAKyD,EAAEvE,SAAS,IAC5W,SAASsH,EAAEhD,EAAEC,EAAEC,EAAE6B,EAAEC,GAAG,IAAIC,SAASjC,EAAK,cAAciC,GAAG,YAAYA,IAAEjC,EAAE,MAAK,IAAIkC,GAAE,EAAG,GAAG,OAAOlC,EAAEkC,GAAE,OAAQ,OAAOD,GAAG,IAAK,SAAS,IAAK,SAASC,GAAE,EAAG,MAAM,IAAK,SAAS,OAAOlC,EAAEwC,UAAU,KAAKhH,EAAE,KAAK0D,EAAEgD,GAAE,GAAI,GAAGA,EAAE,OAAWF,EAAEA,EAANE,EAAElC,GAASA,EAAE,KAAK+B,EAAE,IAAIc,EAAEX,EAAE,GAAGH,EAAE3H,MAAME,QAAQ0H,IAAI9B,EAAE,GAAG,MAAMF,IAAIE,EAAEF,EAAE8C,QAAQF,EAAE,OAAO,KAAKI,EAAEhB,EAAE/B,EAAEC,EAAE,IAAG,SAASF,GAAG,OAAOA,MAAK,MAAMgC,IAAIW,EAAEX,KAAKA,EAD/W,SAAWhC,EAAEC,GAAG,MAAM,CAACuC,SAAShH,EAAEiH,KAAKzC,EAAEyC,KAAKjG,IAAIyD,EAAE0B,IAAI3B,EAAE2B,IAAIhB,MAAMX,EAAEW,MAAM+B,OAAO1C,EAAE0C,QAC4RO,CAAEjB,EAAE9B,IAAI8B,EAAExF,KAAK0F,GAAGA,EAAE1F,MAAMwF,EAAExF,IAAI,IAAI,GAAGwF,EAAExF,KAAKsG,QAAQF,EAAE,OAAO,KAAK5C,IAAIC,EAAE9E,KAAK6G,IAAI,EAAyB,GAAvBE,EAAE,EAAEH,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAO3H,MAAME,QAAQ0F,GAAG,IAAI,IAAImC,EACzf,EAAEA,EAAEnC,EAAE/F,OAAOkI,IAAI,CAAQ,IAAIE,EAAEN,EAAEc,EAAfZ,EAAEjC,EAAEmC,GAAeA,GAAGD,GAAGc,EAAEf,EAAEhC,EAAEC,EAAEmC,EAAEL,QAAQ,GAAGK,EANhE,SAAWrC,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEF,GAAGE,EAAEF,IAAIE,EAAE,eAA0CA,EAAE,KAMlDkD,CAAElD,GAAG,oBAAoBqC,EAAE,IAAIrC,EAAEqC,EAAE1G,KAAKqE,GAAGmC,EAAE,IAAIF,EAAEjC,EAAE/E,QAAQC,MAA6BgH,GAAGc,EAA1Bf,EAAEA,EAAE7G,MAA0B6E,EAAEC,EAAtBmC,EAAEN,EAAEc,EAAEZ,EAAEE,KAAkBH,QAAQ,GAAG,WAAWC,EAAE,MAAMhC,EAAE,GAAGD,EAAEmB,MAAMpB,EAAE,GAAG,oBAAoBE,EAAE,qBAAqBxF,OAAO8D,KAAKyB,GAAG9B,KAAK,MAAM,IAAI+B,IAAI,OAAOiC,EAAE,SAASiB,EAAEnD,EAAEC,EAAEC,GAAG,GAAG,MAAMF,EAAE,OAAOA,EAAE,IAAI+B,EAAE,GAAGC,EAAE,EAAmD,OAAjDgB,EAAEhD,EAAE+B,EAAE,GAAG,IAAG,SAAS/B,GAAG,OAAOC,EAAEtE,KAAKuE,EAAEF,EAAEgC,QAAcD,EAC1Z,SAASqB,EAAEpD,GAAG,IAAI,IAAIA,EAAEqD,QAAQ,CAAC,IAAIpD,EAAED,EAAEsD,QAAQrD,EAAEA,IAAID,EAAEqD,QAAQ,EAAErD,EAAEsD,QAAQrD,EAAEA,EAAEpD,MAAK,SAASoD,GAAG,IAAID,EAAEqD,UAAUpD,EAAEA,EAAEsD,QAAQvD,EAAEqD,QAAQ,EAAErD,EAAEsD,QAAQrD,MAAI,SAASA,GAAG,IAAID,EAAEqD,UAAUrD,EAAEqD,QAAQ,EAAErD,EAAEsD,QAAQrD,MAAK,GAAG,IAAID,EAAEqD,QAAQ,OAAOrD,EAAEsD,QAAQ,MAAMtD,EAAEsD,QAAS,IAAIE,EAAE,CAAChC,QAAQ,MAAM,SAASiC,IAAI,IAAIzD,EAAEwD,EAAEhC,QAAQ,GAAG,OAAOxB,EAAE,MAAMmB,MAAMpB,EAAE,MAAM,OAAOC,EAAE,IAAI0D,EAAE,CAACC,uBAAuBH,EAAEI,wBAAwB,CAACC,WAAW,GAAGC,kBAAkBvC,EAAEwC,qBAAqB,CAACvC,SAAQ,GAAI7D,OAAOsB,GACjerF,EAAQoK,SAAS,CAAC/F,IAAIkF,EAAE9E,QAAQ,SAAS2B,EAAEC,EAAEC,GAAGiD,EAAEnD,GAAE,WAAWC,EAAE7C,MAAMH,KAAKE,aAAY+C,IAAI+D,MAAM,SAASjE,GAAG,IAAIC,EAAE,EAAuB,OAArBkD,EAAEnD,GAAE,WAAWC,OAAaA,GAAGiE,QAAQ,SAASlE,GAAG,OAAOmD,EAAEnD,GAAE,SAASA,GAAG,OAAOA,MAAK,IAAImE,KAAK,SAASnE,GAAG,IAAI2C,EAAE3C,GAAG,MAAMmB,MAAMpB,EAAE,MAAM,OAAOC,IAAIpG,EAAQwK,UAAU1D,EAAE9G,EAAQyK,cAAcrD,EAAEpH,EAAQ0K,mDAAmDZ,EAChX9J,EAAQ2K,aAAa,SAASvE,EAAEC,EAAEC,GAAG,GAAG,OAAOF,QAAG,IAASA,EAAE,MAAMmB,MAAMpB,EAAE,IAAIC,IAAI,IAAI+B,EAAE9C,EAAE,GAAGe,EAAEW,OAAOqB,EAAEhC,EAAExD,IAAIyF,EAAEjC,EAAE2B,IAAIO,EAAElC,EAAE0C,OAAO,GAAG,MAAMzC,EAAE,CAAoE,QAAnE,IAASA,EAAE0B,MAAMM,EAAEhC,EAAE0B,IAAIO,EAAEX,EAAEC,cAAS,IAASvB,EAAEzD,MAAMwF,EAAE,GAAG/B,EAAEzD,KAAQwD,EAAEyC,MAAMzC,EAAEyC,KAAKF,aAAa,IAAIJ,EAAEnC,EAAEyC,KAAKF,aAAa,IAAIF,KAAKpC,EAAEwB,EAAE9F,KAAKsE,EAAEoC,KAAKX,EAAEpE,eAAe+E,KAAKN,EAAEM,QAAG,IAASpC,EAAEoC,SAAI,IAASF,EAAEA,EAAEE,GAAGpC,EAAEoC,IAAI,IAAIA,EAAElF,UAAUlD,OAAO,EAAE,GAAG,IAAIoI,EAAEN,EAAEK,SAASlC,OAAO,GAAG,EAAEmC,EAAE,CAACF,EAAE/H,MAAMiI,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEC,IAAIH,EAAEG,GAAGnF,UAAUmF,EAAE,GAAGP,EAAEK,SAASD,EAAE,MAAM,CAACK,SAAShH,EAAEiH,KAAKzC,EAAEyC,KACxfjG,IAAIwF,EAAEL,IAAIM,EAAEtB,MAAMoB,EAAEW,OAAOR,IAAItI,EAAQ4K,cAAc,SAASxE,EAAEC,GAA8K,YAA3K,IAASA,IAAIA,EAAE,OAAMD,EAAE,CAACwC,SAASjD,EAAEkF,sBAAsBxE,EAAEyE,cAAc1E,EAAE2E,eAAe3E,EAAE4E,aAAa,EAAEC,SAAS,KAAKC,SAAS,OAAQD,SAAS,CAACrC,SAASlD,EAAEyF,SAAS/E,GAAUA,EAAE8E,SAAS9E,GAAGpG,EAAQoL,cAAclD,EAAElI,EAAQqL,cAAc,SAASjF,GAAG,IAAIC,EAAE6B,EAAEoD,KAAK,KAAKlF,GAAY,OAATC,EAAEwC,KAAKzC,EAASC,GAAGrG,EAAQuL,UAAU,WAAW,MAAM,CAAC3D,QAAQ,OAAO5H,EAAQwL,WAAW,SAASpF,GAAG,MAAM,CAACwC,SAAShD,EAAE6F,OAAOrF,IAAIpG,EAAQ0L,eAAe3C,EAC3e/I,EAAQ2L,KAAK,SAASvF,GAAG,MAAM,CAACwC,SAAS7C,EAAE6F,SAAS,CAACnC,SAAS,EAAEC,QAAQtD,GAAGyF,MAAMrC,IAAIxJ,EAAQ8L,KAAK,SAAS1F,EAAEC,GAAG,MAAM,CAACuC,SAAS9C,EAAE+C,KAAKzC,EAAE2F,aAAQ,IAAS1F,EAAE,KAAKA,IAAIrG,EAAQgM,YAAY,SAAS5F,EAAEC,GAAG,OAAOwD,IAAImC,YAAY5F,EAAEC,IAAIrG,EAAQiM,WAAW,SAAS7F,EAAEC,GAAG,OAAOwD,IAAIoC,WAAW7F,EAAEC,IAAIrG,EAAQkM,cAAc,aAAalM,EAAQmM,UAAU,SAAS/F,EAAEC,GAAG,OAAOwD,IAAIsC,UAAU/F,EAAEC,IAAIrG,EAAQoM,oBAAoB,SAAShG,EAAEC,EAAEC,GAAG,OAAOuD,IAAIuC,oBAAoBhG,EAAEC,EAAEC,IAC9ctG,EAAQqM,gBAAgB,SAASjG,EAAEC,GAAG,OAAOwD,IAAIwC,gBAAgBjG,EAAEC,IAAIrG,EAAQsM,QAAQ,SAASlG,EAAEC,GAAG,OAAOwD,IAAIyC,QAAQlG,EAAEC,IAAIrG,EAAQuM,WAAW,SAASnG,EAAEC,EAAEC,GAAG,OAAOuD,IAAI0C,WAAWnG,EAAEC,EAAEC,IAAItG,EAAQwM,OAAO,SAASpG,GAAG,OAAOyD,IAAI2C,OAAOpG,IAAIpG,EAAQyM,SAAS,SAASrG,GAAG,OAAOyD,IAAI4C,SAASrG,IAAIpG,EAAQ0M,QAAQ,U,6BCXxS,IAAIC,EAAG1M,EAAQ,GAASyI,EAAEzI,EAAQ,GAAiB0F,EAAE1F,EAAQ,GAAa,SAASqJ,EAAElD,GAAG,IAAI,IAAIC,EAAE,yDAAyDD,EAAEE,EAAE,EAAEA,EAAE/C,UAAUlD,OAAOiG,IAAID,GAAG,WAAWE,mBAAmBhD,UAAU+C,IAAI,MAAM,yBAAyBF,EAAE,WAAWC,EAAE,iHAAiH,IAAIsG,EAAG,MAAMpF,MAAM+B,EAAE,MAAM,IAAIsD,EAAG,IAAIC,IAAIC,EAAG,GAAG,SAASC,EAAG3G,EAAEC,GAAG2G,EAAG5G,EAAEC,GAAG2G,EAAG5G,EAAE,UAAUC,GAC3e,SAAS2G,EAAG5G,EAAEC,GAAW,IAARyG,EAAG1G,GAAGC,EAAMD,EAAE,EAAEA,EAAEC,EAAEhG,OAAO+F,IAAIwG,EAAGK,IAAI5G,EAAED,IACzD,IAAI8G,IAAK,qBAAqBC,QAAQ,qBAAqBA,OAAOC,UAAU,qBAAqBD,OAAOC,SAAShC,eAAeiC,EAAG,8VAA8VC,EAAGzM,OAAOgB,UAAU6B,eACrf6J,EAAG,GAAGC,EAAG,GAC+M,SAAS3G,EAAET,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,EAAEF,GAAGlF,KAAKoK,gBAAgB,IAAIpH,GAAG,IAAIA,GAAG,IAAIA,EAAEhD,KAAKqK,cAActF,EAAE/E,KAAKsK,mBAAmBxF,EAAE9E,KAAKuK,gBAAgBtH,EAAEjD,KAAKwK,aAAazH,EAAE/C,KAAKwF,KAAKxC,EAAEhD,KAAKyK,YAAYrF,EAAEpF,KAAK0K,kBAAkBxF,EAAE,IAAIpB,EAAE,GACnb,uIAAuI3C,MAAM,KAAKC,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,MAAM,CAAC,CAAC,gBAAgB,kBAAkB,CAAC,YAAY,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,eAAe3B,SAAQ,SAAS2B,GAAG,IAAIC,EAAED,EAAE,GAAGe,EAAEd,GAAG,IAAIQ,EAAER,EAAE,GAAE,EAAGD,EAAE,GAAG,MAAK,GAAG,MAAM,CAAC,kBAAkB,YAAY,aAAa,SAAS3B,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE4H,cAAc,MAAK,GAAG,MACve,CAAC,cAAc,4BAA4B,YAAY,iBAAiBvJ,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,MAAM,8OAA8O5B,MAAM,KAAKC,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE4H,cAAc,MAAK,GAAG,MACrb,CAAC,UAAU,WAAW,QAAQ,YAAYvJ,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,MAAM,CAAC,UAAU,YAAY3B,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,MAAM,CAAC,OAAO,OAAO,OAAO,QAAQ3B,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,MAAM,CAAC,UAAU,SAAS3B,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE4H,cAAc,MAAK,GAAG,MAAM,IAAIC,EAAG,gBAAgB,SAASC,EAAG9H,GAAG,OAAOA,EAAE,GAAG+H,cAI3Y,SAASC,EAAGhI,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAEhB,EAAEzD,eAAe2C,GAAGc,EAAEd,GAAG,MAAW,OAAO8B,EAAE,IAAIA,EAAEU,MAAKT,IAAO,EAAE/B,EAAEhG,SAAS,MAAMgG,EAAE,IAAI,MAAMA,EAAE,MAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,QAPnJ,SAAYD,EAAEC,EAAEC,EAAE8B,GAAG,GAAG,OAAO/B,GAAG,qBAAqBA,GADwE,SAAYD,EAAEC,EAAEC,EAAE8B,GAAG,GAAG,OAAO9B,GAAG,IAAIA,EAAEuC,KAAK,OAAM,EAAG,cAAcxC,GAAG,IAAK,WAAW,IAAK,SAAS,OAAM,EAAG,IAAK,UAAU,OAAG+B,IAAc,OAAO9B,GAASA,EAAEmH,gBAAmD,WAAnCrH,EAAEA,EAAE4H,cAAchM,MAAM,EAAE,KAAsB,UAAUoE,GAAE,QAAQ,OAAM,GAC/TiI,CAAGjI,EAAEC,EAAEC,EAAE8B,GAAG,OAAM,EAAG,GAAGA,EAAE,OAAM,EAAG,GAAG,OAAO9B,EAAE,OAAOA,EAAEuC,MAAM,KAAK,EAAE,OAAOxC,EAAE,KAAK,EAAE,OAAM,IAAKA,EAAE,KAAK,EAAE,OAAOiI,MAAMjI,GAAG,KAAK,EAAE,OAAOiI,MAAMjI,IAAI,EAAEA,EAAE,OAAM,EAOrDkI,CAAGlI,EAAEC,EAAE6B,EAAEC,KAAK9B,EAAE,MAAM8B,GAAG,OAAOD,EARpL,SAAY/B,GAAG,QAAGkH,EAAGvL,KAAKyL,EAAGpH,KAAekH,EAAGvL,KAAKwL,EAAGnH,KAAeiH,EAAGjL,KAAKgE,GAAUoH,EAAGpH,IAAG,GAAGmH,EAAGnH,IAAG,GAAS,IAQsEoI,CAAGnI,KAAK,OAAOC,EAAEF,EAAEqI,gBAAgBpI,GAAGD,EAAEsI,aAAarI,EAAE,GAAGC,IAAI6B,EAAEyF,gBAAgBxH,EAAE+B,EAAE0F,cAAc,OAAOvH,EAAE,IAAI6B,EAAEU,MAAQ,GAAGvC,GAAGD,EAAE8B,EAAEuF,cAActF,EAAED,EAAEwF,mBAAmB,OAAOrH,EAAEF,EAAEqI,gBAAgBpI,IAAaC,EAAE,KAAX6B,EAAEA,EAAEU,OAAc,IAAIV,IAAG,IAAK7B,EAAE,GAAG,GAAGA,EAAE8B,EAAEhC,EAAEuI,eAAevG,EAAE/B,EAAEC,GAAGF,EAAEsI,aAAarI,EAAEC,MAH5d,0jCAA0jC9B,MAAM,KAAKC,SAAQ,SAAS2B,GAAG,IAAIC,EAAED,EAAE8C,QAAQ+E,EACzmCC,GAAI/G,EAAEd,GAAG,IAAIQ,EAAER,EAAE,GAAE,EAAGD,EAAE,MAAK,GAAG,MAAM,2EAA2E5B,MAAM,KAAKC,SAAQ,SAAS2B,GAAG,IAAIC,EAAED,EAAE8C,QAAQ+E,EAAGC,GAAI/G,EAAEd,GAAG,IAAIQ,EAAER,EAAE,GAAE,EAAGD,EAAE,gCAA+B,GAAG,MAAM,CAAC,WAAW,WAAW,aAAa3B,SAAQ,SAAS2B,GAAG,IAAIC,EAAED,EAAE8C,QAAQ+E,EAAGC,GAAI/G,EAAEd,GAAG,IAAIQ,EAAER,EAAE,GAAE,EAAGD,EAAE,wCAAuC,GAAG,MAAM,CAAC,WAAW,eAAe3B,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE4H,cAAc,MAAK,GAAG,MAC/c7G,EAAEyH,UAAU,IAAI/H,EAAE,YAAY,GAAE,EAAG,aAAa,gCAA+B,GAAG,GAAI,CAAC,MAAM,OAAO,SAAS,cAAcpC,SAAQ,SAAS2B,GAAGe,EAAEf,GAAG,IAAIS,EAAET,EAAE,GAAE,EAAGA,EAAE4H,cAAc,MAAK,GAAG,MAEzL,IAAIa,EAAGlC,EAAGjC,mDAAmDoE,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAAMC,EAAG,MAChN,GAAG,oBAAoBnP,QAAQA,OAAOqF,IAAI,CAAC,IAAIoB,EAAEzG,OAAOqF,IAAI8I,EAAG1H,EAAE,iBAAiB2H,EAAG3H,EAAE,gBAAgB4H,EAAG5H,EAAE,kBAAkB6H,EAAG7H,EAAE,qBAAqB8H,EAAG9H,EAAE,kBAAkB+H,EAAG/H,EAAE,kBAAkBgI,EAAGhI,EAAE,iBAAiBiI,EAAGjI,EAAE,qBAAqBkI,EAAGlI,EAAE,kBAAkBmI,EAAGnI,EAAE,uBAAuBoI,EAAGpI,EAAE,cAAcqI,EAAGrI,EAAE,cAAcsI,EAAGtI,EAAE,eAAeA,EAAE,eAAeuI,EAAGvI,EAAE,mBAAmBwI,EAAGxI,EAAE,0BAA0ByI,EAAGzI,EAAE,mBAAmB0I,EAAG1I,EAAE,uBACxc,IAAmL2I,EAA/KC,EAAG,oBAAoBrP,QAAQA,OAAOC,SAAS,SAASqP,EAAG7J,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAwC,oBAAnCA,EAAE4J,GAAI5J,EAAE4J,IAAK5J,EAAE,eAA0CA,EAAE,KAAY,SAAS8J,EAAG9J,GAAG,QAAG,IAAS2J,EAAG,IAAI,MAAMxI,QAAS,MAAMjB,GAAG,IAAID,EAAEC,EAAE6J,MAAMC,OAAOC,MAAM,gBAAgBN,EAAG1J,GAAGA,EAAE,IAAI,GAAG,MAAM,KAAK0J,EAAG3J,EAAE,IAAIkK,GAAG,EACjU,SAASC,EAAGnK,EAAEC,GAAG,IAAID,GAAGkK,EAAG,MAAM,GAAGA,GAAG,EAAG,IAAIhK,EAAEiB,MAAMiJ,kBAAkBjJ,MAAMiJ,uBAAkB,EAAO,IAAI,GAAGnK,EAAE,GAAGA,EAAE,WAAW,MAAMkB,SAAU1G,OAAO4P,eAAepK,EAAExE,UAAU,QAAQ,CAAC6O,IAAI,WAAW,MAAMnJ,WAAY,kBAAkBoJ,SAASA,QAAQC,UAAU,CAAC,IAAID,QAAQC,UAAUvK,EAAE,IAAI,MAAMgC,GAAG,IAAID,EAAEC,EAAEsI,QAAQC,UAAUxK,EAAE,GAAGC,OAAO,CAAC,IAAIA,EAAEtE,OAAO,MAAMsG,GAAGD,EAAEC,EAAEjC,EAAErE,KAAKsE,EAAExE,eAAe,CAAC,IAAI,MAAM0F,QAAS,MAAMc,GAAGD,EAAEC,EAAEjC,KAAK,MAAMiC,GAAG,GAAGA,GAAGD,GAAG,kBAAkBC,EAAE8H,MAAM,CAAC,IAAI,IAAIhI,EAAEE,EAAE8H,MAAM3L,MAAM,MACnfiE,EAAEL,EAAE+H,MAAM3L,MAAM,MAAM+D,EAAEJ,EAAE9H,OAAO,EAAEiI,EAAEG,EAAEpI,OAAO,EAAE,GAAGkI,GAAG,GAAGD,GAAGH,EAAEI,KAAKE,EAAEH,IAAIA,IAAI,KAAK,GAAGC,GAAG,GAAGD,EAAEC,IAAID,IAAI,GAAGH,EAAEI,KAAKE,EAAEH,GAAG,CAAC,GAAG,IAAIC,GAAG,IAAID,EAAG,GAAG,GAAGC,IAAQ,IAAJD,GAASH,EAAEI,KAAKE,EAAEH,GAAG,MAAM,KAAKH,EAAEI,GAAGW,QAAQ,WAAW,cAAc,GAAGX,GAAG,GAAGD,GAAG,QAD3H,QAC2IgI,GAAG,EAAG/I,MAAMiJ,kBAAkBlK,EAAE,OAAOF,EAAEA,EAAEA,EAAEyK,aAAazK,EAAElE,KAAK,IAAIgO,EAAG9J,GAAG,GAC7T,SAAS0K,EAAG1K,GAAG,OAAOA,EAAE2K,KAAK,KAAK,EAAE,OAAOb,EAAG9J,EAAEyC,MAAM,KAAK,GAAG,OAAOqH,EAAG,QAAQ,KAAK,GAAG,OAAOA,EAAG,YAAY,KAAK,GAAG,OAAOA,EAAG,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAO9J,EAAEmK,EAAGnK,EAAEyC,MAAK,GAAM,KAAK,GAAG,OAAOzC,EAAEmK,EAAGnK,EAAEyC,KAAK4C,QAAO,GAAM,KAAK,GAAG,OAAOrF,EAAEmK,EAAGnK,EAAEyC,KAAKmI,SAAQ,GAAM,KAAK,EAAE,OAAO5K,EAAEmK,EAAGnK,EAAEyC,MAAK,GAAM,QAAQ,MAAM,IAC9T,SAASoI,EAAG7K,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,oBAAoBA,EAAE,OAAOA,EAAEyK,aAAazK,EAAElE,MAAM,KAAK,GAAG,kBAAkBkE,EAAE,OAAOA,EAAE,OAAOA,GAAG,KAAK4I,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,SAAS,KAAKG,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,aAAa,KAAKK,EAAG,MAAM,WAAW,KAAKC,EAAG,MAAM,eAAe,GAAG,kBAAkBnJ,EAAE,OAAOA,EAAEwC,UAAU,KAAKwG,EAAG,OAAOhJ,EAAEyK,aAAa,WAAW,YAAY,KAAK1B,EAAG,OAAO/I,EAAE+E,SAAS0F,aAAa,WAAW,YAAY,KAAKxB,EAAG,IAAIhJ,EAAED,EAAEqF,OACnd,OAD0dpF,EAAEA,EAAEwK,aAAaxK,EAAEnE,MAAM,GAC5ekE,EAAEyK,cAAc,KAAKxK,EAAE,cAAcA,EAAE,IAAI,cAAc,KAAKmJ,EAAG,OAAOyB,EAAG7K,EAAEyC,MAAM,KAAK6G,EAAG,OAAOuB,EAAG7K,EAAE4K,SAAS,KAAKvB,EAAGpJ,EAAED,EAAEwF,SAASxF,EAAEA,EAAEyF,MAAM,IAAI,OAAOoF,EAAG7K,EAAEC,IAAI,MAAMC,KAAK,OAAO,KAAK,SAAS4K,EAAG9K,GAAG,cAAcA,GAAG,IAAK,UAAU,IAAK,SAAS,IAAK,SAAS,IAAK,SAAS,IAAK,YAAY,OAAOA,EAAE,QAAQ,MAAM,IAAI,SAAS+K,EAAG/K,GAAG,IAAIC,EAAED,EAAEyC,KAAK,OAAOzC,EAAEA,EAAEgL,WAAW,UAAUhL,EAAE4H,gBAAgB,aAAa3H,GAAG,UAAUA,GAE1Z,SAASgL,EAAGjL,GAAGA,EAAEkL,gBAAgBlL,EAAEkL,cADvD,SAAYlL,GAAG,IAAIC,EAAE8K,EAAG/K,GAAG,UAAU,QAAQE,EAAEzF,OAAO0Q,yBAAyBnL,EAAEnE,YAAYJ,UAAUwE,GAAG+B,EAAE,GAAGhC,EAAEC,GAAG,IAAID,EAAE1C,eAAe2C,IAAI,qBAAqBC,GAAG,oBAAoBA,EAAEkL,KAAK,oBAAoBlL,EAAEoK,IAAI,CAAC,IAAIvI,EAAE7B,EAAEkL,IAAI/I,EAAEnC,EAAEoK,IAAiL,OAA7K7P,OAAO4P,eAAerK,EAAEC,EAAE,CAACoL,cAAa,EAAGD,IAAI,WAAW,OAAOrJ,EAAEpG,KAAKsB,OAAOqN,IAAI,SAAStK,GAAGgC,EAAE,GAAGhC,EAAEqC,EAAE1G,KAAKsB,KAAK+C,MAAMvF,OAAO4P,eAAerK,EAAEC,EAAE,CAACqL,WAAWpL,EAAEoL,aAAmB,CAACC,SAAS,WAAW,OAAOvJ,GAAGwJ,SAAS,SAASxL,GAAGgC,EAAE,GAAGhC,GAAGyL,aAAa,WAAWzL,EAAEkL,cACxf,YAAYlL,EAAEC,MAAuDyL,CAAG1L,IAAI,SAAS2L,EAAG3L,GAAG,IAAIA,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAEkL,cAAc,IAAIjL,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAEsL,WAAevJ,EAAE,GAAqD,OAAlDhC,IAAIgC,EAAE+I,EAAG/K,GAAGA,EAAE4L,QAAQ,OAAO,QAAQ5L,EAAE5E,QAAO4E,EAAEgC,KAAa9B,IAAGD,EAAEuL,SAASxL,IAAG,GAAO,SAAS6L,EAAG7L,GAAwD,GAAG,qBAAxDA,EAAEA,IAAI,qBAAqBgH,SAASA,cAAS,IAAkC,OAAO,KAAK,IAAI,OAAOhH,EAAE8L,eAAe9L,EAAE+L,KAAK,MAAM9L,GAAG,OAAOD,EAAE+L,MAC/Z,SAASC,EAAGhM,EAAEC,GAAG,IAAIC,EAAED,EAAE2L,QAAQ,OAAOtJ,EAAE,GAAGrC,EAAE,CAACgM,oBAAe,EAAOC,kBAAa,EAAO9Q,WAAM,EAAOwQ,QAAQ,MAAM1L,EAAEA,EAAEF,EAAEmM,cAAcC,iBAAiB,SAASC,GAAGrM,EAAEC,GAAG,IAAIC,EAAE,MAAMD,EAAEiM,aAAa,GAAGjM,EAAEiM,aAAalK,EAAE,MAAM/B,EAAE2L,QAAQ3L,EAAE2L,QAAQ3L,EAAEgM,eAAe/L,EAAE4K,EAAG,MAAM7K,EAAE7E,MAAM6E,EAAE7E,MAAM8E,GAAGF,EAAEmM,cAAc,CAACC,eAAepK,EAAEsK,aAAapM,EAAEqM,WAAW,aAAatM,EAAEwC,MAAM,UAAUxC,EAAEwC,KAAK,MAAMxC,EAAE2L,QAAQ,MAAM3L,EAAE7E,OAAO,SAASoR,GAAGxM,EAAEC,GAAe,OAAZA,EAAEA,EAAE2L,UAAiB5D,EAAGhI,EAAE,UAAUC,GAAE,GAC3d,SAASwM,GAAGzM,EAAEC,GAAGuM,GAAGxM,EAAEC,GAAG,IAAIC,EAAE4K,EAAG7K,EAAE7E,OAAO4G,EAAE/B,EAAEwC,KAAK,GAAG,MAAMvC,EAAK,WAAW8B,GAAM,IAAI9B,GAAG,KAAKF,EAAE5E,OAAO4E,EAAE5E,OAAO8E,KAAEF,EAAE5E,MAAM,GAAG8E,GAAOF,EAAE5E,QAAQ,GAAG8E,IAAIF,EAAE5E,MAAM,GAAG8E,QAAQ,GAAG,WAAW8B,GAAG,UAAUA,EAA8B,YAA3BhC,EAAEqI,gBAAgB,SAAgBpI,EAAE3C,eAAe,SAASoP,GAAG1M,EAAEC,EAAEwC,KAAKvC,GAAGD,EAAE3C,eAAe,iBAAiBoP,GAAG1M,EAAEC,EAAEwC,KAAKqI,EAAG7K,EAAEiM,eAAe,MAAMjM,EAAE2L,SAAS,MAAM3L,EAAEgM,iBAAiBjM,EAAEiM,iBAAiBhM,EAAEgM,gBACnZ,SAASU,GAAG3M,EAAEC,EAAEC,GAAG,GAAGD,EAAE3C,eAAe,UAAU2C,EAAE3C,eAAe,gBAAgB,CAAC,IAAI0E,EAAE/B,EAAEwC,KAAK,KAAK,WAAWT,GAAG,UAAUA,QAAG,IAAS/B,EAAE7E,OAAO,OAAO6E,EAAE7E,OAAO,OAAO6E,EAAE,GAAGD,EAAEmM,cAAcG,aAAapM,GAAGD,IAAID,EAAE5E,QAAQ4E,EAAE5E,MAAM6E,GAAGD,EAAEkM,aAAajM,EAAW,MAATC,EAAEF,EAAElE,QAAckE,EAAElE,KAAK,IAAIkE,EAAEiM,iBAAiBjM,EAAEmM,cAAcC,eAAe,KAAKlM,IAAIF,EAAElE,KAAKoE,GACvV,SAASwM,GAAG1M,EAAEC,EAAEC,GAAM,WAAWD,GAAG4L,EAAG7L,EAAE4M,iBAAiB5M,IAAE,MAAME,EAAEF,EAAEkM,aAAa,GAAGlM,EAAEmM,cAAcG,aAAatM,EAAEkM,eAAe,GAAGhM,IAAIF,EAAEkM,aAAa,GAAGhM,IAAwF,SAAS2M,GAAG7M,EAAEC,GAA6D,OAA1DD,EAAEsC,EAAE,CAACF,cAAS,GAAQnC,IAAMA,EAAlI,SAAYD,GAAG,IAAIC,EAAE,GAAuD,OAApDsG,EAAGvC,SAAS3F,QAAQ2B,GAAE,SAASA,GAAG,MAAMA,IAAIC,GAAGD,MAAYC,EAAiD6M,CAAG7M,EAAEmC,aAAUpC,EAAEoC,SAASnC,GAASD,EACvU,SAAS+M,GAAG/M,EAAEC,EAAEC,EAAE8B,GAAe,GAAZhC,EAAEA,EAAEgN,QAAW/M,EAAE,CAACA,EAAE,GAAG,IAAI,IAAI8B,EAAE,EAAEA,EAAE7B,EAAEjG,OAAO8H,IAAI9B,EAAE,IAAIC,EAAE6B,KAAI,EAAG,IAAI7B,EAAE,EAAEA,EAAEF,EAAE/F,OAAOiG,IAAI6B,EAAE9B,EAAE3C,eAAe,IAAI0C,EAAEE,GAAG9E,OAAO4E,EAAEE,GAAG+M,WAAWlL,IAAI/B,EAAEE,GAAG+M,SAASlL,GAAGA,GAAGC,IAAIhC,EAAEE,GAAGgN,iBAAgB,OAAQ,CAAmB,IAAlBhN,EAAE,GAAG4K,EAAG5K,GAAGD,EAAE,KAAS8B,EAAE,EAAEA,EAAE/B,EAAE/F,OAAO8H,IAAI,CAAC,GAAG/B,EAAE+B,GAAG3G,QAAQ8E,EAAiD,OAA9CF,EAAE+B,GAAGkL,UAAS,OAAGjL,IAAIhC,EAAE+B,GAAGmL,iBAAgB,IAAW,OAAOjN,GAAGD,EAAE+B,GAAGoL,WAAWlN,EAAED,EAAE+B,IAAI,OAAO9B,IAAIA,EAAEgN,UAAS,IACpY,SAASG,GAAGpN,EAAEC,GAAG,GAAG,MAAMA,EAAEoN,wBAAwB,MAAMlM,MAAM+B,EAAE,KAAK,OAAOZ,EAAE,GAAGrC,EAAE,CAAC7E,WAAM,EAAO8Q,kBAAa,EAAO9J,SAAS,GAAGpC,EAAEmM,cAAcG,eAAe,SAASgB,GAAGtN,EAAEC,GAAG,IAAIC,EAAED,EAAE7E,MAAM,GAAG,MAAM8E,EAAE,CAA+B,GAA9BA,EAAED,EAAEmC,SAASnC,EAAEA,EAAEiM,aAAgB,MAAMhM,EAAE,CAAC,GAAG,MAAMD,EAAE,MAAMkB,MAAM+B,EAAE,KAAK,GAAG9I,MAAME,QAAQ4F,GAAG,CAAC,KAAK,GAAGA,EAAEjG,QAAQ,MAAMkH,MAAM+B,EAAE,KAAKhD,EAAEA,EAAE,GAAGD,EAAEC,EAAE,MAAMD,IAAIA,EAAE,IAAIC,EAAED,EAAED,EAAEmM,cAAc,CAACG,aAAaxB,EAAG5K,IAC/Y,SAASqN,GAAGvN,EAAEC,GAAG,IAAIC,EAAE4K,EAAG7K,EAAE7E,OAAO4G,EAAE8I,EAAG7K,EAAEiM,cAAc,MAAMhM,KAAIA,EAAE,GAAGA,KAAMF,EAAE5E,QAAQ4E,EAAE5E,MAAM8E,GAAG,MAAMD,EAAEiM,cAAclM,EAAEkM,eAAehM,IAAIF,EAAEkM,aAAahM,IAAI,MAAM8B,IAAIhC,EAAEkM,aAAa,GAAGlK,GAAG,SAASwL,GAAGxN,GAAG,IAAIC,EAAED,EAAEyN,YAAYxN,IAAID,EAAEmM,cAAcG,cAAc,KAAKrM,GAAG,OAAOA,IAAID,EAAE5E,MAAM6E,GAAG,IAAIyN,GAAS,+BAATA,GAAwF,6BAC9X,SAASC,GAAG3N,GAAG,OAAOA,GAAG,IAAK,MAAM,MAAM,6BAA6B,IAAK,OAAO,MAAM,qCAAqC,QAAQ,MAAM,gCAAgC,SAAS4N,GAAG5N,EAAEC,GAAG,OAAO,MAAMD,GAAG,iCAAiCA,EAAE2N,GAAG1N,GAAG,+BAA+BD,GAAG,kBAAkBC,EAAE,+BAA+BD,EAC3U,IAAI6N,GAAe7N,GAAZ8N,IAAY9N,GAAsJ,SAASA,EAAEC,GAAG,GAAGD,EAAE+N,eAAeL,IAAQ,cAAc1N,EAAEA,EAAEgO,UAAU/N,MAAM,CAA2F,KAA1F4N,GAAGA,IAAI7G,SAAShC,cAAc,QAAUgJ,UAAU,QAAQ/N,EAAEgO,UAAUvS,WAAW,SAAauE,EAAE4N,GAAGK,WAAWlO,EAAEkO,YAAYlO,EAAEmO,YAAYnO,EAAEkO,YAAY,KAAKjO,EAAEiO,YAAYlO,EAAEoO,YAAYnO,EAAEiO,cAArZ,qBAAqBG,OAAOA,MAAMC,wBAAwB,SAASrO,EAAEC,EAAE8B,EAAED,GAAGsM,MAAMC,yBAAwB,WAAW,OAAOtO,GAAEC,EAAEC,OAAUF,IACtK,SAASuO,GAAGvO,EAAEC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEF,EAAEkO,WAAW,GAAGhO,GAAGA,IAAIF,EAAEwO,WAAW,IAAItO,EAAEuO,SAAwB,YAAdvO,EAAEwO,UAAUzO,GAAUD,EAAEyN,YAAYxN,EACrH,IAAI0O,GAAG,CAACC,yBAAwB,EAAGC,mBAAkB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,SAAQ,EAAGC,cAAa,EAAGC,iBAAgB,EAAGC,aAAY,EAAGC,SAAQ,EAAGC,MAAK,EAAGC,UAAS,EAAGC,cAAa,EAAGC,YAAW,EAAGC,cAAa,EAAGC,WAAU,EAAGC,UAAS,EAAGC,SAAQ,EAAGC,YAAW,EAAGC,aAAY,EAAGC,cAAa,EAAGC,YAAW,EAAGC,eAAc,EAAGC,gBAAe,EAAGC,iBAAgB,EAAGC,YAAW,EAAGC,WAAU,EAAGC,YAAW,EAAGC,SAAQ,EAAGC,OAAM,EAAGC,SAAQ,EAAGC,SAAQ,EAAGC,QAAO,EAAGC,QAAO,EAAGC,MAAK,EAAGC,aAAY,EAC1fC,cAAa,EAAGC,aAAY,EAAGC,iBAAgB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,eAAc,EAAGC,aAAY,GAAIC,GAAG,CAAC,SAAS,KAAK,MAAM,KAA6H,SAASC,GAAGvR,EAAEC,EAAEC,GAAG,OAAO,MAAMD,GAAG,mBAAmBA,GAAG,KAAKA,EAAE,GAAGC,GAAG,kBAAkBD,GAAG,IAAIA,GAAG0O,GAAGrR,eAAe0C,IAAI2O,GAAG3O,IAAI,GAAGC,GAAG+J,OAAO/J,EAAE,KAC9Z,SAASuR,GAAGxR,EAAEC,GAAa,IAAI,IAAIC,KAAlBF,EAAEA,EAAEyR,MAAmBxR,EAAE,GAAGA,EAAE3C,eAAe4C,GAAG,CAAC,IAAI8B,EAAE,IAAI9B,EAAEwR,QAAQ,MAAM3P,EAAEwP,GAAGrR,EAAED,EAAEC,GAAG8B,GAAG,UAAU9B,IAAIA,EAAE,YAAY8B,EAAEhC,EAAE2R,YAAYzR,EAAE6B,GAAG/B,EAAEE,GAAG6B,GADTtH,OAAO8D,KAAKoQ,IAAItQ,SAAQ,SAAS2B,GAAGsR,GAAGjT,SAAQ,SAAS4B,GAAGA,EAAEA,EAAED,EAAE4R,OAAO,GAAG7J,cAAc/H,EAAE6R,UAAU,GAAGlD,GAAG1O,GAAG0O,GAAG3O,SACrG,IAAI8R,GAAGxP,EAAE,CAACyP,UAAS,GAAI,CAACC,MAAK,EAAGC,MAAK,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,QAAO,EAAGC,MAAK,EAAGC,MAAK,EAAGC,OAAM,EAAGjU,QAAO,EAAGkU,OAAM,EAAGC,KAAI,IAClT,SAASC,GAAG9S,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAG6R,GAAG9R,KAAK,MAAMC,EAAEmC,UAAU,MAAMnC,EAAEoN,yBAAyB,MAAMlM,MAAM+B,EAAE,IAAIlD,IAAI,GAAG,MAAMC,EAAEoN,wBAAwB,CAAC,GAAG,MAAMpN,EAAEmC,SAAS,MAAMjB,MAAM+B,EAAE,KAAK,GAAK,kBAAkBjD,EAAEoN,2BAAyB,WAAWpN,EAAEoN,yBAAyB,MAAMlM,MAAM+B,EAAE,KAAM,GAAG,MAAMjD,EAAEwR,OAAO,kBAAkBxR,EAAEwR,MAAM,MAAMtQ,MAAM+B,EAAE,MAC5V,SAAS6P,GAAG/S,EAAEC,GAAG,IAAI,IAAID,EAAE0R,QAAQ,KAAK,MAAM,kBAAkBzR,EAAE+S,GAAG,OAAOhT,GAAG,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,YAAY,IAAK,gBAAgB,IAAK,gBAAgB,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,gBAAgB,OAAM,EAAG,QAAQ,OAAM,GAAI,SAASiT,GAAGjT,GAA6F,OAA1FA,EAAEA,EAAEvB,QAAQuB,EAAEkT,YAAYnM,QAASoM,0BAA0BnT,EAAEA,EAAEmT,yBAAgC,IAAInT,EAAEyO,SAASzO,EAAEoT,WAAWpT,EAAE,IAAIqT,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACxb,SAASC,GAAGxT,GAAG,GAAGA,EAAEyT,GAAGzT,GAAG,CAAC,GAAG,oBAAoBqT,GAAG,MAAMlS,MAAM+B,EAAE,MAAM,IAAIjD,EAAED,EAAE0T,UAAUzT,IAAIA,EAAE0T,GAAG1T,GAAGoT,GAAGrT,EAAE0T,UAAU1T,EAAEyC,KAAKxC,KAAK,SAAS2T,GAAG5T,GAAGsT,GAAGC,GAAGA,GAAGpY,KAAK6E,GAAGuT,GAAG,CAACvT,GAAGsT,GAAGtT,EAAE,SAAS6T,KAAK,GAAGP,GAAG,CAAC,IAAItT,EAAEsT,GAAGrT,EAAEsT,GAAoB,GAAjBA,GAAGD,GAAG,KAAKE,GAAGxT,GAAMC,EAAE,IAAID,EAAE,EAAEA,EAAEC,EAAEhG,OAAO+F,IAAIwT,GAAGvT,EAAED,KAAK,SAAS8T,GAAG9T,EAAEC,GAAG,OAAOD,EAAEC,GAAG,SAAS8T,GAAG/T,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,OAAO/B,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,SAASiS,MAAM,IAAIC,GAAGH,GAAGI,IAAG,EAAGC,IAAG,EAAG,SAASC,KAAQ,OAAOd,IAAI,OAAOC,KAAGS,KAAKH,MAE9Z,SAASQ,GAAGrU,EAAEC,GAAG,IAAIC,EAAEF,EAAE0T,UAAU,GAAG,OAAOxT,EAAE,OAAO,KAAK,IAAI8B,EAAE2R,GAAGzT,GAAG,GAAG,OAAO8B,EAAE,OAAO,KAAK9B,EAAE8B,EAAE/B,GAAGD,EAAE,OAAOC,GAAG,IAAK,UAAU,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,uBAAuB,IAAK,cAAc,IAAK,qBAAqB,IAAK,cAAc,IAAK,qBAAqB,IAAK,YAAY,IAAK,mBAAmB,IAAK,gBAAgB+B,GAAGA,EAAEmL,YAAqBnL,IAAI,YAAbhC,EAAEA,EAAEyC,OAAuB,UAAUzC,GAAG,WAAWA,GAAG,aAAaA,IAAIA,GAAGgC,EAAE,MAAMhC,EAAE,QAAQA,GAAE,EAAG,GAAGA,EAAE,OAAO,KAAK,GAAGE,GAAG,oBACleA,EAAE,MAAMiB,MAAM+B,EAAE,IAAIjD,SAASC,IAAI,OAAOA,EAAE,IAAIoU,IAAG,EAAG,GAAGxN,EAAG,IAAI,IAAIyN,GAAG,GAAG9Z,OAAO4P,eAAekK,GAAG,UAAU,CAACnJ,IAAI,WAAWkJ,IAAG,KAAMvN,OAAOyN,iBAAiB,OAAOD,GAAGA,IAAIxN,OAAO0N,oBAAoB,OAAOF,GAAGA,IAAI,MAAMvU,IAAGsU,IAAG,EAAG,SAASI,GAAG1U,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,EAAEF,EAAED,EAAED,GAAG,IAAIhD,EAAE7E,MAAMqB,UAAUG,MAAMD,KAAKwB,UAAU,GAAG,IAAI8C,EAAE7C,MAAM8C,EAAEjB,GAAG,MAAMzD,GAAGyB,KAAK0X,QAAQnZ,IAAI,IAAIoZ,IAAG,EAAGC,GAAG,KAAKC,IAAG,EAAGC,GAAG,KAAKC,GAAG,CAACL,QAAQ,SAAS3U,GAAG4U,IAAG,EAAGC,GAAG7U,IAAI,SAASiV,GAAGjV,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,EAAEF,EAAED,EAAED,GAAG2S,IAAG,EAAGC,GAAG,KAAKH,GAAGtX,MAAM4X,GAAG7X,WACvV,SAAS+X,GAAGlV,GAAG,IAAIC,EAAED,EAAEE,EAAEF,EAAE,GAAGA,EAAEmV,UAAU,KAAKlV,EAAEmV,QAAQnV,EAAEA,EAAEmV,WAAW,CAACpV,EAAEC,EAAE,GAAO,KAAa,MAAjBA,EAAED,GAASqV,SAAcnV,EAAED,EAAEmV,QAAQpV,EAAEC,EAAEmV,aAAapV,GAAG,OAAO,IAAIC,EAAE0K,IAAIzK,EAAE,KAAK,SAASoV,GAAGtV,GAAG,GAAG,KAAKA,EAAE2K,IAAI,CAAC,IAAI1K,EAAED,EAAEuV,cAAsE,GAAxD,OAAOtV,IAAkB,QAAdD,EAAEA,EAAEmV,aAAqBlV,EAAED,EAAEuV,gBAAmB,OAAOtV,EAAE,OAAOA,EAAEuV,WAAW,OAAO,KAAK,SAASC,GAAGzV,GAAG,GAAGkV,GAAGlV,KAAKA,EAAE,MAAMmB,MAAM+B,EAAE,MAEpS,SAASwS,GAAG1V,GAAW,GAARA,EADtN,SAAYA,GAAG,IAAIC,EAAED,EAAEmV,UAAU,IAAIlV,EAAE,CAAS,GAAG,QAAXA,EAAEiV,GAAGlV,IAAe,MAAMmB,MAAM+B,EAAE,MAAM,OAAOjD,IAAID,EAAE,KAAKA,EAAE,IAAI,IAAIE,EAAEF,EAAEgC,EAAE/B,IAAI,CAAC,IAAI8B,EAAE7B,EAAEkV,OAAO,GAAG,OAAOrT,EAAE,MAAM,IAAIM,EAAEN,EAAEoT,UAAU,GAAG,OAAO9S,EAAE,CAAY,GAAG,QAAdL,EAAED,EAAEqT,QAAmB,CAAClV,EAAE8B,EAAE,SAAS,MAAM,GAAGD,EAAE4T,QAAQtT,EAAEsT,MAAM,CAAC,IAAItT,EAAEN,EAAE4T,MAAMtT,GAAG,CAAC,GAAGA,IAAInC,EAAE,OAAOuV,GAAG1T,GAAG/B,EAAE,GAAGqC,IAAIL,EAAE,OAAOyT,GAAG1T,GAAG9B,EAAEoC,EAAEA,EAAEuT,QAAQ,MAAMzU,MAAM+B,EAAE,MAAO,GAAGhD,EAAEkV,SAASpT,EAAEoT,OAAOlV,EAAE6B,EAAEC,EAAEK,MAAM,CAAC,IAAI,IAAIF,GAAE,EAAGD,EAAEH,EAAE4T,MAAMzT,GAAG,CAAC,GAAGA,IAAIhC,EAAE,CAACiC,GAAE,EAAGjC,EAAE6B,EAAEC,EAAEK,EAAE,MAAM,GAAGH,IAAIF,EAAE,CAACG,GAAE,EAAGH,EAAED,EAAE7B,EAAEmC,EAAE,MAAMH,EAAEA,EAAE0T,QAAQ,IAAIzT,EAAE,CAAC,IAAID,EAAEG,EAAEsT,MAAMzT,GAAG,CAAC,GAAGA,IAC5fhC,EAAE,CAACiC,GAAE,EAAGjC,EAAEmC,EAAEL,EAAED,EAAE,MAAM,GAAGG,IAAIF,EAAE,CAACG,GAAE,EAAGH,EAAEK,EAAEnC,EAAE6B,EAAE,MAAMG,EAAEA,EAAE0T,QAAQ,IAAIzT,EAAE,MAAMhB,MAAM+B,EAAE,OAAQ,GAAGhD,EAAEiV,YAAYnT,EAAE,MAAMb,MAAM+B,EAAE,MAAO,GAAG,IAAIhD,EAAEyK,IAAI,MAAMxJ,MAAM+B,EAAE,MAAM,OAAOhD,EAAEwT,UAAUlS,UAAUtB,EAAEF,EAAEC,EAAmB4V,CAAG7V,IAAOA,EAAE,OAAO,KAAK,IAAI,IAAIC,EAAED,IAAI,CAAC,GAAG,IAAIC,EAAE0K,KAAK,IAAI1K,EAAE0K,IAAI,OAAO1K,EAAE,GAAGA,EAAE0V,MAAM1V,EAAE0V,MAAMP,OAAOnV,EAAEA,EAAEA,EAAE0V,UAAU,CAAC,GAAG1V,IAAID,EAAE,MAAM,MAAMC,EAAE2V,SAAS,CAAC,IAAI3V,EAAEmV,QAAQnV,EAAEmV,SAASpV,EAAE,OAAO,KAAKC,EAAEA,EAAEmV,OAAOnV,EAAE2V,QAAQR,OAAOnV,EAAEmV,OAAOnV,EAAEA,EAAE2V,SAAS,OAAO,KAC5c,SAASE,GAAG9V,EAAEC,GAAG,IAAI,IAAIC,EAAEF,EAAEmV,UAAU,OAAOlV,GAAG,CAAC,GAAGA,IAAID,GAAGC,IAAIC,EAAE,OAAM,EAAGD,EAAEA,EAAEmV,OAAO,OAAM,EAAG,IAAIW,GAAGC,GAAGC,GAAGC,GAAGC,IAAG,EAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,IAAIC,GAAG,IAAID,IAAIE,GAAG,GAAGC,GAAG,6PAA6PxY,MAAM,KACrb,SAASyY,GAAG7W,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,MAAM,CAAC+U,UAAU9W,EAAE+W,aAAa9W,EAAE+W,iBAAmB,GAAF9W,EAAK+W,YAAYlV,EAAEmV,iBAAiB,CAAClV,IAAI,SAASmV,GAAGnX,EAAEC,GAAG,OAAOD,GAAG,IAAK,UAAU,IAAK,WAAWqW,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,YAAYC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,WAAWC,GAAG,KAAK,MAAM,IAAK,cAAc,IAAK,aAAaC,GAAGY,OAAOnX,EAAEoX,WAAW,MAAM,IAAK,oBAAoB,IAAK,qBAAqBX,GAAGU,OAAOnX,EAAEoX,YAC3Z,SAASC,GAAGtX,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAG,OAAG,OAAOrC,GAAGA,EAAEiX,cAAc5U,GAASrC,EAAE6W,GAAG5W,EAAEC,EAAE8B,EAAED,EAAEM,GAAG,OAAOpC,IAAY,QAARA,EAAEwT,GAAGxT,KAAa+V,GAAG/V,IAAID,IAAEA,EAAEgX,kBAAkBhV,EAAE/B,EAAED,EAAEkX,iBAAiB,OAAOnV,IAAI,IAAI9B,EAAEyR,QAAQ3P,IAAI9B,EAAE9E,KAAK4G,GAAU/B,GAE9M,SAASuX,GAAGvX,GAAG,IAAIC,EAAEuX,GAAGxX,EAAEvB,QAAQ,GAAG,OAAOwB,EAAE,CAAC,IAAIC,EAAEgV,GAAGjV,GAAG,GAAG,OAAOC,EAAE,GAAW,MAARD,EAAEC,EAAEyK,MAAY,GAAW,QAAR1K,EAAEqV,GAAGpV,IAAmH,OAAtGF,EAAE8W,UAAU7W,OAAEiW,GAAGlW,EAAEyX,cAAa,WAAWlY,EAAEmY,yBAAyB1X,EAAE2X,UAAS,WAAW1B,GAAG/V,cAAoB,GAAG,IAAID,GAAGC,EAAEwT,UAAUkE,QAA8D,YAArD5X,EAAE8W,UAAU,IAAI5W,EAAEyK,IAAIzK,EAAEwT,UAAUmE,cAAc,MAAa7X,EAAE8W,UAAU,KAC1U,SAASgB,GAAG9X,GAAG,GAAG,OAAOA,EAAE8W,UAAU,OAAM,EAAG,IAAI,IAAI7W,EAAED,EAAEkX,iBAAiB,EAAEjX,EAAEhG,QAAQ,CAAC,IAAIiG,EAAE6X,GAAG/X,EAAE+W,aAAa/W,EAAEgX,iBAAiB/W,EAAE,GAAGD,EAAEiX,aAAa,GAAG,OAAO/W,EAAE,OAAe,QAARD,EAAEwT,GAAGvT,KAAa8V,GAAG/V,GAAGD,EAAE8W,UAAU5W,GAAE,EAAGD,EAAE+X,QAAQ,OAAM,EAAG,SAASC,GAAGjY,EAAEC,EAAEC,GAAG4X,GAAG9X,IAAIE,EAAEkX,OAAOnX,GACzQ,SAASiY,KAAK,IAAI/B,IAAG,EAAG,EAAEC,GAAGnc,QAAQ,CAAC,IAAI+F,EAAEoW,GAAG,GAAG,GAAG,OAAOpW,EAAE8W,UAAU,CAAmB,QAAlB9W,EAAEyT,GAAGzT,EAAE8W,aAAqBf,GAAG/V,GAAG,MAAM,IAAI,IAAIC,EAAED,EAAEkX,iBAAiB,EAAEjX,EAAEhG,QAAQ,CAAC,IAAIiG,EAAE6X,GAAG/X,EAAE+W,aAAa/W,EAAEgX,iBAAiB/W,EAAE,GAAGD,EAAEiX,aAAa,GAAG,OAAO/W,EAAE,CAACF,EAAE8W,UAAU5W,EAAE,MAAMD,EAAE+X,QAAQ,OAAOhY,EAAE8W,WAAWV,GAAG4B,QAAQ,OAAO3B,IAAIyB,GAAGzB,MAAMA,GAAG,MAAM,OAAOC,IAAIwB,GAAGxB,MAAMA,GAAG,MAAM,OAAOC,IAAIuB,GAAGvB,MAAMA,GAAG,MAAMC,GAAGnY,QAAQ4Z,IAAIvB,GAAGrY,QAAQ4Z,IACrZ,SAASE,GAAGnY,EAAEC,GAAGD,EAAE8W,YAAY7W,IAAID,EAAE8W,UAAU,KAAKX,KAAKA,IAAG,EAAG5W,EAAE6Y,0BAA0B7Y,EAAE8Y,wBAAwBH,MACrH,SAASI,GAAGtY,GAAG,SAASC,EAAEA,GAAG,OAAOkY,GAAGlY,EAAED,GAAG,GAAG,EAAEoW,GAAGnc,OAAO,CAACke,GAAG/B,GAAG,GAAGpW,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAEkW,GAAGnc,OAAOiG,IAAI,CAAC,IAAI8B,EAAEoU,GAAGlW,GAAG8B,EAAE8U,YAAY9W,IAAIgC,EAAE8U,UAAU,OAA+F,IAAxF,OAAOT,IAAI8B,GAAG9B,GAAGrW,GAAG,OAAOsW,IAAI6B,GAAG7B,GAAGtW,GAAG,OAAOuW,IAAI4B,GAAG5B,GAAGvW,GAAGwW,GAAGnY,QAAQ4B,GAAGyW,GAAGrY,QAAQ4B,GAAOC,EAAE,EAAEA,EAAEyW,GAAG1c,OAAOiG,KAAI8B,EAAE2U,GAAGzW,IAAK4W,YAAY9W,IAAIgC,EAAE8U,UAAU,MAAM,KAAK,EAAEH,GAAG1c,QAAiB,QAARiG,EAAEyW,GAAG,IAAYG,WAAYS,GAAGrX,GAAG,OAAOA,EAAE4W,WAAWH,GAAGqB,QAC/X,SAASO,GAAGvY,EAAEC,GAAG,IAAIC,EAAE,GAAkF,OAA/EA,EAAEF,EAAE4H,eAAe3H,EAAE2H,cAAc1H,EAAE,SAASF,GAAG,SAASC,EAAEC,EAAE,MAAMF,GAAG,MAAMC,EAASC,EAAE,IAAIsY,GAAG,CAACC,aAAaF,GAAG,YAAY,gBAAgBG,mBAAmBH,GAAG,YAAY,sBAAsBI,eAAeJ,GAAG,YAAY,kBAAkBK,cAAcL,GAAG,aAAa,kBAAkBM,GAAG,GAAGC,GAAG,GACnF,SAASC,GAAG/Y,GAAG,GAAG6Y,GAAG7Y,GAAG,OAAO6Y,GAAG7Y,GAAG,IAAIwY,GAAGxY,GAAG,OAAOA,EAAE,IAAYE,EAARD,EAAEuY,GAAGxY,GAAK,IAAIE,KAAKD,EAAE,GAAGA,EAAE3C,eAAe4C,IAAIA,KAAK4Y,GAAG,OAAOD,GAAG7Y,GAAGC,EAAEC,GAAG,OAAOF,EAA9X8G,IAAKgS,GAAG9R,SAAShC,cAAc,OAAOyM,MAAM,mBAAmB1K,gBAAgByR,GAAGC,aAAaO,iBAAiBR,GAAGE,mBAAmBM,iBAAiBR,GAAGG,eAAeK,WAAW,oBAAoBjS,eAAeyR,GAAGI,cAAc/U,YACxO,IAAIoV,GAAGF,GAAG,gBAAgBG,GAAGH,GAAG,sBAAsBI,GAAGJ,GAAG,kBAAkBK,GAAGL,GAAG,iBAAiBM,GAAG,IAAI5C,IAAI6C,GAAG,IAAI7C,IAAI8C,GAAG,CAAC,QAAQ,QAAQN,GAAG,eAAeC,GAAG,qBAAqBC,GAAG,iBAAiB,UAAU,UAAU,iBAAiB,iBAAiB,iBAAiB,iBAAiB,UAAU,UAAU,YAAY,YAAY,QAAQ,QAAQ,QAAQ,QAAQ,oBAAoB,oBAAoB,OAAO,OAAO,aAAa,aAAa,iBAAiB,iBAAiB,YAAY,YAC/e,qBAAqB,qBAAqB,UAAU,UAAU,WAAW,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,aAAa,aAAaC,GAAG,gBAAgB,UAAU,WAAW,SAASI,GAAGxZ,EAAEC,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAEF,EAAE/F,OAAOiG,GAAG,EAAE,CAAC,IAAI8B,EAAEhC,EAAEE,GAAG6B,EAAE/B,EAAEE,EAAE,GAAG6B,EAAE,MAAMA,EAAE,GAAGgG,cAAchG,EAAEnG,MAAM,IAAI0d,GAAGhP,IAAItI,EAAE/B,GAAGoZ,GAAG/O,IAAItI,EAAED,GAAG4E,EAAG5E,EAAE,CAACC,MAA2ByX,EAAfla,EAAEma,gBAAkB,IAAIrY,GAAE,EAC/X,SAASsY,GAAG3Z,GAAG,GAAG,KAAK,EAAEA,GAAG,OAAOqB,GAAE,GAAG,EAAE,GAAG,KAAK,EAAErB,GAAG,OAAOqB,GAAE,GAAG,EAAE,GAAG,KAAK,EAAErB,GAAG,OAAOqB,GAAE,GAAG,EAAE,IAAIpB,EAAE,GAAGD,EAAE,OAAG,IAAIC,GAASoB,GAAE,GAAGpB,GAAK,KAAO,GAAFD,IAAaqB,GAAE,GAAG,IAAc,KAAXpB,EAAE,IAAID,IAAkBqB,GAAE,GAAGpB,GAAK,KAAO,IAAFD,IAAcqB,GAAE,EAAE,KAAgB,KAAZpB,EAAE,KAAKD,IAAkBqB,GAAE,EAAEpB,GAAK,KAAO,KAAFD,IAAeqB,GAAE,EAAE,MAAoB,KAAfpB,EAAE,QAAQD,IAAkBqB,GAAE,EAAEpB,GAAkB,KAAhBA,EAAE,SAASD,IAAkBqB,GAAE,EAAEpB,GAAO,SAAFD,GAAkBqB,GAAE,EAAE,UAAY,KAAO,UAAFrB,IAAoBqB,GAAE,EAAE,WAA2B,KAAjBpB,EAAE,UAAUD,IAAkBqB,GAAE,EAAEpB,GAAK,KAAK,WAAWD,IAAUqB,GAAE,EAAE,aACjfA,GAAE,EAASrB,GACX,SAAS4Z,GAAG5Z,EAAEC,GAAG,IAAIC,EAAEF,EAAE6Z,aAAa,GAAG,IAAI3Z,EAAE,OAAOmB,GAAE,EAAE,IAAIW,EAAE,EAAED,EAAE,EAAEM,EAAErC,EAAE8Z,aAAa3X,EAAEnC,EAAE+Z,eAAe7X,EAAElC,EAAEga,YAAY,GAAG,IAAI3X,EAAEL,EAAEK,EAAEN,EAAEV,GAAE,QAAQ,GAAiB,KAAdgB,EAAI,UAAFnC,GAAkB,CAAC,IAAI+B,EAAEI,GAAGF,EAAE,IAAIF,GAAGD,EAAE2X,GAAG1X,GAAGF,EAAEV,IAAS,KAALa,GAAGG,KAAUL,EAAE2X,GAAGzX,GAAGH,EAAEV,SAAgB,KAAPgB,EAAEnC,GAAGiC,IAASH,EAAE2X,GAAGtX,GAAGN,EAAEV,IAAG,IAAIa,IAAIF,EAAE2X,GAAGzX,GAAGH,EAAEV,IAAG,GAAG,IAAIW,EAAE,OAAO,EAAqC,GAAxBA,EAAE9B,IAAI,GAAjB8B,EAAE,GAAGiY,GAAGjY,IAAa,EAAE,GAAGA,IAAI,GAAG,EAAK,IAAI/B,GAAGA,IAAI+B,GAAG,KAAK/B,EAAEkC,GAAG,CAAO,GAANwX,GAAG1Z,GAAM8B,GAAGV,GAAE,OAAOpB,EAAEoB,GAAEU,EAAqB,GAAG,KAAtB9B,EAAED,EAAEka,gBAAwB,IAAIla,EAAEA,EAAEma,cAAcla,GAAG+B,EAAE,EAAE/B,GAAc8B,EAAE,IAAb7B,EAAE,GAAG+Z,GAAGha,IAAU+B,GAAGhC,EAAEE,GAAGD,IAAI8B,EAAE,OAAOC,EAC1e,SAASoY,GAAGpa,GAAgC,OAAO,KAApCA,GAAkB,WAAhBA,EAAE6Z,cAAsC7Z,EAAI,WAAFA,EAAa,WAAW,EAAE,SAASqa,GAAGra,EAAEC,GAAG,OAAOD,GAAG,KAAK,GAAG,OAAO,EAAE,KAAK,GAAG,OAAO,EAAE,KAAK,GAAG,OAAmB,KAAZA,EAAEsa,GAAG,IAAIra,IAASoa,GAAG,GAAGpa,GAAGD,EAAE,KAAK,GAAG,OAAoB,KAAbA,EAAEsa,GAAG,KAAKra,IAASoa,GAAG,EAAEpa,GAAGD,EAAE,KAAK,EAAE,OAAqB,KAAdA,EAAEsa,GAAG,MAAMra,MAA4B,KAAjBD,EAAEsa,GAAG,SAASra,MAAWD,EAAE,MAAMA,EAAE,KAAK,EAAE,OAA0B,KAAnBC,EAAEqa,GAAG,WAAWra,MAAWA,EAAE,WAAWA,EAAE,MAAMkB,MAAM+B,EAAE,IAAIlD,IAAK,SAASsa,GAAGta,GAAG,OAAOA,GAAGA,EAAE,SAASua,GAAGva,GAAG,IAAI,IAAIC,EAAE,GAAGC,EAAE,EAAE,GAAGA,EAAEA,IAAID,EAAE9E,KAAK6E,GAAG,OAAOC,EACrd,SAASua,GAAGxa,EAAEC,EAAEC,GAAGF,EAAE6Z,cAAc5Z,EAAE,IAAI+B,EAAE/B,EAAE,EAAED,EAAE+Z,gBAAgB/X,EAAEhC,EAAEga,aAAahY,GAAEhC,EAAEA,EAAEya,YAAWxa,EAAE,GAAGga,GAAGha,IAAQC,EAAE,IAAI+Z,GAAGS,KAAKC,MAAMD,KAAKC,MAAiC,SAAY3a,GAAG,OAAO,IAAIA,EAAE,GAAG,IAAI4a,GAAG5a,GAAG6a,GAAG,GAAG,GAAvED,GAAGF,KAAKI,IAAID,GAAGH,KAAKK,IAAqD,IAAIC,GAAGzb,EAAE0b,8BAA8BC,GAAG3b,EAAEmY,yBAAyByD,IAAG,EAAG,SAASC,GAAGpb,EAAEC,EAAEC,EAAE8B,GAAGkS,IAAIF,KAAK,IAAIjS,EAAEsZ,GAAGhZ,EAAE6R,GAAGA,IAAG,EAAG,IAAIH,GAAGhS,EAAE/B,EAAEC,EAAEC,EAAE8B,GAAf,SAA2BkS,GAAG7R,IAAI+R,MAAM,SAASkH,GAAGtb,EAAEC,EAAEC,EAAE8B,GAAGkZ,GAAGF,GAAGK,GAAGnW,KAAK,KAAKlF,EAAEC,EAAEC,EAAE8B,IACjb,SAASqZ,GAAGrb,EAAEC,EAAEC,EAAE8B,GAAU,IAAID,EAAX,GAAGoZ,GAAU,IAAIpZ,EAAE,KAAO,EAAF9B,KAAO,EAAEmW,GAAGnc,SAAS,EAAE2c,GAAGlF,QAAQ1R,GAAGA,EAAE6W,GAAG,KAAK7W,EAAEC,EAAEC,EAAE8B,GAAGoU,GAAGjb,KAAK6E,OAAO,CAAC,IAAIqC,EAAE0V,GAAG/X,EAAEC,EAAEC,EAAE8B,GAAG,GAAG,OAAOK,EAAEN,GAAGoV,GAAGnX,EAAEgC,OAAO,CAAC,GAAGD,EAAE,CAAC,IAAI,EAAE6U,GAAGlF,QAAQ1R,GAA+B,OAA3BA,EAAE6W,GAAGxU,EAAErC,EAAEC,EAAEC,EAAE8B,QAAGoU,GAAGjb,KAAK6E,GAAU,GAfhO,SAAYA,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,OAAO9B,GAAG,IAAK,UAAU,OAAOoW,GAAGiB,GAAGjB,GAAGrW,EAAEC,EAAEC,EAAE8B,EAAED,IAAG,EAAG,IAAK,YAAY,OAAOuU,GAAGgB,GAAGhB,GAAGtW,EAAEC,EAAEC,EAAE8B,EAAED,IAAG,EAAG,IAAK,YAAY,OAAOwU,GAAGe,GAAGf,GAAGvW,EAAEC,EAAEC,EAAE8B,EAAED,IAAG,EAAG,IAAK,cAAc,IAAIM,EAAEN,EAAEsV,UAAkD,OAAxCb,GAAGlM,IAAIjI,EAAEiV,GAAGd,GAAGpL,IAAI/I,IAAI,KAAKrC,EAAEC,EAAEC,EAAE8B,EAAED,KAAU,EAAG,IAAK,oBAAoB,OAAOM,EAAEN,EAAEsV,UAAUX,GAAGpM,IAAIjI,EAAEiV,GAAGZ,GAAGtL,IAAI/I,IAAI,KAAKrC,EAAEC,EAAEC,EAAE8B,EAAED,KAAI,EAAG,OAAM,EAe9HwZ,CAAGlZ,EAAErC,EAAEC,EAAEC,EAAE8B,GAAG,OAAOmV,GAAGnX,EAAEgC,GAAGwZ,GAAGxb,EAAEC,EAAE+B,EAAE,KAAK9B,KAC9Q,SAAS6X,GAAG/X,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAEkR,GAAGjR,GAAW,GAAG,QAAXD,EAAEyV,GAAGzV,IAAe,CAAC,IAAIM,EAAE6S,GAAGnT,GAAG,GAAG,OAAOM,EAAEN,EAAE,SAAS,CAAC,IAAII,EAAEE,EAAEsI,IAAI,GAAG,KAAKxI,EAAE,CAAS,GAAG,QAAXJ,EAAEuT,GAAGjT,IAAe,OAAON,EAAEA,EAAE,UAAU,GAAG,IAAII,EAAE,CAAC,GAAGE,EAAEqR,UAAUkE,QAAQ,OAAO,IAAIvV,EAAEsI,IAAItI,EAAEqR,UAAUmE,cAAc,KAAK9V,EAAE,UAAUM,IAAIN,IAAIA,EAAE,OAAqB,OAAdyZ,GAAGxb,EAAEC,EAAE+B,EAAED,EAAE7B,GAAU,KAAK,IAAIub,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACzT,SAASC,KAAK,GAAGD,GAAG,OAAOA,GAAG,IAAI3b,EAAkBgC,EAAhB/B,EAAEyb,GAAGxb,EAAED,EAAEhG,OAAS8H,EAAE,UAAU0Z,GAAGA,GAAGrgB,MAAMqgB,GAAGhO,YAAYpL,EAAEN,EAAE9H,OAAO,IAAI+F,EAAE,EAAEA,EAAEE,GAAGD,EAAED,KAAK+B,EAAE/B,GAAGA,KAAK,IAAImC,EAAEjC,EAAEF,EAAE,IAAIgC,EAAE,EAAEA,GAAGG,GAAGlC,EAAEC,EAAE8B,KAAKD,EAAEM,EAAEL,GAAGA,KAAK,OAAO2Z,GAAG5Z,EAAEnG,MAAMoE,EAAE,EAAEgC,EAAE,EAAEA,OAAE,GAAQ,SAAS6Z,GAAG7b,GAAG,IAAIC,EAAED,EAAE8b,QAA+E,MAAvE,aAAa9b,EAAgB,KAAbA,EAAEA,EAAE+b,WAAgB,KAAK9b,IAAID,EAAE,IAAKA,EAAEC,EAAE,KAAKD,IAAIA,EAAE,IAAW,IAAIA,GAAG,KAAKA,EAAEA,EAAE,EAAE,SAASgc,KAAK,OAAM,EAAG,SAASC,KAAK,OAAM,EACjY,SAASC,GAAGlc,GAAG,SAASC,EAAEA,EAAE+B,EAAED,EAAEM,EAAEF,GAA6G,IAAI,IAAIjC,KAAlHjD,KAAKkf,WAAWlc,EAAEhD,KAAKmf,YAAYra,EAAE9E,KAAKwF,KAAKT,EAAE/E,KAAKga,YAAY5U,EAAEpF,KAAKwB,OAAO0D,EAAElF,KAAKof,cAAc,KAAkBrc,EAAEA,EAAE1C,eAAe4C,KAAKD,EAAED,EAAEE,GAAGjD,KAAKiD,GAAGD,EAAEA,EAAEoC,GAAGA,EAAEnC,IAAgI,OAA5HjD,KAAKqf,oBAAoB,MAAMja,EAAEka,iBAAiBla,EAAEka,kBAAiB,IAAKla,EAAEma,aAAaR,GAAGC,GAAGhf,KAAKwf,qBAAqBR,GAAUhf,KAC1E,OAD+EqF,EAAErC,EAAExE,UAAU,CAACihB,eAAe,WAAWzf,KAAKsf,kBAAiB,EAAG,IAAIvc,EAAE/C,KAAKga,YAAYjX,IAAIA,EAAE0c,eAAe1c,EAAE0c,iBAAiB,mBAAmB1c,EAAEwc,cAC7exc,EAAEwc,aAAY,GAAIvf,KAAKqf,mBAAmBN,KAAKW,gBAAgB,WAAW,IAAI3c,EAAE/C,KAAKga,YAAYjX,IAAIA,EAAE2c,gBAAgB3c,EAAE2c,kBAAkB,mBAAmB3c,EAAE4c,eAAe5c,EAAE4c,cAAa,GAAI3f,KAAKwf,qBAAqBT,KAAKa,QAAQ,aAAaC,aAAad,KAAY/b,EAChR,IAAoL8c,GAAGC,GAAGC,GAAtLC,GAAG,CAACC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,SAAStd,GAAG,OAAOA,EAAEsd,WAAWC,KAAKC,OAAOjB,iBAAiB,EAAEkB,UAAU,GAAGC,GAAGxB,GAAGgB,IAAIS,GAAGrb,EAAE,GAAG4a,GAAG,CAACU,KAAK,EAAEC,OAAO,IAAIC,GAAG5B,GAAGyB,IAAaI,GAAGzb,EAAE,GAAGqb,GAAG,CAACK,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,iBAAiBC,GAAGC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,SAAS9e,GAAG,YAAO,IAASA,EAAE8e,cAAc9e,EAAE+e,cAAc/e,EAAEkT,WAAWlT,EAAEgf,UAAUhf,EAAE+e,YAAY/e,EAAE8e,eAAeG,UAAU,SAASjf,GAAG,MAAG,cAC3eA,EAASA,EAAEif,WAAUjf,IAAIid,KAAKA,IAAI,cAAcjd,EAAEyC,MAAMsa,GAAG/c,EAAEge,QAAQf,GAAGe,QAAQhB,GAAGhd,EAAEie,QAAQhB,GAAGgB,SAASjB,GAAGD,GAAG,EAAEE,GAAGjd,GAAU+c,KAAImC,UAAU,SAASlf,GAAG,MAAM,cAAcA,EAAEA,EAAEkf,UAAUlC,MAAMmC,GAAGjD,GAAG6B,IAAiCqB,GAAGlD,GAA7B5Z,EAAE,GAAGyb,GAAG,CAACsB,aAAa,KAA4CC,GAAGpD,GAA9B5Z,EAAE,GAAGqb,GAAG,CAACmB,cAAc,KAA0ES,GAAGrD,GAA5D5Z,EAAE,GAAG4a,GAAG,CAACsC,cAAc,EAAEC,YAAY,EAAEC,cAAc,KAAcC,GAAGrd,EAAE,GAAG4a,GAAG,CAAC0C,cAAc,SAAS5f,GAAG,MAAM,kBAAkBA,EAAEA,EAAE4f,cAAc7Y,OAAO6Y,iBAAiBC,GAAG3D,GAAGyD,IAAyBG,GAAG5D,GAArB5Z,EAAE,GAAG4a,GAAG,CAAC6C,KAAK,KAAcC,GAAG,CAACC,IAAI,SACxfC,SAAS,IAAIC,KAAK,YAAYC,GAAG,UAAUC,MAAM,aAAaC,KAAK,YAAYC,IAAI,SAASC,IAAI,KAAKC,KAAK,cAAcC,KAAK,cAAcC,OAAO,aAAaC,gBAAgB,gBAAgBC,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KACtf,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,IAAI,aAAa,IAAI,QAAQC,GAAG,CAACC,IAAI,SAASC,QAAQ,UAAUC,KAAK,UAAUC,MAAM,YAAY,SAASC,GAAGnhB,GAAG,IAAIC,EAAEhD,KAAKga,YAAY,OAAOhX,EAAEye,iBAAiBze,EAAEye,iBAAiB1e,MAAIA,EAAE8gB,GAAG9gB,OAAMC,EAAED,GAAM,SAAS2e,KAAK,OAAOwC,GAC9R,IAAIC,GAAG9e,EAAE,GAAGqb,GAAG,CAACnhB,IAAI,SAASwD,GAAG,GAAGA,EAAExD,IAAI,CAAC,IAAIyD,EAAE+f,GAAGhgB,EAAExD,MAAMwD,EAAExD,IAAI,GAAG,iBAAiByD,EAAE,OAAOA,EAAE,MAAM,aAAaD,EAAEyC,KAAc,MAARzC,EAAE6b,GAAG7b,IAAU,QAAQnC,OAAOG,aAAagC,GAAI,YAAYA,EAAEyC,MAAM,UAAUzC,EAAEyC,KAAKoe,GAAG7gB,EAAE8b,UAAU,eAAe,IAAIuF,KAAK,EAAEC,SAAS,EAAEhD,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAE8C,OAAO,EAAEC,OAAO,EAAE9C,iBAAiBC,GAAG5C,SAAS,SAAS/b,GAAG,MAAM,aAAaA,EAAEyC,KAAKoZ,GAAG7b,GAAG,GAAG8b,QAAQ,SAAS9b,GAAG,MAAM,YAAYA,EAAEyC,MAAM,UAAUzC,EAAEyC,KAAKzC,EAAE8b,QAAQ,GAAG2F,MAAM,SAASzhB,GAAG,MAAM,aAC7eA,EAAEyC,KAAKoZ,GAAG7b,GAAG,YAAYA,EAAEyC,MAAM,UAAUzC,EAAEyC,KAAKzC,EAAE8b,QAAQ,KAAK4F,GAAGxF,GAAGkF,IAAiIO,GAAGzF,GAA7H5Z,EAAE,GAAGyb,GAAG,CAAC1G,UAAU,EAAEuK,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAmIC,GAAGnG,GAArH5Z,EAAE,GAAGqb,GAAG,CAAC2E,QAAQ,EAAEC,cAAc,EAAEC,eAAe,EAAEhE,OAAO,EAAEC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEG,iBAAiBC,MAA0E8D,GAAGvG,GAA3D5Z,EAAE,GAAG4a,GAAG,CAACzV,aAAa,EAAEgY,YAAY,EAAEC,cAAc,KAAcgD,GAAGpgB,EAAE,GAAGyb,GAAG,CAAC4E,OAAO,SAAS3iB,GAAG,MAAM,WAAWA,EAAEA,EAAE2iB,OAAO,gBAAgB3iB,GAAGA,EAAE4iB,YAAY,GAClfC,OAAO,SAAS7iB,GAAG,MAAM,WAAWA,EAAEA,EAAE6iB,OAAO,gBAAgB7iB,GAAGA,EAAE8iB,YAAY,eAAe9iB,GAAGA,EAAE+iB,WAAW,GAAGC,OAAO,EAAEC,UAAU,IAAIC,GAAGhH,GAAGwG,IAAIS,GAAG,CAAC,EAAE,GAAG,GAAG,IAAIC,GAAGtc,GAAI,qBAAqBC,OAAOsc,GAAG,KAAKvc,GAAI,iBAAiBE,WAAWqc,GAAGrc,SAASsc,cAAc,IAAIC,GAAGzc,GAAI,cAAcC,SAASsc,GAAGG,GAAG1c,KAAMsc,IAAIC,IAAI,EAAEA,IAAI,IAAIA,IAAII,GAAG5lB,OAAOG,aAAa,IAAI0lB,IAAG,EAC1W,SAASC,GAAG3jB,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAQ,OAAO,IAAImjB,GAAGzR,QAAQzR,EAAE6b,SAAS,IAAK,UAAU,OAAO,MAAM7b,EAAE6b,QAAQ,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,OAAM,EAAG,QAAQ,OAAM,GAAI,SAAS8H,GAAG5jB,GAAc,MAAM,kBAAjBA,EAAEA,EAAE6d,SAAkC,SAAS7d,EAAEA,EAAE+f,KAAK,KAAK,IAAI8D,IAAG,EAE9Q,IAAIC,GAAG,CAACC,OAAM,EAAGC,MAAK,EAAGC,UAAS,EAAG,kBAAiB,EAAGC,OAAM,EAAGC,OAAM,EAAGC,QAAO,EAAGC,UAAS,EAAGC,OAAM,EAAGC,QAAO,EAAGC,KAAI,EAAGC,MAAK,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,GAAI,SAASC,GAAG7kB,GAAG,IAAIC,EAAED,GAAGA,EAAEgL,UAAUhL,EAAEgL,SAASpD,cAAc,MAAM,UAAU3H,IAAI6jB,GAAG9jB,EAAEyC,MAAM,aAAaxC,EAAQ,SAAS6kB,GAAG9kB,EAAEC,EAAEC,EAAE8B,GAAG4R,GAAG5R,GAAsB,GAAnB/B,EAAE8kB,GAAG9kB,EAAE,aAAgBhG,SAASiG,EAAE,IAAIwd,GAAG,WAAW,SAAS,KAAKxd,EAAE8B,GAAGhC,EAAE7E,KAAK,CAAC6pB,MAAM9kB,EAAE+kB,UAAUhlB,KAAK,IAAIilB,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGplB,GAAGqlB,GAAGrlB,EAAE,GAAG,SAASslB,GAAGtlB,GAAe,GAAG2L,EAAT4Z,GAAGvlB,IAAY,OAAOA,EACne,SAASwlB,GAAGxlB,EAAEC,GAAG,GAAG,WAAWD,EAAE,OAAOC,EAAE,IAAIwlB,IAAG,EAAG,GAAG3e,EAAG,CAAC,IAAI4e,GAAG,GAAG5e,EAAG,CAAC,IAAI6e,GAAG,YAAY3e,SAAS,IAAI2e,GAAG,CAAC,IAAIC,GAAG5e,SAAShC,cAAc,OAAO4gB,GAAGtd,aAAa,UAAU,WAAWqd,GAAG,oBAAoBC,GAAGC,QAAQH,GAAGC,QAAQD,IAAG,EAAGD,GAAGC,MAAM1e,SAASsc,cAAc,EAAEtc,SAASsc,cAAc,SAASwC,KAAKZ,KAAKA,GAAGa,YAAY,mBAAmBC,IAAIb,GAAGD,GAAG,MAAM,SAASc,GAAGhmB,GAAG,GAAG,UAAUA,EAAEyH,cAAc6d,GAAGH,IAAI,CAAC,IAAIllB,EAAE,GAAyB,GAAtB6kB,GAAG7kB,EAAEklB,GAAGnlB,EAAEiT,GAAGjT,IAAIA,EAAEolB,GAAMlR,GAAGlU,EAAEC,OAAO,CAACiU,IAAG,EAAG,IAAIJ,GAAG9T,EAAEC,GAAT,QAAoBiU,IAAG,EAAGE,QAC3e,SAAS6R,GAAGjmB,EAAEC,EAAEC,GAAG,YAAYF,GAAG8lB,KAAUX,GAAGjlB,GAARglB,GAAGjlB,GAAUimB,YAAY,mBAAmBF,KAAK,aAAahmB,GAAG8lB,KAAK,SAASK,GAAGnmB,GAAG,GAAG,oBAAoBA,GAAG,UAAUA,GAAG,YAAYA,EAAE,OAAOslB,GAAGH,IAAI,SAASiB,GAAGpmB,EAAEC,GAAG,GAAG,UAAUD,EAAE,OAAOslB,GAAGrlB,GAAG,SAASomB,GAAGrmB,EAAEC,GAAG,GAAG,UAAUD,GAAG,WAAWA,EAAE,OAAOslB,GAAGrlB,GAAmE,IAAIqmB,GAAG,oBAAoB7rB,OAAOuY,GAAGvY,OAAOuY,GAA5G,SAAYhT,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,IAAI,EAAEC,IAAID,IAAIA,GAAGC,IAAIA,GAAoDsmB,GAAG9rB,OAAOgB,UAAU6B,eAC7a,SAASkpB,GAAGxmB,EAAEC,GAAG,GAAGqmB,GAAGtmB,EAAEC,GAAG,OAAM,EAAG,GAAG,kBAAkBD,GAAG,OAAOA,GAAG,kBAAkBC,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAIC,EAAEzF,OAAO8D,KAAKyB,GAAGgC,EAAEvH,OAAO8D,KAAK0B,GAAG,GAAGC,EAAEjG,SAAS+H,EAAE/H,OAAO,OAAM,EAAG,IAAI+H,EAAE,EAAEA,EAAE9B,EAAEjG,OAAO+H,IAAI,IAAIukB,GAAG5qB,KAAKsE,EAAEC,EAAE8B,MAAMskB,GAAGtmB,EAAEE,EAAE8B,IAAI/B,EAAEC,EAAE8B,KAAK,OAAM,EAAG,OAAM,EAAG,SAASykB,GAAGzmB,GAAG,KAAKA,GAAGA,EAAEkO,YAAYlO,EAAEA,EAAEkO,WAAW,OAAOlO,EAClU,SAAS0mB,GAAG1mB,EAAEC,GAAG,IAAwB+B,EAApB9B,EAAEumB,GAAGzmB,GAAO,IAAJA,EAAE,EAAYE,GAAG,CAAC,GAAG,IAAIA,EAAEuO,SAAS,CAA0B,GAAzBzM,EAAEhC,EAAEE,EAAEuN,YAAYxT,OAAU+F,GAAGC,GAAG+B,GAAG/B,EAAE,MAAM,CAAC0mB,KAAKzmB,EAAE0mB,OAAO3mB,EAAED,GAAGA,EAAEgC,EAAEhC,EAAE,CAAC,KAAKE,GAAG,CAAC,GAAGA,EAAE2mB,YAAY,CAAC3mB,EAAEA,EAAE2mB,YAAY,MAAM7mB,EAAEE,EAAEA,EAAEkT,WAAWlT,OAAE,EAAOA,EAAEumB,GAAGvmB,IAAI,SAAS4mB,GAAG9mB,EAAEC,GAAG,SAAOD,IAAGC,KAAED,IAAIC,KAAKD,GAAG,IAAIA,EAAEyO,YAAYxO,GAAG,IAAIA,EAAEwO,SAASqY,GAAG9mB,EAAEC,EAAEmT,YAAY,aAAapT,EAAEA,EAAE+mB,SAAS9mB,KAAGD,EAAEgnB,4BAAwD,GAA7BhnB,EAAEgnB,wBAAwB/mB,MAClZ,SAASgnB,KAAK,IAAI,IAAIjnB,EAAE+G,OAAO9G,EAAE4L,IAAK5L,aAAaD,EAAEknB,mBAAmB,CAAC,IAAI,IAAIhnB,EAAE,kBAAkBD,EAAEknB,cAAc7F,SAAS8F,KAAK,MAAMplB,GAAG9B,GAAE,EAAG,IAAGA,EAAyB,MAAMD,EAAE4L,GAA/B7L,EAAEC,EAAEknB,eAAgCngB,UAAU,OAAO/G,EAAE,SAASonB,GAAGrnB,GAAG,IAAIC,EAAED,GAAGA,EAAEgL,UAAUhL,EAAEgL,SAASpD,cAAc,OAAO3H,IAAI,UAAUA,IAAI,SAASD,EAAEyC,MAAM,WAAWzC,EAAEyC,MAAM,QAAQzC,EAAEyC,MAAM,QAAQzC,EAAEyC,MAAM,aAAazC,EAAEyC,OAAO,aAAaxC,GAAG,SAASD,EAAEsnB,iBACxZ,IAAIC,GAAGzgB,GAAI,iBAAiBE,UAAU,IAAIA,SAASsc,aAAakE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,IAAG,EAC3F,SAASC,GAAG5nB,EAAEC,EAAEC,GAAG,IAAI8B,EAAE9B,EAAE6G,SAAS7G,EAAEA,EAAE8G,SAAS,IAAI9G,EAAEuO,SAASvO,EAAEA,EAAE0M,cAAc+a,IAAI,MAAMH,IAAIA,KAAK3b,EAAG7J,KAAU,mBAALA,EAAEwlB,KAAyBH,GAAGrlB,GAAGA,EAAE,CAAC6lB,MAAM7lB,EAAE8lB,eAAeC,IAAI/lB,EAAEgmB,cAAuFhmB,EAAE,CAACimB,YAA3EjmB,GAAGA,EAAE4K,eAAe5K,EAAE4K,cAAcsb,aAAanhB,QAAQohB,gBAA+BF,WAAWG,aAAapmB,EAAEomB,aAAaC,UAAUrmB,EAAEqmB,UAAUC,YAAYtmB,EAAEsmB,aAAcZ,IAAIlB,GAAGkB,GAAG1lB,KAAK0lB,GAAG1lB,EAAsB,GAApBA,EAAE+iB,GAAG0C,GAAG,aAAgBxtB,SAASgG,EAAE,IAAIyd,GAAG,WAAW,SAAS,KAAKzd,EAAEC,GAAGF,EAAE7E,KAAK,CAAC6pB,MAAM/kB,EAAEglB,UAAUjjB,IAAI/B,EAAExB,OAAO+oB,MACjfhO,GAAG,mjBAAmjBpb,MAAM,KAC5jB,GAAGob,GAAG,oRAAoRpb,MAAM,KAAK,GAAGob,GAAGD,GAAG,GAAG,IAAI,IAAIgP,GAAG,qFAAqFnqB,MAAM,KAAKoqB,GAAG,EAAEA,GAAGD,GAAGtuB,OAAOuuB,KAAKlP,GAAGhP,IAAIie,GAAGC,IAAI,GAAG5hB,EAAG,eAAe,CAAC,WAAW,cACleA,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBD,EAAG,WAAW,oEAAoEvI,MAAM,MAAMuI,EAAG,WAAW,uFAAuFvI,MAAM,MAAMuI,EAAG,gBAAgB,CAAC,iBAAiB,WAAW,YAAY,UAAUA,EAAG,mBAAmB,2DAA2DvI,MAAM,MAC5fuI,EAAG,qBAAqB,6DAA6DvI,MAAM,MAAMuI,EAAG,sBAAsB,8DAA8DvI,MAAM,MAAM,IAAIqqB,GAAG,sNAAsNrqB,MAAM,KAAKsqB,GAAG,IAAIjiB,IAAI,0CAA0CrI,MAAM,KAAKuqB,OAAOF,KACnf,SAASG,GAAG5oB,EAAEC,EAAEC,GAAG,IAAI8B,EAAEhC,EAAEyC,MAAM,gBAAgBzC,EAAEqc,cAAcnc,EA/CjE,SAAYF,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,EAAEF,EAAED,EAAED,GAA4B,GAAzBgT,GAAG7X,MAAMH,KAAKE,WAAcyX,GAAG,CAAC,IAAGA,GAAgC,MAAMzT,MAAM+B,EAAE,MAA1C,IAAIjE,EAAE4V,GAAGD,IAAG,EAAGC,GAAG,KAA8BC,KAAKA,IAAG,EAAGC,GAAG9V,IA+CjE4pB,CAAG7mB,EAAE/B,OAAE,EAAOD,GAAGA,EAAEqc,cAAc,KACpG,SAASgJ,GAAGrlB,EAAEC,GAAGA,EAAE,KAAO,EAAFA,GAAK,IAAI,IAAIC,EAAE,EAAEA,EAAEF,EAAE/F,OAAOiG,IAAI,CAAC,IAAI8B,EAAEhC,EAAEE,GAAG6B,EAAEC,EAAEgjB,MAAMhjB,EAAEA,EAAEijB,UAAUjlB,EAAE,CAAC,IAAIqC,OAAE,EAAO,GAAGpC,EAAE,IAAI,IAAIkC,EAAEH,EAAE/H,OAAO,EAAE,GAAGkI,EAAEA,IAAI,CAAC,IAAID,EAAEF,EAAEG,GAAGF,EAAEC,EAAE4mB,SAAS7pB,EAAEiD,EAAEma,cAA2B,GAAbna,EAAEA,EAAE6mB,SAAY9mB,IAAII,GAAGN,EAAE0a,uBAAuB,MAAMzc,EAAE4oB,GAAG7mB,EAAEG,EAAEjD,GAAGoD,EAAEJ,OAAO,IAAIE,EAAE,EAAEA,EAAEH,EAAE/H,OAAOkI,IAAI,CAAoD,GAA5CF,GAAPC,EAAEF,EAAEG,IAAO2mB,SAAS7pB,EAAEiD,EAAEma,cAAcna,EAAEA,EAAE6mB,SAAY9mB,IAAII,GAAGN,EAAE0a,uBAAuB,MAAMzc,EAAE4oB,GAAG7mB,EAAEG,EAAEjD,GAAGoD,EAAEJ,IAAI,GAAG6S,GAAG,MAAM9U,EAAE+U,GAAGD,IAAG,EAAGC,GAAG,KAAK/U,EAC1a,SAASuB,GAAEvB,EAAEC,GAAG,IAAIC,EAAE8oB,GAAG/oB,GAAG+B,EAAEhC,EAAE,WAAWE,EAAE+oB,IAAIjnB,KAAKknB,GAAGjpB,EAAED,EAAE,GAAE,GAAIE,EAAE2G,IAAI7E,IAAI,IAAImnB,GAAG,kBAAkBzO,KAAK0O,SAAS1tB,SAAS,IAAIE,MAAM,GAAG,SAASytB,GAAGrpB,GAAGA,EAAEmpB,MAAMnpB,EAAEmpB,KAAI,EAAG3iB,EAAGnI,SAAQ,SAAS4B,GAAGyoB,GAAGO,IAAIhpB,IAAIqpB,GAAGrpB,GAAE,EAAGD,EAAE,MAAMspB,GAAGrpB,GAAE,EAAGD,EAAE,UACtO,SAASspB,GAAGtpB,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE,EAAE5E,UAAUlD,aAAQ,IAASkD,UAAU,GAAGA,UAAU,GAAG,EAAEkF,EAAEnC,EAA6D,GAA3D,oBAAoBF,GAAG,IAAIE,EAAEuO,WAAWpM,EAAEnC,EAAE0M,eAAkB,OAAO5K,IAAI/B,GAAGyoB,GAAGO,IAAIjpB,GAAG,CAAC,GAAG,WAAWA,EAAE,OAAO+B,GAAG,EAAEM,EAAEL,EAAE,IAAIG,EAAE6mB,GAAG3mB,GAAGH,EAAElC,EAAE,MAAMC,EAAE,UAAU,UAAUkC,EAAE8mB,IAAI/mB,KAAKjC,IAAI8B,GAAG,GAAGmnB,GAAG7mB,EAAErC,EAAE+B,EAAE9B,GAAGkC,EAAE0E,IAAI3E,IAClS,SAASgnB,GAAGlpB,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAEuX,GAAGlO,IAAInL,GAAG,YAAO,IAAS8B,EAAE,EAAEA,GAAG,KAAK,EAAEA,EAAEqZ,GAAG,MAAM,KAAK,EAAErZ,EAAEuZ,GAAG,MAAM,QAAQvZ,EAAEsZ,GAAGnb,EAAE6B,EAAEmD,KAAK,KAAKjF,EAAEC,EAAEF,GAAG+B,OAAE,GAAQuS,IAAI,eAAerU,GAAG,cAAcA,GAAG,UAAUA,IAAI8B,GAAE,GAAIC,OAAE,IAASD,EAAE/B,EAAEwU,iBAAiBvU,EAAEC,EAAE,CAACqpB,SAAQ,EAAGC,QAAQznB,IAAI/B,EAAEwU,iBAAiBvU,EAAEC,GAAE,QAAI,IAAS6B,EAAE/B,EAAEwU,iBAAiBvU,EAAEC,EAAE,CAACspB,QAAQznB,IAAI/B,EAAEwU,iBAAiBvU,EAAEC,GAAE,GACpW,SAASsb,GAAGxb,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,IAAIM,EAAEL,EAAE,GAAG,KAAO,EAAF/B,IAAM,KAAO,EAAFA,IAAM,OAAO+B,EAAEhC,EAAE,OAAO,CAAC,GAAG,OAAOgC,EAAE,OAAO,IAAIG,EAAEH,EAAE2I,IAAI,GAAG,IAAIxI,GAAG,IAAIA,EAAE,CAAC,IAAID,EAAEF,EAAE0R,UAAUmE,cAAc,GAAG3V,IAAIH,GAAG,IAAIG,EAAEuM,UAAUvM,EAAEkR,aAAarR,EAAE,MAAM,GAAG,IAAII,EAAE,IAAIA,EAAEH,EAAEoT,OAAO,OAAOjT,GAAG,CAAC,IAAIF,EAAEE,EAAEwI,IAAI,IAAG,IAAI1I,GAAG,IAAIA,MAAKA,EAAEE,EAAEuR,UAAUmE,iBAAkB9V,GAAG,IAAIE,EAAEwM,UAAUxM,EAAEmR,aAAarR,GAAE,OAAOI,EAAEA,EAAEiT,OAAO,KAAK,OAAOlT,GAAG,CAAS,GAAG,QAAXC,EAAEqV,GAAGtV,IAAe,OAAe,GAAG,KAAXD,EAAEE,EAAEwI,MAAc,IAAI1I,EAAE,CAACD,EAAEK,EAAEF,EAAE,SAASnC,EAAEkC,EAAEA,EAAEkR,YAAYpR,EAAEA,EAAEoT,QAvD7c,SAAYpV,EAAEC,EAAEC,GAAG,GAAGiU,GAAG,OAAOnU,EAAEC,EAAEC,GAAGiU,IAAG,EAAG,IAAWF,GAAGjU,EAAEC,EAAEC,GAAlB,QAA6BiU,IAAG,EAAGC,MAuDoYqV,EAAG,WAAW,IAAIznB,EAAEK,EAAEN,EAAEkR,GAAG/S,GAAGiC,EAAE,GACpfnC,EAAE,CAAC,IAAIkC,EAAEmX,GAAGjO,IAAIpL,GAAG,QAAG,IAASkC,EAAE,CAAC,IAAID,EAAEyb,GAAG5d,EAAEE,EAAE,OAAOA,GAAG,IAAK,WAAW,GAAG,IAAI6b,GAAG3b,GAAG,MAAMF,EAAE,IAAK,UAAU,IAAK,QAAQiC,EAAEyf,GAAG,MAAM,IAAK,UAAU5hB,EAAE,QAAQmC,EAAEqd,GAAG,MAAM,IAAK,WAAWxf,EAAE,OAAOmC,EAAEqd,GAAG,MAAM,IAAK,aAAa,IAAK,YAAYrd,EAAEqd,GAAG,MAAM,IAAK,QAAQ,GAAG,IAAIpf,EAAE0e,OAAO,MAAM5e,EAAE,IAAK,WAAW,IAAK,WAAW,IAAK,YAAY,IAAK,YAAY,IAAK,UAAU,IAAK,WAAW,IAAK,YAAY,IAAK,cAAciC,EAAEkd,GAAG,MAAM,IAAK,OAAO,IAAK,UAAU,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,OAAOld,EAC1iBmd,GAAG,MAAM,IAAK,cAAc,IAAK,WAAW,IAAK,YAAY,IAAK,aAAand,EAAEogB,GAAG,MAAM,KAAKpJ,GAAG,KAAKC,GAAG,KAAKC,GAAGlX,EAAEsd,GAAG,MAAM,KAAKnG,GAAGnX,EAAEwgB,GAAG,MAAM,IAAK,SAASxgB,EAAE6b,GAAG,MAAM,IAAK,QAAQ7b,EAAEihB,GAAG,MAAM,IAAK,OAAO,IAAK,MAAM,IAAK,QAAQjhB,EAAE4d,GAAG,MAAM,IAAK,oBAAoB,IAAK,qBAAqB,IAAK,gBAAgB,IAAK,cAAc,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,YAAY5d,EAAE0f,GAAG,IAAI9hB,EAAE,KAAO,EAAFI,GAAKF,GAAGF,GAAG,WAAWG,EAAEN,EAAEG,EAAE,OAAOqC,EAAEA,EAAE,UAAU,KAAKA,EAAErC,EAAE,GAAG,IAAI,IAAQP,EAAJE,EAAEwC,EAAI,OAC/exC,GAAG,CAAK,IAAIG,GAARL,EAAEE,GAAUkU,UAAsF,GAA5E,IAAIpU,EAAEqL,KAAK,OAAOhL,IAAIL,EAAEK,EAAE,OAAOD,IAAc,OAAVC,EAAE0U,GAAG7U,EAAEE,KAAYG,EAAE1E,KAAKuuB,GAAGlqB,EAAEG,EAAEL,MAASS,EAAE,MAAMP,EAAEA,EAAE4V,OAAO,EAAEvV,EAAE5F,SAASiI,EAAE,IAAID,EAAEC,EAAEpC,EAAE,KAAKI,EAAE6B,GAAGI,EAAEhH,KAAK,CAAC6pB,MAAM9iB,EAAE+iB,UAAUplB,MAAM,GAAG,KAAO,EAAFI,GAAK,CAA4E,GAAnCgC,EAAE,aAAajC,GAAG,eAAeA,KAAtEkC,EAAE,cAAclC,GAAG,gBAAgBA,IAA2C,KAAO,GAAFC,MAAQH,EAAEI,EAAE4e,eAAe5e,EAAE6e,eAAevH,GAAG1X,KAAIA,EAAE6pB,OAAgB1nB,GAAGC,KAAGA,EAAEH,EAAEgF,SAAShF,EAAEA,GAAGG,EAAEH,EAAE6K,eAAe1K,EAAEgmB,aAAahmB,EAAE0nB,aAAa7iB,OAAU9E,GAAqCA,EAAED,EAAiB,QAAflC,GAAnCA,EAAEI,EAAE4e,eAAe5e,EAAE8e,WAAkBxH,GAAG1X,GAAG,QACleA,KAARC,EAAEmV,GAAGpV,KAAU,IAAIA,EAAE6K,KAAK,IAAI7K,EAAE6K,OAAK7K,EAAE,QAAUmC,EAAE,KAAKnC,EAAEkC,GAAKC,IAAInC,GAAE,CAAgU,GAA/TD,EAAEsf,GAAGxf,EAAE,eAAeD,EAAE,eAAeF,EAAE,QAAW,eAAeQ,GAAG,gBAAgBA,IAAEH,EAAE8hB,GAAGhiB,EAAE,iBAAiBD,EAAE,iBAAiBF,EAAE,WAAUO,EAAE,MAAMkC,EAAEC,EAAEqjB,GAAGtjB,GAAG3C,EAAE,MAAMQ,EAAEoC,EAAEqjB,GAAGzlB,IAAGoC,EAAE,IAAIrC,EAAEF,EAAEH,EAAE,QAAQyC,EAAE/B,EAAE6B,IAAKtD,OAAOsB,EAAEmC,EAAE4c,cAAcxf,EAAEK,EAAE,KAAK6X,GAAGzV,KAAKC,KAAInC,EAAE,IAAIA,EAAEH,EAAEF,EAAE,QAAQM,EAAEI,EAAE6B,IAAKtD,OAAOa,EAAEO,EAAEif,cAAc/e,EAAEJ,EAAEE,GAAGE,EAAEJ,EAAKsC,GAAGnC,EAAEG,EAAE,CAAa,IAARP,EAAEI,EAAEN,EAAE,EAAMF,EAAhBO,EAAEoC,EAAkB3C,EAAEA,EAAEuqB,GAAGvqB,GAAGE,IAAQ,IAAJF,EAAE,EAAMK,EAAED,EAAEC,EAAEA,EAAEkqB,GAAGlqB,GAAGL,IAAI,KAAK,EAAEE,EAAEF,GAAGO,EAAEgqB,GAAGhqB,GAAGL,IAAI,KAAK,EAAEF,EAAEE,GAAGE,EACpfmqB,GAAGnqB,GAAGJ,IAAI,KAAKE,KAAK,CAAC,GAAGK,IAAIH,GAAG,OAAOA,GAAGG,IAAIH,EAAEyV,UAAU,MAAMlV,EAAEJ,EAAEgqB,GAAGhqB,GAAGH,EAAEmqB,GAAGnqB,GAAGG,EAAE,UAAUA,EAAE,KAAK,OAAOoC,GAAG6nB,GAAG3nB,EAAED,EAAED,EAAEpC,GAAE,GAAI,OAAOC,GAAG,OAAOC,GAAG+pB,GAAG3nB,EAAEpC,EAAED,EAAED,GAAE,GAAiE,GAAG,YAA1CoC,GAAjBC,EAAEF,EAAEujB,GAAGvjB,GAAG+E,QAAWiE,UAAU9I,EAAE8I,SAASpD,gBAA+B,UAAU3F,GAAG,SAASC,EAAEO,KAAK,IAAIX,EAAE0jB,QAAQ,GAAGX,GAAG3iB,GAAG,GAAGujB,GAAG3jB,EAAEukB,OAAO,CAACvkB,EAAEqkB,GAAG,IAAIljB,EAAEgjB,QAAQhkB,EAAEC,EAAE8I,WAAW,UAAU/I,EAAE2F,gBAAgB,aAAa1F,EAAEO,MAAM,UAAUP,EAAEO,QAAQX,EAAEskB,IAClV,OADyVtkB,IAAIA,EAAEA,EAAE9B,EAAEgC,IAAK8iB,GAAG3iB,EAAEL,EAAE5B,EAAE6B,IAAWkB,GAAGA,EAAEjD,EAAEkC,EAAEF,GAAG,aAAahC,IAAIiD,EAAEf,EAAEiK,gBACtelJ,EAAEsJ,YAAY,WAAWrK,EAAEO,MAAMiK,GAAGxK,EAAE,SAASA,EAAE9G,QAAO6H,EAAEjB,EAAEujB,GAAGvjB,GAAG+E,OAAc/G,GAAG,IAAK,WAAa6kB,GAAG5hB,IAAI,SAASA,EAAEqkB,mBAAgBE,GAAGvkB,EAAEwkB,GAAGzlB,EAAE0lB,GAAG,MAAK,MAAM,IAAK,WAAWA,GAAGD,GAAGD,GAAG,KAAK,MAAM,IAAK,YAAYG,IAAG,EAAG,MAAM,IAAK,cAAc,IAAK,UAAU,IAAK,UAAUA,IAAG,EAAGC,GAAGzlB,EAAEjC,EAAE6B,GAAG,MAAM,IAAK,kBAAkB,GAAGwlB,GAAG,MAAM,IAAK,UAAU,IAAK,QAAQK,GAAGzlB,EAAEjC,EAAE6B,GAAG,IAAIqB,EAAE,GAAGggB,GAAGnjB,EAAE,CAAC,OAAOD,GAAG,IAAK,mBAAmB,IAAI2C,EAAE,qBAAqB,MAAM1C,EAAE,IAAK,iBAAiB0C,EAAE,mBAAmB,MAAM1C,EACrf,IAAK,oBAAoB0C,EAAE,sBAAsB,MAAM1C,EAAE0C,OAAE,OAAYkhB,GAAGF,GAAG3jB,EAAEE,KAAKyC,EAAE,oBAAoB,YAAY3C,GAAG,MAAME,EAAE4b,UAAUnZ,EAAE,sBAAsBA,IAAI6gB,IAAI,OAAOtjB,EAAEshB,SAASqC,IAAI,uBAAuBlhB,EAAE,qBAAqBA,GAAGkhB,KAAKzgB,EAAEwY,OAAYF,GAAG,UAARD,GAAG1Z,GAAkB0Z,GAAGrgB,MAAMqgB,GAAGhO,YAAYoW,IAAG,IAAe,GAAV5gB,EAAE8hB,GAAG/iB,EAAEW,IAAO1I,SAAS0I,EAAE,IAAImd,GAAGnd,EAAE3C,EAAE,KAAKE,EAAE6B,GAAGI,EAAEhH,KAAK,CAAC6pB,MAAMriB,EAAEsiB,UAAUhiB,IAAIG,EAAET,EAAEod,KAAK3c,EAAW,QAARA,EAAEwgB,GAAG1jB,MAAcyC,EAAEod,KAAK3c,MAASA,EAAEmgB,GA1BjK,SAAYvjB,EAAEC,GAAG,OAAOD,GAAG,IAAK,iBAAiB,OAAO4jB,GAAG3jB,GAAG,IAAK,WAAW,OAAG,KAAKA,EAAEwhB,MAAa,MAAKiC,IAAG,EAAUD,IAAG,IAAK,YAAY,OAAOzjB,EAAEC,EAAE8f,QAAS0D,IAAIC,GAAG,KAAK1jB,EAAE,QAAQ,OAAO,MA0BxB+pB,CAAG/pB,EAAEE,GAzB1b,SAAYF,EAAEC,GAAG,GAAG4jB,GAAG,MAAM,mBAAmB7jB,IAAIojB,IAAIO,GAAG3jB,EAAEC,IAAID,EAAE4b,KAAKD,GAAGD,GAAGD,GAAG,KAAKoI,IAAG,EAAG7jB,GAAG,KAAK,OAAOA,GAAwQ,QAAQ,OAAO,KAA3P,IAAK,WAAW,KAAKC,EAAEqe,SAASre,EAAEue,QAAQve,EAAEwe,UAAUxe,EAAEqe,SAASre,EAAEue,OAAO,CAAC,GAAGve,EAAE+pB,MAAM,EAAE/pB,EAAE+pB,KAAK/vB,OAAO,OAAOgG,EAAE+pB,KAAK,GAAG/pB,EAAEwhB,MAAM,OAAO5jB,OAAOG,aAAaiC,EAAEwhB,OAAO,OAAO,KAAK,IAAK,iBAAiB,OAAO+B,IAAI,OAAOvjB,EAAEuhB,OAAO,KAAKvhB,EAAE8f,MAyB+EkK,CAAGjqB,EAAEE,MAA2B,GAAxB8B,EAAE+iB,GAAG/iB,EAAE,kBAAqB/H,SAAS8H,EAAE,IAAI+d,GAAG,gBACnf,cAAc,KAAK5f,EAAE6B,GAAGI,EAAEhH,KAAK,CAAC6pB,MAAMjjB,EAAEkjB,UAAUjjB,IAAID,EAAEge,KAAK3c,IAAGiiB,GAAGljB,EAAElC,MAAK,SAASypB,GAAG1pB,EAAEC,EAAEC,GAAG,MAAM,CAAC4oB,SAAS9oB,EAAE+oB,SAAS9oB,EAAEoc,cAAcnc,GAAG,SAAS6kB,GAAG/kB,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAE,UAAU+B,EAAE,GAAG,OAAOhC,GAAG,CAAC,IAAI+B,EAAE/B,EAAEqC,EAAEN,EAAE2R,UAAU,IAAI3R,EAAE4I,KAAK,OAAOtI,IAAIN,EAAEM,EAAY,OAAVA,EAAEgS,GAAGrU,EAAEE,KAAY8B,EAAEkoB,QAAQR,GAAG1pB,EAAEqC,EAAEN,IAAc,OAAVM,EAAEgS,GAAGrU,EAAEC,KAAY+B,EAAE7G,KAAKuuB,GAAG1pB,EAAEqC,EAAEN,KAAK/B,EAAEA,EAAEoV,OAAO,OAAOpT,EAAE,SAAS6nB,GAAG7pB,GAAG,GAAG,OAAOA,EAAE,OAAO,KAAK,GAAGA,EAAEA,EAAEoV,aAAapV,GAAG,IAAIA,EAAE2K,KAAK,OAAO3K,GAAI,KACxa,SAAS8pB,GAAG9pB,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,IAAI,IAAIM,EAAEpC,EAAEkc,WAAWha,EAAE,GAAG,OAAOjC,GAAGA,IAAI8B,GAAG,CAAC,IAAIE,EAAEhC,EAAE+B,EAAEC,EAAEiT,UAAUlW,EAAEiD,EAAEwR,UAAU,GAAG,OAAOzR,GAAGA,IAAID,EAAE,MAAM,IAAIE,EAAEyI,KAAK,OAAO1L,IAAIiD,EAAEjD,EAAE8C,EAAa,OAAVE,EAAEoS,GAAGnU,EAAEmC,KAAYF,EAAE+nB,QAAQR,GAAGxpB,EAAE+B,EAAEC,IAAKH,GAAc,OAAVE,EAAEoS,GAAGnU,EAAEmC,KAAYF,EAAEhH,KAAKuuB,GAAGxpB,EAAE+B,EAAEC,KAAMhC,EAAEA,EAAEkV,OAAO,IAAIjT,EAAElI,QAAQ+F,EAAE7E,KAAK,CAAC6pB,MAAM/kB,EAAEglB,UAAU9iB,IAAI,SAASgoB,MAAM,IAAIC,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGtqB,EAAEC,GAAG,OAAOD,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAW,QAAQC,EAAEsqB,UAAU,OAAM,EAC3b,SAASC,GAAGxqB,EAAEC,GAAG,MAAM,aAAaD,GAAG,WAAWA,GAAG,aAAaA,GAAG,kBAAkBC,EAAEmC,UAAU,kBAAkBnC,EAAEmC,UAAU,kBAAkBnC,EAAEoN,yBAAyB,OAAOpN,EAAEoN,yBAAyB,MAAMpN,EAAEoN,wBAAwBod,OAAO,IAAIC,GAAG,oBAAoBC,WAAWA,gBAAW,EAAOC,GAAG,oBAAoBC,aAAaA,kBAAa,EAAO,SAASC,GAAG9qB,GAAG,IAAIA,EAAEyO,SAASzO,EAAEyN,YAAY,GAAG,IAAIzN,EAAEyO,WAAoB,OAATzO,EAAEA,EAAE+L,QAAe/L,EAAEyN,YAAY,KACxc,SAASsd,GAAG/qB,GAAG,KAAK,MAAMA,EAAEA,EAAEA,EAAE6mB,YAAY,CAAC,IAAI5mB,EAAED,EAAEyO,SAAS,GAAG,IAAIxO,GAAG,IAAIA,EAAE,MAAM,OAAOD,EAAE,SAASgrB,GAAGhrB,GAAGA,EAAEA,EAAEirB,gBAAgB,IAAI,IAAIhrB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAEyO,SAAS,CAAC,IAAIvO,EAAEF,EAAE+f,KAAK,GAAG,MAAM7f,GAAG,OAAOA,GAAG,OAAOA,EAAE,CAAC,GAAG,IAAID,EAAE,OAAOD,EAAEC,QAAQ,OAAOC,GAAGD,IAAID,EAAEA,EAAEirB,gBAAgB,OAAO,KAAK,IAAIC,GAAG,EAA0D,IAAIC,GAAGzQ,KAAK0O,SAAS1tB,SAAS,IAAIE,MAAM,GAAGwvB,GAAG,gBAAgBD,GAAGE,GAAG,gBAAgBF,GAAGxB,GAAG,oBAAoBwB,GAAGG,GAAG,iBAAiBH,GAC9d,SAAS3T,GAAGxX,GAAG,IAAIC,EAAED,EAAEorB,IAAI,GAAGnrB,EAAE,OAAOA,EAAE,IAAI,IAAIC,EAAEF,EAAEoT,WAAWlT,GAAG,CAAC,GAAGD,EAAEC,EAAEypB,KAAKzpB,EAAEkrB,IAAI,CAAe,GAAdlrB,EAAED,EAAEkV,UAAa,OAAOlV,EAAE0V,OAAO,OAAOzV,GAAG,OAAOA,EAAEyV,MAAM,IAAI3V,EAAEgrB,GAAGhrB,GAAG,OAAOA,GAAG,CAAC,GAAGE,EAAEF,EAAEorB,IAAI,OAAOlrB,EAAEF,EAAEgrB,GAAGhrB,GAAG,OAAOC,EAAMC,GAAJF,EAAEE,GAAMkT,WAAW,OAAO,KAAK,SAASK,GAAGzT,GAAkB,QAAfA,EAAEA,EAAEorB,KAAKprB,EAAE2pB,MAAc,IAAI3pB,EAAE2K,KAAK,IAAI3K,EAAE2K,KAAK,KAAK3K,EAAE2K,KAAK,IAAI3K,EAAE2K,IAAI,KAAK3K,EAAE,SAASulB,GAAGvlB,GAAG,GAAG,IAAIA,EAAE2K,KAAK,IAAI3K,EAAE2K,IAAI,OAAO3K,EAAE0T,UAAU,MAAMvS,MAAM+B,EAAE,KAAM,SAASyQ,GAAG3T,GAAG,OAAOA,EAAEqrB,KAAK,KAClb,SAASrC,GAAGhpB,GAAG,IAAIC,EAAED,EAAEsrB,IAAkC,YAA9B,IAASrrB,IAAIA,EAAED,EAAEsrB,IAAI,IAAI7kB,KAAYxG,EAAE,IAAIsrB,GAAG,GAAGC,IAAI,EAAE,SAASC,GAAGzrB,GAAG,MAAM,CAACwB,QAAQxB,GAAG,SAASyB,GAAEzB,GAAG,EAAEwrB,KAAKxrB,EAAEwB,QAAQ+pB,GAAGC,IAAID,GAAGC,IAAI,KAAKA,MAAM,SAAS9pB,GAAE1B,EAAEC,GAAGurB,KAAKD,GAAGC,IAAIxrB,EAAEwB,QAAQxB,EAAEwB,QAAQvB,EAAE,IAAIyrB,GAAG,GAAG9oB,GAAE6oB,GAAGC,IAAI7oB,GAAE4oB,IAAG,GAAIE,GAAGD,GAC5P,SAASE,GAAG5rB,EAAEC,GAAG,IAAIC,EAAEF,EAAEyC,KAAKopB,aAAa,IAAI3rB,EAAE,OAAOwrB,GAAG,IAAI1pB,EAAEhC,EAAE0T,UAAU,GAAG1R,GAAGA,EAAE8pB,8CAA8C7rB,EAAE,OAAO+B,EAAE+pB,0CAA0C,IAAS1pB,EAALN,EAAE,GAAK,IAAIM,KAAKnC,EAAE6B,EAAEM,GAAGpC,EAAEoC,GAAoH,OAAjHL,KAAIhC,EAAEA,EAAE0T,WAAYoY,4CAA4C7rB,EAAED,EAAE+rB,0CAA0ChqB,GAAUA,EAAE,SAASiqB,GAAGhsB,GAAyB,OAAO,QAA7BA,EAAEA,EAAEisB,yBAAmC,IAASjsB,EAAE,SAASksB,KAAKzqB,GAAEoB,IAAGpB,GAAEmB,IAAG,SAASupB,GAAGnsB,EAAEC,EAAEC,GAAG,GAAG0C,GAAEpB,UAAUkqB,GAAG,MAAMvqB,MAAM+B,EAAE,MAAMxB,GAAEkB,GAAE3C,GAAGyB,GAAEmB,GAAE3C,GAC/e,SAASksB,GAAGpsB,EAAEC,EAAEC,GAAG,IAAI8B,EAAEhC,EAAE0T,UAAgC,GAAtB1T,EAAEC,EAAEgsB,kBAAqB,oBAAoBjqB,EAAEqqB,gBAAgB,OAAOnsB,EAAwB,IAAI,IAAI6B,KAA9BC,EAAEA,EAAEqqB,kBAAiC,KAAKtqB,KAAK/B,GAAG,MAAMmB,MAAM+B,EAAE,IAAI2H,EAAG5K,IAAI,UAAU8B,IAAI,OAAOO,EAAE,GAAGpC,EAAE8B,GAAG,SAASsqB,GAAGtsB,GAAyG,OAAtGA,GAAGA,EAAEA,EAAE0T,YAAY1T,EAAEusB,2CAA2Cb,GAAGC,GAAG/oB,GAAEpB,QAAQE,GAAEkB,GAAE5C,GAAG0B,GAAEmB,GAAEA,GAAErB,UAAe,EAAG,SAASgrB,GAAGxsB,EAAEC,EAAEC,GAAG,IAAI8B,EAAEhC,EAAE0T,UAAU,IAAI1R,EAAE,MAAMb,MAAM+B,EAAE,MAAMhD,GAAGF,EAAEosB,GAAGpsB,EAAEC,EAAE0rB,IAAI3pB,EAAEuqB,0CAA0CvsB,EAAEyB,GAAEoB,IAAGpB,GAAEmB,IAAGlB,GAAEkB,GAAE5C,IAAIyB,GAAEoB,IAAGnB,GAAEmB,GAAE3C,GAC7e,IAAIusB,GAAG,KAAKC,GAAG,KAAKC,GAAGptB,EAAEmY,yBAAyBkV,GAAGrtB,EAAE6Y,0BAA0ByU,GAAGttB,EAAEutB,wBAAwBC,GAAGxtB,EAAEytB,qBAAqBC,GAAG1tB,EAAE2tB,sBAAsBC,GAAG5tB,EAAEma,aAAa0T,GAAG7tB,EAAE8tB,iCAAiCC,GAAG/tB,EAAEguB,2BAA2BC,GAAGjuB,EAAE0b,8BAA8BwS,GAAGluB,EAAE8Y,wBAAwBqV,GAAGnuB,EAAEouB,qBAAqBC,GAAGruB,EAAEsuB,sBAAsBC,GAAG,GAAGC,QAAG,IAASd,GAAGA,GAAG,aAAae,GAAG,KAAKC,GAAG,KAAKC,IAAG,EAAGC,GAAGhB,KAAKnqB,GAAE,IAAImrB,GAAGhB,GAAG,WAAW,OAAOA,KAAKgB,IACtd,SAASC,KAAK,OAAOhB,MAAM,KAAKE,GAAG,OAAO,GAAG,KAAKE,GAAG,OAAO,GAAG,KAAKC,GAAG,OAAO,GAAG,KAAKC,GAAG,OAAO,GAAG,KAAKE,GAAG,OAAO,GAAG,QAAQ,MAAMzsB,MAAM+B,EAAE,OAAQ,SAASmrB,GAAGruB,GAAG,OAAOA,GAAG,KAAK,GAAG,OAAOstB,GAAG,KAAK,GAAG,OAAOE,GAAG,KAAK,GAAG,OAAOC,GAAG,KAAK,GAAG,OAAOC,GAAG,KAAK,GAAG,OAAOE,GAAG,QAAQ,MAAMzsB,MAAM+B,EAAE,OAAQ,SAASorB,GAAGtuB,EAAEC,GAAW,OAARD,EAAEquB,GAAGruB,GAAU2sB,GAAG3sB,EAAEC,GAAG,SAASsuB,GAAGvuB,EAAEC,EAAEC,GAAW,OAARF,EAAEquB,GAAGruB,GAAU4sB,GAAG5sB,EAAEC,EAAEC,GAAG,SAASsuB,KAAK,GAAG,OAAOP,GAAG,CAAC,IAAIjuB,EAAEiuB,GAAGA,GAAG,KAAKpB,GAAG7sB,GAAGyuB,KAC3a,SAASA,KAAK,IAAIP,IAAI,OAAOF,GAAG,CAACE,IAAG,EAAG,IAAIluB,EAAE,EAAE,IAAI,IAAIC,EAAE+tB,GAAGM,GAAG,IAAG,WAAW,KAAKtuB,EAAEC,EAAEhG,OAAO+F,IAAI,CAAC,IAAIE,EAAED,EAAED,GAAG,GAAGE,EAAEA,GAAE,SAAU,OAAOA,OAAM8tB,GAAG,KAAK,MAAM9tB,GAAG,MAAM,OAAO8tB,KAAKA,GAAGA,GAAGpyB,MAAMoE,EAAE,IAAI4sB,GAAGU,GAAGkB,IAAItuB,EAA3J,QAAsKguB,IAAG,IAAK,IAAIQ,GAAGjmB,EAAG7E,wBAAwB,SAAS+qB,GAAG3uB,EAAEC,GAAG,GAAGD,GAAGA,EAAEuC,aAAa,CAA4B,IAAI,IAAIrC,KAAnCD,EAAEqC,EAAE,GAAGrC,GAAGD,EAAEA,EAAEuC,kBAA4B,IAAStC,EAAEC,KAAKD,EAAEC,GAAGF,EAAEE,IAAI,OAAOD,EAAE,OAAOA,EAAE,IAAI2uB,GAAGnD,GAAG,MAAMoD,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAKD,GAAGD,GAAGD,GAAG,KAC5b,SAASI,GAAGjvB,GAAG,IAAIC,EAAE2uB,GAAGptB,QAAQC,GAAEmtB,IAAI5uB,EAAEyC,KAAKsC,SAASL,cAAczE,EAAE,SAASivB,GAAGlvB,EAAEC,GAAG,KAAK,OAAOD,GAAG,CAAC,IAAIE,EAAEF,EAAEmV,UAAU,IAAInV,EAAEmvB,WAAWlvB,KAAKA,EAAtB,CAAwB,GAAG,OAAOC,IAAIA,EAAEivB,WAAWlvB,KAAKA,EAAE,MAAWC,EAAEivB,YAAYlvB,OAAOD,EAAEmvB,YAAYlvB,EAAE,OAAOC,IAAIA,EAAEivB,YAAYlvB,GAAGD,EAAEA,EAAEoV,QAAQ,SAASga,GAAGpvB,EAAEC,GAAG4uB,GAAG7uB,EAAE+uB,GAAGD,GAAG,KAAsB,QAAjB9uB,EAAEA,EAAEqvB,eAAuB,OAAOrvB,EAAEsvB,eAAe,KAAKtvB,EAAEuvB,MAAMtvB,KAAKuvB,IAAG,GAAIxvB,EAAEsvB,aAAa,MACvY,SAASG,GAAGzvB,EAAEC,GAAG,GAAG8uB,KAAK/uB,IAAG,IAAKC,GAAG,IAAIA,EAAmG,GAA7F,kBAAkBA,GAAG,aAAaA,IAAE8uB,GAAG/uB,EAAEC,EAAE,YAAWA,EAAE,CAACW,QAAQZ,EAAE0vB,aAAazvB,EAAEhF,KAAK,MAAS,OAAO6zB,GAAG,CAAC,GAAG,OAAOD,GAAG,MAAM1tB,MAAM+B,EAAE,MAAM4rB,GAAG7uB,EAAE4uB,GAAGQ,aAAa,CAACE,MAAM,EAAED,aAAarvB,EAAE0vB,WAAW,WAAWb,GAAGA,GAAG7zB,KAAKgF,EAAE,OAAOD,EAAE0E,cAAc,IAAIkrB,IAAG,EAAG,SAASC,GAAG7vB,GAAGA,EAAE8vB,YAAY,CAACC,UAAU/vB,EAAEuV,cAAcya,gBAAgB,KAAKC,eAAe,KAAKC,OAAO,CAACC,QAAQ,MAAMC,QAAQ,MAC1a,SAASC,GAAGrwB,EAAEC,GAAGD,EAAEA,EAAE8vB,YAAY7vB,EAAE6vB,cAAc9vB,IAAIC,EAAE6vB,YAAY,CAACC,UAAU/vB,EAAE+vB,UAAUC,gBAAgBhwB,EAAEgwB,gBAAgBC,eAAejwB,EAAEiwB,eAAeC,OAAOlwB,EAAEkwB,OAAOE,QAAQpwB,EAAEowB,UAAU,SAASE,GAAGtwB,EAAEC,GAAG,MAAM,CAACswB,UAAUvwB,EAAEwwB,KAAKvwB,EAAE0K,IAAI,EAAE8lB,QAAQ,KAAKC,SAAS,KAAKz1B,KAAK,MAAM,SAAS01B,GAAG3wB,EAAEC,GAAmB,GAAG,QAAnBD,EAAEA,EAAE8vB,aAAwB,CAAY,IAAI5vB,GAAfF,EAAEA,EAAEkwB,QAAeC,QAAQ,OAAOjwB,EAAED,EAAEhF,KAAKgF,GAAGA,EAAEhF,KAAKiF,EAAEjF,KAAKiF,EAAEjF,KAAKgF,GAAGD,EAAEmwB,QAAQlwB,GACrZ,SAAS2wB,GAAG5wB,EAAEC,GAAG,IAAIC,EAAEF,EAAE8vB,YAAY9tB,EAAEhC,EAAEmV,UAAU,GAAG,OAAOnT,GAAoB9B,KAAhB8B,EAAEA,EAAE8tB,aAAmB,CAAC,IAAI/tB,EAAE,KAAKM,EAAE,KAAyB,GAAG,QAAvBnC,EAAEA,EAAE8vB,iBAA4B,CAAC,EAAE,CAAC,IAAI7tB,EAAE,CAACouB,UAAUrwB,EAAEqwB,UAAUC,KAAKtwB,EAAEswB,KAAK7lB,IAAIzK,EAAEyK,IAAI8lB,QAAQvwB,EAAEuwB,QAAQC,SAASxwB,EAAEwwB,SAASz1B,KAAK,MAAM,OAAOoH,EAAEN,EAAEM,EAAEF,EAAEE,EAAEA,EAAEpH,KAAKkH,EAAEjC,EAAEA,EAAEjF,WAAW,OAAOiF,GAAG,OAAOmC,EAAEN,EAAEM,EAAEpC,EAAEoC,EAAEA,EAAEpH,KAAKgF,OAAO8B,EAAEM,EAAEpC,EAAiH,OAA/GC,EAAE,CAAC6vB,UAAU/tB,EAAE+tB,UAAUC,gBAAgBjuB,EAAEkuB,eAAe5tB,EAAE6tB,OAAOluB,EAAEkuB,OAAOE,QAAQpuB,EAAEouB,cAASpwB,EAAE8vB,YAAY5vB,GAA4B,QAAnBF,EAAEE,EAAE+vB,gBAAwB/vB,EAAE8vB,gBAAgB/vB,EAAED,EAAE/E,KACnfgF,EAAEC,EAAE+vB,eAAehwB,EACnB,SAAS4wB,GAAG7wB,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE/B,EAAE8vB,YAAYF,IAAG,EAAG,IAAIvtB,EAAEN,EAAEiuB,gBAAgB7tB,EAAEJ,EAAEkuB,eAAe/tB,EAAEH,EAAEmuB,OAAOC,QAAQ,GAAG,OAAOjuB,EAAE,CAACH,EAAEmuB,OAAOC,QAAQ,KAAK,IAAIluB,EAAEC,EAAEjD,EAAEgD,EAAEhH,KAAKgH,EAAEhH,KAAK,KAAK,OAAOkH,EAAEE,EAAEpD,EAAEkD,EAAElH,KAAKgE,EAAEkD,EAAEF,EAAE,IAAIzG,EAAEwE,EAAEmV,UAAU,GAAG,OAAO3Z,EAAE,CAAiB,IAAI4E,GAApB5E,EAAEA,EAAEs0B,aAAoBG,eAAe7vB,IAAI+B,IAAI,OAAO/B,EAAE5E,EAAEw0B,gBAAgB/wB,EAAEmB,EAAEnF,KAAKgE,EAAEzD,EAAEy0B,eAAehuB,IAAI,GAAG,OAAOI,EAAE,CAA8B,IAA7BjC,EAAE2B,EAAEguB,UAAU5tB,EAAE,EAAE3G,EAAEyD,EAAEgD,EAAE,OAAO,CAACC,EAAEG,EAAEmuB,KAAK,IAAItxB,EAAEmD,EAAEkuB,UAAU,IAAIvuB,EAAEE,KAAKA,EAAE,CAAC,OAAO1G,IAAIA,EAAEA,EAAEP,KAAK,CAACs1B,UAAUrxB,EAAEsxB,KAAK,EAAE7lB,IAAItI,EAAEsI,IAAI8lB,QAAQpuB,EAAEouB,QAAQC,SAASruB,EAAEquB,SACrfz1B,KAAK,OAAO+E,EAAE,CAAC,IAAIU,EAAEV,EAAEF,EAAEuC,EAAU,OAARH,EAAEjC,EAAEf,EAAEgB,EAASJ,EAAE6K,KAAK,KAAK,EAAc,GAAG,oBAAfjK,EAAEZ,EAAE2wB,SAAiC,CAACrwB,EAAEM,EAAE/E,KAAKuD,EAAEkB,EAAE8B,GAAG,MAAMlC,EAAEI,EAAEM,EAAE,MAAMV,EAAE,KAAK,EAAEU,EAAE2U,OAAe,KAAT3U,EAAE2U,MAAY,GAAG,KAAK,EAAsD,GAAG,QAA3CnT,EAAE,oBAAdxB,EAAEZ,EAAE2wB,SAAgC/vB,EAAE/E,KAAKuD,EAAEkB,EAAE8B,GAAGxB,SAAe,IAASwB,EAAE,MAAMlC,EAAEI,EAAEkC,EAAE,GAAGlC,EAAE8B,GAAG,MAAMlC,EAAE,KAAK,EAAE4vB,IAAG,GAAI,OAAOvtB,EAAEquB,WAAW1wB,EAAEqV,OAAO,GAAe,QAAZnT,EAAEH,EAAEquB,SAAiBruB,EAAEquB,QAAQ,CAAC/tB,GAAGH,EAAE/G,KAAKkH,SAASnD,EAAE,CAACqxB,UAAUrxB,EAAEsxB,KAAKtuB,EAAEyI,IAAItI,EAAEsI,IAAI8lB,QAAQpuB,EAAEouB,QAAQC,SAASruB,EAAEquB,SAASz1B,KAAK,MAAM,OAAOO,GAAGyD,EAAEzD,EAAE0D,EAAE+C,EAAE7B,GAAG5E,EAAEA,EAAEP,KAAKiE,EAAEiD,GAAGD,EAAW,GAAG,QAAZG,EAAEA,EAAEpH,MAC1e,IAAsB,QAAnBiH,EAAEH,EAAEmuB,OAAOC,SAAiB,MAAW9tB,EAAEH,EAAEjH,KAAKiH,EAAEjH,KAAK,KAAK8G,EAAEkuB,eAAe/tB,EAAEH,EAAEmuB,OAAOC,QAAQ,MAAc,OAAO30B,IAAIyG,EAAE7B,GAAG2B,EAAEguB,UAAU9tB,EAAEF,EAAEiuB,gBAAgB/wB,EAAE8C,EAAEkuB,eAAez0B,EAAEs1B,IAAI3uB,EAAEnC,EAAEuvB,MAAMptB,EAAEnC,EAAEuV,cAAcnV,GAAG,SAAS2wB,GAAG/wB,EAAEC,EAAEC,GAA8B,GAA3BF,EAAEC,EAAEmwB,QAAQnwB,EAAEmwB,QAAQ,KAAQ,OAAOpwB,EAAE,IAAIC,EAAE,EAAEA,EAAED,EAAE/F,OAAOgG,IAAI,CAAC,IAAI+B,EAAEhC,EAAEC,GAAG8B,EAAEC,EAAE0uB,SAAS,GAAG,OAAO3uB,EAAE,CAAqB,GAApBC,EAAE0uB,SAAS,KAAK1uB,EAAE9B,EAAK,oBAAoB6B,EAAE,MAAMZ,MAAM+B,EAAE,IAAInB,IAAIA,EAAEpG,KAAKqG,KAAK,IAAIgvB,IAAI,IAAIzqB,EAAGnC,WAAWvD,KAC3b,SAASowB,GAAGjxB,EAAEC,EAAEC,EAAE8B,GAA8B9B,EAAE,QAAXA,EAAEA,EAAE8B,EAAtB/B,EAAED,EAAEuV,sBAAmC,IAASrV,EAAED,EAAEqC,EAAE,GAAGrC,EAAEC,GAAGF,EAAEuV,cAAcrV,EAAE,IAAIF,EAAEuvB,QAAQvvB,EAAE8vB,YAAYC,UAAU7vB,GAC3I,IAAIgxB,GAAG,CAAC7wB,UAAU,SAASL,GAAG,SAAOA,EAAEA,EAAEmxB,kBAAiBjc,GAAGlV,KAAKA,GAAMQ,gBAAgB,SAASR,EAAEC,EAAEC,GAAGF,EAAEA,EAAEmxB,gBAAgB,IAAInvB,EAAEovB,KAAKrvB,EAAEsvB,GAAGrxB,GAAGqC,EAAEiuB,GAAGtuB,EAAED,GAAGM,EAAEouB,QAAQxwB,OAAE,IAASC,GAAG,OAAOA,IAAImC,EAAEquB,SAASxwB,GAAGywB,GAAG3wB,EAAEqC,GAAGivB,GAAGtxB,EAAE+B,EAAEC,IAAIzB,oBAAoB,SAASP,EAAEC,EAAEC,GAAGF,EAAEA,EAAEmxB,gBAAgB,IAAInvB,EAAEovB,KAAKrvB,EAAEsvB,GAAGrxB,GAAGqC,EAAEiuB,GAAGtuB,EAAED,GAAGM,EAAEsI,IAAI,EAAEtI,EAAEouB,QAAQxwB,OAAE,IAASC,GAAG,OAAOA,IAAImC,EAAEquB,SAASxwB,GAAGywB,GAAG3wB,EAAEqC,GAAGivB,GAAGtxB,EAAE+B,EAAEC,IAAI1B,mBAAmB,SAASN,EAAEC,GAAGD,EAAEA,EAAEmxB,gBAAgB,IAAIjxB,EAAEkxB,KAAKpvB,EAAEqvB,GAAGrxB,GAAG+B,EAAEuuB,GAAGpwB,EAAE8B,GAAGD,EAAE4I,IAAI,OAAE,IAAS1K,GAAG,OAAOA,IAAI8B,EAAE2uB,SACjfzwB,GAAG0wB,GAAG3wB,EAAE+B,GAAGuvB,GAAGtxB,EAAEgC,EAAE9B,KAAK,SAASqxB,GAAGvxB,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,EAAEF,GAAiB,MAAM,oBAApBnC,EAAEA,EAAE0T,WAAsC8d,sBAAsBxxB,EAAEwxB,sBAAsBxvB,EAAEK,EAAEF,IAAGlC,EAAExE,YAAWwE,EAAExE,UAAU6F,wBAAsBklB,GAAGtmB,EAAE8B,KAAKwkB,GAAGzkB,EAAEM,IAC/M,SAASovB,GAAGzxB,EAAEC,EAAEC,GAAG,IAAI8B,GAAE,EAAGD,EAAE2pB,GAAOrpB,EAAEpC,EAAEyxB,YAA2W,MAA/V,kBAAkBrvB,GAAG,OAAOA,EAAEA,EAAEotB,GAAGptB,IAAIN,EAAEiqB,GAAG/rB,GAAG0rB,GAAG/oB,GAAEpB,QAAyBa,GAAGL,EAAE,QAAtBA,EAAE/B,EAAE4rB,oBAA4B,IAAS7pB,GAAG4pB,GAAG5rB,EAAE+B,GAAG2pB,IAAIzrB,EAAE,IAAIA,EAAEC,EAAEmC,GAAGrC,EAAEuV,cAAc,OAAOtV,EAAE0xB,YAAO,IAAS1xB,EAAE0xB,MAAM1xB,EAAE0xB,MAAM,KAAK1xB,EAAEa,QAAQowB,GAAGlxB,EAAE0T,UAAUzT,EAAEA,EAAEkxB,gBAAgBnxB,EAAEgC,KAAIhC,EAAEA,EAAE0T,WAAYoY,4CAA4C/pB,EAAE/B,EAAE+rB,0CAA0C1pB,GAAUpC,EAC3Z,SAAS2xB,GAAG5xB,EAAEC,EAAEC,EAAE8B,GAAGhC,EAAEC,EAAE0xB,MAAM,oBAAoB1xB,EAAE4xB,2BAA2B5xB,EAAE4xB,0BAA0B3xB,EAAE8B,GAAG,oBAAoB/B,EAAE6xB,kCAAkC7xB,EAAE6xB,iCAAiC5xB,EAAE8B,GAAG/B,EAAE0xB,QAAQ3xB,GAAGkxB,GAAG3wB,oBAAoBN,EAAEA,EAAE0xB,MAAM,MAC/P,SAASI,GAAG/xB,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE/B,EAAE0T,UAAU3R,EAAEpB,MAAMT,EAAE6B,EAAE4vB,MAAM3xB,EAAEuV,cAAcxT,EAAElB,KAAKmwB,GAAGnB,GAAG7vB,GAAG,IAAIqC,EAAEpC,EAAEyxB,YAAY,kBAAkBrvB,GAAG,OAAOA,EAAEN,EAAEnB,QAAQ6uB,GAAGptB,IAAIA,EAAE2pB,GAAG/rB,GAAG0rB,GAAG/oB,GAAEpB,QAAQO,EAAEnB,QAAQgrB,GAAG5rB,EAAEqC,IAAIwuB,GAAG7wB,EAAEE,EAAE6B,EAAEC,GAAGD,EAAE4vB,MAAM3xB,EAAEuV,cAA2C,oBAA7BlT,EAAEpC,EAAE+xB,4BAAiDf,GAAGjxB,EAAEC,EAAEoC,EAAEnC,GAAG6B,EAAE4vB,MAAM3xB,EAAEuV,eAAe,oBAAoBtV,EAAE+xB,0BAA0B,oBAAoBjwB,EAAEkwB,yBAAyB,oBAAoBlwB,EAAEmwB,2BAA2B,oBAAoBnwB,EAAEowB,qBACvelyB,EAAE8B,EAAE4vB,MAAM,oBAAoB5vB,EAAEowB,oBAAoBpwB,EAAEowB,qBAAqB,oBAAoBpwB,EAAEmwB,2BAA2BnwB,EAAEmwB,4BAA4BjyB,IAAI8B,EAAE4vB,OAAOT,GAAG3wB,oBAAoBwB,EAAEA,EAAE4vB,MAAM,MAAMd,GAAG7wB,EAAEE,EAAE6B,EAAEC,GAAGD,EAAE4vB,MAAM3xB,EAAEuV,eAAe,oBAAoBxT,EAAEqwB,oBAAoBpyB,EAAEqV,OAAO,GAAG,IAAIgd,GAAGj4B,MAAME,QACvT,SAASg4B,GAAGtyB,EAAEC,EAAEC,GAAW,GAAG,QAAXF,EAAEE,EAAEyB,MAAiB,oBAAoB3B,GAAG,kBAAkBA,EAAE,CAAC,GAAGE,EAAEwC,OAAO,CAAY,GAAXxC,EAAEA,EAAEwC,OAAY,CAAC,GAAG,IAAIxC,EAAEyK,IAAI,MAAMxJ,MAAM+B,EAAE,MAAM,IAAIlB,EAAE9B,EAAEwT,UAAU,IAAI1R,EAAE,MAAMb,MAAM+B,EAAE,IAAIlD,IAAI,IAAI+B,EAAE,GAAG/B,EAAE,OAAG,OAAOC,GAAG,OAAOA,EAAE0B,KAAK,oBAAoB1B,EAAE0B,KAAK1B,EAAE0B,IAAI4wB,aAAaxwB,EAAS9B,EAAE0B,KAAI1B,EAAE,SAASD,GAAG,IAAIC,EAAE+B,EAAEnB,KAAKZ,IAAI+wB,KAAK/wB,EAAE+B,EAAEnB,KAAK,IAAI,OAAOb,SAASC,EAAE8B,GAAG9B,EAAE8B,GAAG/B,GAAGC,EAAEsyB,WAAWxwB,EAAS9B,GAAE,GAAG,kBAAkBD,EAAE,MAAMmB,MAAM+B,EAAE,MAAM,IAAIhD,EAAEwC,OAAO,MAAMvB,MAAM+B,EAAE,IAAIlD,IAAK,OAAOA,EAChe,SAASwyB,GAAGxyB,EAAEC,GAAG,GAAG,aAAaD,EAAEyC,KAAK,MAAMtB,MAAM+B,EAAE,GAAG,oBAAoBzI,OAAOgB,UAAUC,SAASC,KAAKsE,GAAG,qBAAqBxF,OAAO8D,KAAK0B,GAAG/B,KAAK,MAAM,IAAI+B,IAClK,SAASwyB,GAAGzyB,GAAG,SAASC,EAAEA,EAAEC,GAAG,GAAGF,EAAE,CAAC,IAAIgC,EAAE/B,EAAEyyB,WAAW,OAAO1wB,GAAGA,EAAE2wB,WAAWzyB,EAAED,EAAEyyB,WAAWxyB,GAAGD,EAAE2yB,YAAY3yB,EAAEyyB,WAAWxyB,EAAEA,EAAEyyB,WAAW,KAAKzyB,EAAEmV,MAAM,GAAG,SAASnV,EAAEA,EAAE8B,GAAG,IAAIhC,EAAE,OAAO,KAAK,KAAK,OAAOgC,GAAG/B,EAAEC,EAAE8B,GAAGA,EAAEA,EAAE4T,QAAQ,OAAO,KAAK,SAAS5T,EAAEhC,EAAEC,GAAG,IAAID,EAAE,IAAIyW,IAAI,OAAOxW,GAAG,OAAOA,EAAEzD,IAAIwD,EAAEsK,IAAIrK,EAAEzD,IAAIyD,GAAGD,EAAEsK,IAAIrK,EAAE4yB,MAAM5yB,GAAGA,EAAEA,EAAE2V,QAAQ,OAAO5V,EAAE,SAAS+B,EAAE/B,EAAEC,GAAsC,OAAnCD,EAAE8yB,GAAG9yB,EAAEC,IAAK4yB,MAAM,EAAE7yB,EAAE4V,QAAQ,KAAY5V,EAAE,SAASqC,EAAEpC,EAAEC,EAAE8B,GAAa,OAAV/B,EAAE4yB,MAAM7wB,EAAMhC,EAA4B,QAAjBgC,EAAE/B,EAAEkV,YAA6BnT,EAAEA,EAAE6wB,OAAQ3yB,GAAGD,EAAEoV,MAAM,EACpfnV,GAAG8B,GAAE/B,EAAEoV,MAAM,EAASnV,GADoaA,EACla,SAASiC,EAAElC,GAAsC,OAAnCD,GAAG,OAAOC,EAAEkV,YAAYlV,EAAEoV,MAAM,GAAUpV,EAAE,SAASiC,EAAElC,EAAEC,EAAEC,EAAE8B,GAAG,OAAG,OAAO/B,GAAG,IAAIA,EAAE0K,MAAW1K,EAAE8yB,GAAG7yB,EAAEF,EAAEgzB,KAAKhxB,IAAKoT,OAAOpV,EAAEC,KAAEA,EAAE8B,EAAE9B,EAAEC,IAAKkV,OAAOpV,EAASC,GAAE,SAASgC,EAAEjC,EAAEC,EAAEC,EAAE8B,GAAG,OAAG,OAAO/B,GAAGA,EAAEgzB,cAAc/yB,EAAEuC,OAAYT,EAAED,EAAE9B,EAAEC,EAAES,QAASgB,IAAI2wB,GAAGtyB,EAAEC,EAAEC,GAAG8B,EAAEoT,OAAOpV,EAAEgC,KAAEA,EAAEkxB,GAAGhzB,EAAEuC,KAAKvC,EAAE1D,IAAI0D,EAAES,MAAM,KAAKX,EAAEgzB,KAAKhxB,IAAKL,IAAI2wB,GAAGtyB,EAAEC,EAAEC,GAAG8B,EAAEoT,OAAOpV,EAASgC,GAAE,SAAS/C,EAAEe,EAAEC,EAAEC,EAAE8B,GAAG,OAAG,OAAO/B,GAAG,IAAIA,EAAE0K,KAAK1K,EAAEyT,UAAUmE,gBAAgB3X,EAAE2X,eAAe5X,EAAEyT,UAAUyf,iBAAiBjzB,EAAEizB,iBAAsBlzB,EACrgBmzB,GAAGlzB,EAAEF,EAAEgzB,KAAKhxB,IAAKoT,OAAOpV,EAAEC,KAAEA,EAAE8B,EAAE9B,EAAEC,EAAEkC,UAAU,KAAMgT,OAAOpV,EAASC,GAAE,SAASzE,EAAEwE,EAAEC,EAAEC,EAAE8B,EAAEK,GAAG,OAAG,OAAOpC,GAAG,IAAIA,EAAE0K,MAAW1K,EAAEozB,GAAGnzB,EAAEF,EAAEgzB,KAAKhxB,EAAEK,IAAK+S,OAAOpV,EAAEC,KAAEA,EAAE8B,EAAE9B,EAAEC,IAAKkV,OAAOpV,EAASC,GAAE,SAASG,EAAEJ,EAAEC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,kBAAkBA,EAAE,OAAOA,EAAE8yB,GAAG,GAAG9yB,EAAED,EAAEgzB,KAAK9yB,IAAKkV,OAAOpV,EAAEC,EAAE,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEuC,UAAU,KAAKkG,EAAG,OAAOxI,EAAEgzB,GAAGjzB,EAAEwC,KAAKxC,EAAEzD,IAAIyD,EAAEU,MAAM,KAAKX,EAAEgzB,KAAK9yB,IAAKyB,IAAI2wB,GAAGtyB,EAAE,KAAKC,GAAGC,EAAEkV,OAAOpV,EAAEE,EAAE,KAAKyI,EAAG,OAAO1I,EAAEmzB,GAAGnzB,EAAED,EAAEgzB,KAAK9yB,IAAKkV,OAAOpV,EAAEC,EAAE,GAAGoyB,GAAGpyB,IAAI4J,EAAG5J,GAAG,OAAOA,EAAEozB,GAAGpzB,EACnfD,EAAEgzB,KAAK9yB,EAAE,OAAQkV,OAAOpV,EAAEC,EAAEuyB,GAAGxyB,EAAEC,GAAG,OAAO,KAAK,SAASf,EAAEc,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE,OAAO9B,EAAEA,EAAEzD,IAAI,KAAK,GAAG,kBAAkB0D,GAAG,kBAAkBA,EAAE,OAAO,OAAO6B,EAAE,KAAKG,EAAElC,EAAEC,EAAE,GAAGC,EAAE8B,GAAG,GAAG,kBAAkB9B,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEsC,UAAU,KAAKkG,EAAG,OAAOxI,EAAE1D,MAAMuF,EAAE7B,EAAEuC,OAAOmG,EAAGpN,EAAEwE,EAAEC,EAAEC,EAAES,MAAMyB,SAASJ,EAAED,GAAGE,EAAEjC,EAAEC,EAAEC,EAAE8B,GAAG,KAAK,KAAK2G,EAAG,OAAOzI,EAAE1D,MAAMuF,EAAE9C,EAAEe,EAAEC,EAAEC,EAAE8B,GAAG,KAAK,GAAGqwB,GAAGnyB,IAAI2J,EAAG3J,GAAG,OAAO,OAAO6B,EAAE,KAAKvG,EAAEwE,EAAEC,EAAEC,EAAE8B,EAAE,MAAMwwB,GAAGxyB,EAAEE,GAAG,OAAO,KAAK,SAASQ,EAAEV,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,GAAG,kBAAkBC,GAAG,kBAAkBA,EAAE,OACleE,EAAEjC,EADueD,EAAEA,EAAEoL,IAAIlL,IACtf,KAAW,GAAG8B,EAAED,GAAG,GAAG,kBAAkBC,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEQ,UAAU,KAAKkG,EAAG,OAAO1I,EAAEA,EAAEoL,IAAI,OAAOpJ,EAAExF,IAAI0D,EAAE8B,EAAExF,MAAM,KAAKwF,EAAES,OAAOmG,EAAGpN,EAAEyE,EAAED,EAAEgC,EAAErB,MAAMyB,SAASL,EAAEC,EAAExF,KAAKyF,EAAEhC,EAAED,EAAEgC,EAAED,GAAG,KAAK4G,EAAG,OAA2C1J,EAAEgB,EAAtCD,EAAEA,EAAEoL,IAAI,OAAOpJ,EAAExF,IAAI0D,EAAE8B,EAAExF,MAAM,KAAWwF,EAAED,GAAG,GAAGswB,GAAGrwB,IAAI6H,EAAG7H,GAAG,OAAwBxG,EAAEyE,EAAnBD,EAAEA,EAAEoL,IAAIlL,IAAI,KAAW8B,EAAED,EAAE,MAAMywB,GAAGvyB,EAAE+B,GAAG,OAAO,KAAK,SAASlC,EAAEiC,EAAEI,EAAED,EAAED,GAAG,IAAI,IAAIhD,EAAE,KAAKO,EAAE,KAAKE,EAAEyC,EAAEpC,EAAEoC,EAAE,EAAE7C,EAAE,KAAK,OAAOI,GAAGK,EAAEmC,EAAEjI,OAAO8F,IAAI,CAACL,EAAEmzB,MAAM9yB,GAAGT,EAAEI,EAAEA,EAAE,MAAMJ,EAAEI,EAAEkW,QAAQ,IAAIpa,EAAE0D,EAAE6C,EAAErC,EAAEwC,EAAEnC,GAAGkC,GAAG,GAAG,OAAOzG,EAAE,CAAC,OAAOkE,IAAIA,EAAEJ,GAAG,MAAMU,GAAGN,GAAG,OACjflE,EAAE2Z,WAAWlV,EAAE8B,EAAErC,GAAGyC,EAAEE,EAAE7G,EAAE2G,EAAEpC,GAAG,OAAOP,EAAEP,EAAEzD,EAAEgE,EAAEoW,QAAQpa,EAAEgE,EAAEhE,EAAEkE,EAAEJ,EAAE,GAAGS,IAAImC,EAAEjI,OAAO,OAAOiG,EAAE6B,EAAErC,GAAGT,EAAE,GAAG,OAAOS,EAAE,CAAC,KAAKK,EAAEmC,EAAEjI,OAAO8F,IAAkB,QAAdL,EAAEU,EAAE2B,EAAEG,EAAEnC,GAAGkC,MAAcE,EAAEE,EAAE3C,EAAEyC,EAAEpC,GAAG,OAAOP,EAAEP,EAAES,EAAEF,EAAEoW,QAAQlW,EAAEF,EAAEE,GAAG,OAAOT,EAAE,IAAIS,EAAEsC,EAAED,EAAErC,GAAGK,EAAEmC,EAAEjI,OAAO8F,IAAsB,QAAlBT,EAAEoB,EAAEhB,EAAEqC,EAAEhC,EAAEmC,EAAEnC,GAAGkC,MAAcjC,GAAG,OAAOV,EAAE6V,WAAWzV,EAAE0X,OAAO,OAAO9X,EAAE9C,IAAIuD,EAAET,EAAE9C,KAAK2F,EAAEE,EAAE/C,EAAE6C,EAAEpC,GAAG,OAAOP,EAAEP,EAAEK,EAAEE,EAAEoW,QAAQtW,EAAEE,EAAEF,GAA4C,OAAzCU,GAAGN,EAAErB,SAAQ,SAAS2B,GAAG,OAAOC,EAAE8B,EAAE/B,MAAYf,EAAE,SAASY,EAAEkC,EAAEI,EAAED,EAAED,GAAG,IAAIhD,EAAE4K,EAAG3H,GAAG,GAAG,oBAAoBjD,EAAE,MAAMkC,MAAM+B,EAAE,MAAkB,GAAG,OAAfhB,EAAEjD,EAAEtD,KAAKuG,IAC1e,MAAMf,MAAM+B,EAAE,MAAM,IAAI,IAAI1D,EAAEP,EAAE,KAAKS,EAAEyC,EAAEpC,EAAEoC,EAAE,EAAE7C,EAAE,KAAK9D,EAAE0G,EAAEjH,OAAO,OAAOyE,IAAIlE,EAAEN,KAAK6E,IAAIvE,EAAE0G,EAAEjH,OAAO,CAACyE,EAAEmzB,MAAM9yB,GAAGT,EAAEI,EAAEA,EAAE,MAAMJ,EAAEI,EAAEkW,QAAQ,IAAI/V,EAAEX,EAAE6C,EAAErC,EAAElE,EAAEJ,MAAM6G,GAAG,GAAG,OAAOpC,EAAE,CAAC,OAAOH,IAAIA,EAAEJ,GAAG,MAAMU,GAAGN,GAAG,OAAOG,EAAEsV,WAAWlV,EAAE8B,EAAErC,GAAGyC,EAAEE,EAAExC,EAAEsC,EAAEpC,GAAG,OAAOP,EAAEP,EAAEY,EAAEL,EAAEoW,QAAQ/V,EAAEL,EAAEK,EAAEH,EAAEJ,EAAE,GAAG9D,EAAEN,KAAK,OAAOgF,EAAE6B,EAAErC,GAAGT,EAAE,GAAG,OAAOS,EAAE,CAAC,MAAMlE,EAAEN,KAAK6E,IAAIvE,EAAE0G,EAAEjH,OAAwB,QAAjBO,EAAE4E,EAAE2B,EAAEvG,EAAEJ,MAAM6G,MAAcE,EAAEE,EAAE7G,EAAE2G,EAAEpC,GAAG,OAAOP,EAAEP,EAAEzD,EAAEgE,EAAEoW,QAAQpa,EAAEgE,EAAEhE,GAAG,OAAOyD,EAAE,IAAIS,EAAEsC,EAAED,EAAErC,IAAIlE,EAAEN,KAAK6E,IAAIvE,EAAE0G,EAAEjH,OAA4B,QAArBO,EAAEkF,EAAEhB,EAAEqC,EAAEhC,EAAEvE,EAAEJ,MAAM6G,MAAcjC,GAAG,OAAOxE,EAAE2Z,WAChfzV,EAAE0X,OAAO,OAAO5b,EAAEgB,IAAIuD,EAAEvE,EAAEgB,KAAK2F,EAAEE,EAAE7G,EAAE2G,EAAEpC,GAAG,OAAOP,EAAEP,EAAEzD,EAAEgE,EAAEoW,QAAQpa,EAAEgE,EAAEhE,GAA4C,OAAzCwE,GAAGN,EAAErB,SAAQ,SAAS2B,GAAG,OAAOC,EAAE8B,EAAE/B,MAAYf,EAAE,OAAO,SAASe,EAAEgC,EAAEK,EAAEH,GAAG,IAAID,EAAE,kBAAkBI,GAAG,OAAOA,GAAGA,EAAEI,OAAOmG,GAAI,OAAOvG,EAAE7F,IAAIyF,IAAII,EAAEA,EAAE1B,MAAMyB,UAAU,IAAInD,EAAE,kBAAkBoD,GAAG,OAAOA,EAAE,GAAGpD,EAAE,OAAOoD,EAAEG,UAAU,KAAKkG,EAAG1I,EAAE,CAAS,IAARf,EAAEoD,EAAE7F,IAAQyF,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAGA,EAAEzF,MAAMyC,EAAE,CAAC,GAAmB,IAAZgD,EAAE0I,KAAY,GAAGtI,EAAEI,OAAOmG,EAAG,CAAC1I,EAAEF,EAAEiC,EAAE2T,UAAS5T,EAAED,EAAEE,EAAEI,EAAE1B,MAAMyB,WAAYgT,OAAOpV,EAAEA,EAAEgC,EAAE,MAAMhC,QAAgB,GAAGiC,EAAEgxB,cAAc5wB,EAAEI,KAAK,CAACvC,EAAEF,EAAEiC,EAAE2T,UAC5e5T,EAAED,EAAEE,EAAEI,EAAE1B,QAASgB,IAAI2wB,GAAGtyB,EAAEiC,EAAEI,GAAGL,EAAEoT,OAAOpV,EAAEA,EAAEgC,EAAE,MAAMhC,EAAGE,EAAEF,EAAEiC,GAAG,MAAWhC,EAAED,EAAEiC,GAAGA,EAAEA,EAAE2T,QAAQvT,EAAEI,OAAOmG,IAAI5G,EAAEqxB,GAAGhxB,EAAE1B,MAAMyB,SAASpC,EAAEgzB,KAAK9wB,EAAEG,EAAE7F,MAAO4Y,OAAOpV,EAAEA,EAAEgC,KAAIE,EAAEgxB,GAAG7wB,EAAEI,KAAKJ,EAAE7F,IAAI6F,EAAE1B,MAAM,KAAKX,EAAEgzB,KAAK9wB,IAAKP,IAAI2wB,GAAGtyB,EAAEgC,EAAEK,GAAGH,EAAEkT,OAAOpV,EAAEA,EAAEkC,GAAG,OAAOC,EAAEnC,GAAG,KAAK2I,EAAG3I,EAAE,CAAC,IAAIiC,EAAEI,EAAE7F,IAAI,OAAOwF,GAAG,CAAC,GAAGA,EAAExF,MAAMyF,EAAX,CAAa,GAAG,IAAID,EAAE2I,KAAK3I,EAAE0R,UAAUmE,gBAAgBxV,EAAEwV,eAAe7V,EAAE0R,UAAUyf,iBAAiB9wB,EAAE8wB,eAAe,CAACjzB,EAAEF,EAAEgC,EAAE4T,UAAS5T,EAAED,EAAEC,EAAEK,EAAED,UAAU,KAAMgT,OAAOpV,EAAEA,EAAEgC,EAAE,MAAMhC,EAAOE,EAAEF,EAAEgC,GAAG,MAAW/B,EAAED,EAAEgC,GAAGA,EAAEA,EAAE4T,SAAQ5T,EACpfoxB,GAAG/wB,EAAErC,EAAEgzB,KAAK9wB,IAAKkT,OAAOpV,EAAEA,EAAEgC,EAAE,OAAOG,EAAEnC,GAAG,GAAG,kBAAkBqC,GAAG,kBAAkBA,EAAE,OAAOA,EAAE,GAAGA,EAAE,OAAOL,GAAG,IAAIA,EAAE2I,KAAKzK,EAAEF,EAAEgC,EAAE4T,UAAS5T,EAAED,EAAEC,EAAEK,IAAK+S,OAAOpV,EAAEA,EAAEgC,IAAI9B,EAAEF,EAAEgC,IAAGA,EAAE+wB,GAAG1wB,EAAErC,EAAEgzB,KAAK9wB,IAAKkT,OAAOpV,EAAEA,EAAEgC,GAAGG,EAAEnC,GAAG,GAAGqyB,GAAGhwB,GAAG,OAAOvC,EAAEE,EAAEgC,EAAEK,EAAEH,GAAG,GAAG2H,EAAGxH,GAAG,OAAOxC,EAAEG,EAAEgC,EAAEK,EAAEH,GAAc,GAAXjD,GAAGuzB,GAAGxyB,EAAEqC,GAAM,qBAAqBA,IAAIJ,EAAE,OAAOjC,EAAE2K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,MAAMxJ,MAAM+B,EAAE,IAAI2H,EAAG7K,EAAEyC,OAAO,cAAe,OAAOvC,EAAEF,EAAEgC,IAAI,IAAIsxB,GAAGb,IAAG,GAAIc,GAAGd,IAAG,GAAIe,GAAG,GAAGC,GAAGhI,GAAG+H,IAAIE,GAAGjI,GAAG+H,IAAIG,GAAGlI,GAAG+H,IACtd,SAASI,GAAG5zB,GAAG,GAAGA,IAAIwzB,GAAG,MAAMryB,MAAM+B,EAAE,MAAM,OAAOlD,EAAE,SAAS6zB,GAAG7zB,EAAEC,GAAyC,OAAtCyB,GAAEiyB,GAAG1zB,GAAGyB,GAAEgyB,GAAG1zB,GAAG0B,GAAE+xB,GAAGD,IAAIxzB,EAAEC,EAAEwO,UAAmB,KAAK,EAAE,KAAK,GAAGxO,GAAGA,EAAEA,EAAE6zB,iBAAiB7zB,EAAE8N,aAAaH,GAAG,KAAK,IAAI,MAAM,QAAkE3N,EAAE2N,GAArC3N,GAAvBD,EAAE,IAAIA,EAAEC,EAAEmT,WAAWnT,GAAM8N,cAAc,KAAK/N,EAAEA,EAAE+zB,SAAkBtyB,GAAEgyB,IAAI/xB,GAAE+xB,GAAGxzB,GAAG,SAAS+zB,KAAKvyB,GAAEgyB,IAAIhyB,GAAEiyB,IAAIjyB,GAAEkyB,IAAI,SAASM,GAAGj0B,GAAG4zB,GAAGD,GAAGnyB,SAAS,IAAIvB,EAAE2zB,GAAGH,GAAGjyB,SAAatB,EAAE0N,GAAG3N,EAAED,EAAEyC,MAAMxC,IAAIC,IAAIwB,GAAEgyB,GAAG1zB,GAAG0B,GAAE+xB,GAAGvzB,IAAI,SAASg0B,GAAGl0B,GAAG0zB,GAAGlyB,UAAUxB,IAAIyB,GAAEgyB,IAAIhyB,GAAEiyB,KAAK,IAAIvwB,GAAEsoB,GAAG,GAC9c,SAAS0I,GAAGn0B,GAAG,IAAI,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAG,KAAKA,EAAE0K,IAAI,CAAC,IAAIzK,EAAED,EAAEsV,cAAc,GAAG,OAAOrV,IAAmB,QAAfA,EAAEA,EAAEsV,aAAqB,OAAOtV,EAAE6f,MAAM,OAAO7f,EAAE6f,MAAM,OAAO9f,OAAO,GAAG,KAAKA,EAAE0K,UAAK,IAAS1K,EAAEm0B,cAAcC,aAAa,GAAG,KAAa,GAARp0B,EAAEoV,OAAU,OAAOpV,OAAO,GAAG,OAAOA,EAAE0V,MAAM,CAAC1V,EAAE0V,MAAMP,OAAOnV,EAAEA,EAAEA,EAAE0V,MAAM,SAAS,GAAG1V,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAE2V,SAAS,CAAC,GAAG,OAAO3V,EAAEmV,QAAQnV,EAAEmV,SAASpV,EAAE,OAAO,KAAKC,EAAEA,EAAEmV,OAAOnV,EAAE2V,QAAQR,OAAOnV,EAAEmV,OAAOnV,EAAEA,EAAE2V,QAAQ,OAAO,KAAK,IAAI0e,GAAG,KAAKC,GAAG,KAAKC,IAAG,EACpd,SAASC,GAAGz0B,EAAEC,GAAG,IAAIC,EAAEw0B,GAAG,EAAE,KAAK,KAAK,GAAGx0B,EAAE+yB,YAAY,UAAU/yB,EAAEuC,KAAK,UAAUvC,EAAEwT,UAAUzT,EAAEC,EAAEkV,OAAOpV,EAAEE,EAAEmV,MAAM,EAAE,OAAOrV,EAAE0yB,YAAY1yB,EAAE0yB,WAAWC,WAAWzyB,EAAEF,EAAE0yB,WAAWxyB,GAAGF,EAAE4yB,YAAY5yB,EAAE0yB,WAAWxyB,EAAE,SAASy0B,GAAG30B,EAAEC,GAAG,OAAOD,EAAE2K,KAAK,KAAK,EAAE,IAAIzK,EAAEF,EAAEyC,KAAyE,OAAO,QAA3ExC,EAAE,IAAIA,EAAEwO,UAAUvO,EAAE0H,gBAAgB3H,EAAE+K,SAASpD,cAAc,KAAK3H,KAAmBD,EAAE0T,UAAUzT,GAAE,GAAO,KAAK,EAAE,OAAoD,QAA7CA,EAAE,KAAKD,EAAE40B,cAAc,IAAI30B,EAAEwO,SAAS,KAAKxO,KAAYD,EAAE0T,UAAUzT,GAAE,GAAwB,QAAQ,OAAM,GACve,SAAS40B,GAAG70B,GAAG,GAAGw0B,GAAG,CAAC,IAAIv0B,EAAEs0B,GAAG,GAAGt0B,EAAE,CAAC,IAAIC,EAAED,EAAE,IAAI00B,GAAG30B,EAAEC,GAAG,CAAqB,KAApBA,EAAE8qB,GAAG7qB,EAAE2mB,gBAAqB8N,GAAG30B,EAAEC,GAAuC,OAAnCD,EAAEqV,OAAe,KAATrV,EAAEqV,MAAY,EAAEmf,IAAG,OAAGF,GAAGt0B,GAASy0B,GAAGH,GAAGp0B,GAAGo0B,GAAGt0B,EAAEu0B,GAAGxJ,GAAG9qB,EAAEiO,iBAAiBlO,EAAEqV,OAAe,KAATrV,EAAEqV,MAAY,EAAEmf,IAAG,EAAGF,GAAGt0B,GAAG,SAAS80B,GAAG90B,GAAG,IAAIA,EAAEA,EAAEoV,OAAO,OAAOpV,GAAG,IAAIA,EAAE2K,KAAK,IAAI3K,EAAE2K,KAAK,KAAK3K,EAAE2K,KAAK3K,EAAEA,EAAEoV,OAAOkf,GAAGt0B,EAC5S,SAAS+0B,GAAG/0B,GAAG,GAAGA,IAAIs0B,GAAG,OAAM,EAAG,IAAIE,GAAG,OAAOM,GAAG90B,GAAGw0B,IAAG,GAAG,EAAG,IAAIv0B,EAAED,EAAEyC,KAAK,GAAG,IAAIzC,EAAE2K,KAAK,SAAS1K,GAAG,SAASA,IAAIuqB,GAAGvqB,EAAED,EAAEo0B,eAAe,IAAIn0B,EAAEs0B,GAAGt0B,GAAGw0B,GAAGz0B,EAAEC,GAAGA,EAAE8qB,GAAG9qB,EAAE4mB,aAAmB,GAANiO,GAAG90B,GAAM,KAAKA,EAAE2K,IAAI,CAAgD,KAA7B3K,EAAE,QAApBA,EAAEA,EAAEuV,eAAyBvV,EAAEwV,WAAW,MAAW,MAAMrU,MAAM+B,EAAE,MAAMlD,EAAE,CAAiB,IAAhBA,EAAEA,EAAE6mB,YAAgB5mB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAEyO,SAAS,CAAC,IAAIvO,EAAEF,EAAE+f,KAAK,GAAG,OAAO7f,EAAE,CAAC,GAAG,IAAID,EAAE,CAACs0B,GAAGxJ,GAAG/qB,EAAE6mB,aAAa,MAAM7mB,EAAEC,QAAQ,MAAMC,GAAG,OAAOA,GAAG,OAAOA,GAAGD,IAAID,EAAEA,EAAE6mB,YAAY0N,GAAG,WAAWA,GAAGD,GAAGvJ,GAAG/qB,EAAE0T,UAAUmT,aAAa,KAAK,OAAM,EACtf,SAASmO,KAAKT,GAAGD,GAAG,KAAKE,IAAG,EAAG,IAAIS,GAAG,GAAG,SAASC,KAAK,IAAI,IAAIl1B,EAAE,EAAEA,EAAEi1B,GAAGh7B,OAAO+F,IAAIi1B,GAAGj1B,GAAGm1B,8BAA8B,KAAKF,GAAGh7B,OAAO,EAAE,IAAIm7B,GAAG3sB,EAAG9E,uBAAuB0xB,GAAG5sB,EAAG7E,wBAAwB0xB,GAAG,EAAE9xB,GAAE,KAAKC,GAAE,KAAKC,GAAE,KAAK6xB,IAAG,EAAGC,IAAG,EAAG,SAASC,KAAK,MAAMt0B,MAAM+B,EAAE,MAAO,SAASwyB,GAAG11B,EAAEC,GAAG,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEhG,QAAQiG,EAAEF,EAAE/F,OAAOiG,IAAI,IAAIomB,GAAGtmB,EAAEE,GAAGD,EAAEC,IAAI,OAAM,EAAG,OAAM,EAC9X,SAASy1B,GAAG31B,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAyH,GAAtHizB,GAAGjzB,EAAEmB,GAAEvD,EAAEA,EAAEsV,cAAc,KAAKtV,EAAE6vB,YAAY,KAAK7vB,EAAEsvB,MAAM,EAAE6F,GAAG5zB,QAAQ,OAAOxB,GAAG,OAAOA,EAAEuV,cAAcqgB,GAAGC,GAAG71B,EAAEE,EAAE8B,EAAED,GAAMyzB,GAAG,CAACnzB,EAAE,EAAE,EAAE,CAAO,GAANmzB,IAAG,IAAQ,GAAGnzB,GAAG,MAAMlB,MAAM+B,EAAE,MAAMb,GAAG,EAAEqB,GAAED,GAAE,KAAKxD,EAAE6vB,YAAY,KAAKsF,GAAG5zB,QAAQs0B,GAAG91B,EAAEE,EAAE8B,EAAED,SAASyzB,IAAkE,GAA9DJ,GAAG5zB,QAAQu0B,GAAG91B,EAAE,OAAOwD,IAAG,OAAOA,GAAExI,KAAKq6B,GAAG,EAAE5xB,GAAED,GAAED,GAAE,KAAK+xB,IAAG,EAAMt1B,EAAE,MAAMkB,MAAM+B,EAAE,MAAM,OAAOlD,EAAE,SAASg2B,KAAK,IAAIh2B,EAAE,CAACuV,cAAc,KAAKwa,UAAU,KAAKkG,UAAU,KAAKC,MAAM,KAAKj7B,KAAK,MAA8C,OAAxC,OAAOyI,GAAEF,GAAE+R,cAAc7R,GAAE1D,EAAE0D,GAAEA,GAAEzI,KAAK+E,EAAS0D,GAC/e,SAASyyB,KAAK,GAAG,OAAO1yB,GAAE,CAAC,IAAIzD,EAAEwD,GAAE2R,UAAUnV,EAAE,OAAOA,EAAEA,EAAEuV,cAAc,UAAUvV,EAAEyD,GAAExI,KAAK,IAAIgF,EAAE,OAAOyD,GAAEF,GAAE+R,cAAc7R,GAAEzI,KAAK,GAAG,OAAOgF,EAAEyD,GAAEzD,EAAEwD,GAAEzD,MAAM,CAAC,GAAG,OAAOA,EAAE,MAAMmB,MAAM+B,EAAE,MAAUlD,EAAE,CAACuV,eAAP9R,GAAEzD,GAAqBuV,cAAcwa,UAAUtsB,GAAEssB,UAAUkG,UAAUxyB,GAAEwyB,UAAUC,MAAMzyB,GAAEyyB,MAAMj7B,KAAK,MAAM,OAAOyI,GAAEF,GAAE+R,cAAc7R,GAAE1D,EAAE0D,GAAEA,GAAEzI,KAAK+E,EAAE,OAAO0D,GAAE,SAAS0yB,GAAGp2B,EAAEC,GAAG,MAAM,oBAAoBA,EAAEA,EAAED,GAAGC,EACvY,SAASo2B,GAAGr2B,GAAG,IAAIC,EAAEk2B,KAAKj2B,EAAED,EAAEi2B,MAAM,GAAG,OAAOh2B,EAAE,MAAMiB,MAAM+B,EAAE,MAAMhD,EAAEo2B,oBAAoBt2B,EAAE,IAAIgC,EAAEyB,GAAE1B,EAAEC,EAAEi0B,UAAU5zB,EAAEnC,EAAEiwB,QAAQ,GAAG,OAAO9tB,EAAE,CAAC,GAAG,OAAON,EAAE,CAAC,IAAII,EAAEJ,EAAE9G,KAAK8G,EAAE9G,KAAKoH,EAAEpH,KAAKoH,EAAEpH,KAAKkH,EAAEH,EAAEi0B,UAAUl0B,EAAEM,EAAEnC,EAAEiwB,QAAQ,KAAK,GAAG,OAAOpuB,EAAE,CAACA,EAAEA,EAAE9G,KAAK+G,EAAEA,EAAE+tB,UAAU,IAAI7tB,EAAEC,EAAEE,EAAE,KAAKJ,EAAEF,EAAE,EAAE,CAAC,IAAI9C,EAAEgD,EAAEuuB,KAAK,IAAI8E,GAAGr2B,KAAKA,EAAE,OAAOiD,IAAIA,EAAEA,EAAEjH,KAAK,CAACu1B,KAAK,EAAE+F,OAAOt0B,EAAEs0B,OAAOC,aAAav0B,EAAEu0B,aAAaC,WAAWx0B,EAAEw0B,WAAWx7B,KAAK,OAAO+G,EAAEC,EAAEu0B,eAAex2B,EAAEiC,EAAEw0B,WAAWz2B,EAAEgC,EAAEC,EAAEs0B,YAAY,CAAC,IAAI/6B,EAAE,CAACg1B,KAAKvxB,EAAEs3B,OAAOt0B,EAAEs0B,OAAOC,aAAav0B,EAAEu0B,aAC9fC,WAAWx0B,EAAEw0B,WAAWx7B,KAAK,MAAM,OAAOiH,GAAGC,EAAED,EAAE1G,EAAE6G,EAAEL,GAAGE,EAAEA,EAAEjH,KAAKO,EAAEgI,GAAE+rB,OAAOtwB,EAAE6xB,IAAI7xB,EAAEgD,EAAEA,EAAEhH,WAAW,OAAOgH,GAAGA,IAAIF,GAAG,OAAOG,EAAEG,EAAEL,EAAEE,EAAEjH,KAAKkH,EAAEmkB,GAAGtkB,EAAE/B,EAAEsV,iBAAiBia,IAAG,GAAIvvB,EAAEsV,cAAcvT,EAAE/B,EAAE8vB,UAAU1tB,EAAEpC,EAAEg2B,UAAU/zB,EAAEhC,EAAEw2B,kBAAkB10B,EAAE,MAAM,CAAC/B,EAAEsV,cAAcrV,EAAEy2B,UACtQ,SAASC,GAAG52B,GAAG,IAAIC,EAAEk2B,KAAKj2B,EAAED,EAAEi2B,MAAM,GAAG,OAAOh2B,EAAE,MAAMiB,MAAM+B,EAAE,MAAMhD,EAAEo2B,oBAAoBt2B,EAAE,IAAIgC,EAAE9B,EAAEy2B,SAAS50B,EAAE7B,EAAEiwB,QAAQ9tB,EAAEpC,EAAEsV,cAAc,GAAG,OAAOxT,EAAE,CAAC7B,EAAEiwB,QAAQ,KAAK,IAAIhuB,EAAEJ,EAAEA,EAAE9G,KAAK,GAAGoH,EAAErC,EAAEqC,EAAEF,EAAEo0B,QAAQp0B,EAAEA,EAAElH,WAAWkH,IAAIJ,GAAGukB,GAAGjkB,EAAEpC,EAAEsV,iBAAiBia,IAAG,GAAIvvB,EAAEsV,cAAclT,EAAE,OAAOpC,EAAEg2B,YAAYh2B,EAAE8vB,UAAU1tB,GAAGnC,EAAEw2B,kBAAkBr0B,EAAE,MAAM,CAACA,EAAEL,GACnV,SAAS60B,GAAG72B,EAAEC,EAAEC,GAAG,IAAI8B,EAAE/B,EAAE62B,YAAY90B,EAAEA,EAAE/B,EAAE82B,SAAS,IAAIh1B,EAAE9B,EAAEk1B,8BAAyI,GAAxG,OAAOpzB,EAAE/B,EAAE+B,IAAIC,GAAUhC,EAAEA,EAAEg3B,kBAAiBh3B,GAAGs1B,GAAGt1B,KAAKA,KAAEC,EAAEk1B,8BAA8BnzB,EAAEizB,GAAG95B,KAAK8E,KAAMD,EAAE,OAAOE,EAAED,EAAE82B,SAAoB,MAAX9B,GAAG95B,KAAK8E,GAASkB,MAAM+B,EAAE,MACzP,SAAS+zB,GAAGj3B,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAEm1B,GAAE,GAAG,OAAOn1B,EAAE,MAAMZ,MAAM+B,EAAE,MAAM,IAAIb,EAAEpC,EAAE62B,YAAY30B,EAAEE,EAAEpC,EAAE82B,SAAS70B,EAAEkzB,GAAG5zB,QAAQS,EAAEC,EAAEmE,UAAS,WAAW,OAAOwwB,GAAG90B,EAAE9B,EAAEC,MAAKjB,EAAEgD,EAAE,GAAGzG,EAAEyG,EAAE,GAAGA,EAAEyB,GAAE,IAAItD,EAAEJ,EAAEuV,cAAcrW,EAAEkB,EAAES,KAAKH,EAAExB,EAAEi4B,YAAYr3B,EAAEM,EAAE1B,OAAO0B,EAAEA,EAAEg3B,UAAU,IAAIv3B,EAAE2D,GACuO,OADrOxD,EAAEuV,cAAc,CAAC1U,KAAK3B,EAAER,OAAOuB,EAAEm3B,UAAUp1B,GAAGE,EAAE6D,WAAU,WAAW7G,EAAEi4B,YAAYj3B,EAAEhB,EAAEm4B,YAAYp4B,EAAE,IAAIe,EAAEqC,EAAEpC,EAAE82B,SAAS,IAAIzQ,GAAGnkB,EAAEnC,GAAG,CAACA,EAAEE,EAAED,EAAE82B,SAASzQ,GAAG9qB,EAAEwE,KAAKf,EAAEe,GAAGA,EAAEqxB,GAAGxxB,GAAGkC,EAAEi1B,kBAAkBh3B,EAAE+B,EAAE8X,cAAc7Z,EAAE+B,EAAEi1B,iBAAiBj1B,EAAEmY,gBAAgBla,EAAE,IAAI,IAAIgC,EAC5fD,EAAEoY,cAAcjY,EAAElC,EAAE,EAAEkC,GAAG,CAAC,IAAID,EAAE,GAAGgY,GAAG/X,GAAGvC,EAAE,GAAGsC,EAAED,EAAEC,IAAIjC,EAAEkC,IAAIvC,MAAK,CAACO,EAAED,EAAE+B,IAAIE,EAAE6D,WAAU,WAAW,OAAO/D,EAAE/B,EAAE82B,SAAQ,WAAW,IAAI/2B,EAAEd,EAAEi4B,YAAYj3B,EAAEhB,EAAEm4B,YAAY,IAAIn3B,EAAEF,EAAEC,EAAE82B,UAAU,IAAI/0B,EAAEqvB,GAAGxxB,GAAGkC,EAAEi1B,kBAAkBh1B,EAAED,EAAE8X,aAAa,MAAMva,GAAGY,GAAE,WAAW,MAAMZ,WAAS,CAACW,EAAE+B,IAAIskB,GAAG5lB,EAAER,IAAIomB,GAAGxmB,EAAEG,IAAIqmB,GAAGlmB,EAAE4B,MAAKhC,EAAE,CAACmwB,QAAQ,KAAKwG,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkBl7B,IAAKm7B,SAAS13B,EAAEq4B,GAAGpyB,KAAK,KAAK1B,GAAExD,GAAGiC,EAAEi0B,MAAMl2B,EAAEiC,EAAEg0B,UAAU,KAAKz6B,EAAEq7B,GAAG90B,EAAE9B,EAAEC,GAAG+B,EAAEsT,cAActT,EAAE8tB,UAAUv0B,GAAUA,EACte,SAAS+7B,GAAGv3B,EAAEC,EAAEC,GAAc,OAAO+2B,GAAZd,KAAiBn2B,EAAEC,EAAEC,GAAG,SAASs3B,GAAGx3B,GAAG,IAAIC,EAAE+1B,KAAmL,MAA9K,oBAAoBh2B,IAAIA,EAAEA,KAAKC,EAAEsV,cAActV,EAAE8vB,UAAU/vB,EAAoFA,GAAlFA,EAAEC,EAAEi2B,MAAM,CAAC/F,QAAQ,KAAKwG,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkB12B,IAAO22B,SAASW,GAAGpyB,KAAK,KAAK1B,GAAExD,GAAS,CAACC,EAAEsV,cAAcvV,GAChR,SAASy3B,GAAGz3B,EAAEC,EAAEC,EAAE8B,GAAkO,OAA/NhC,EAAE,CAAC2K,IAAI3K,EAAE03B,OAAOz3B,EAAE03B,QAAQz3B,EAAE03B,KAAK51B,EAAE/G,KAAK,MAAsB,QAAhBgF,EAAEuD,GAAEssB,cAAsB7vB,EAAE,CAACyyB,WAAW,MAAMlvB,GAAEssB,YAAY7vB,EAAEA,EAAEyyB,WAAW1yB,EAAE/E,KAAK+E,GAAmB,QAAfE,EAAED,EAAEyyB,YAAoBzyB,EAAEyyB,WAAW1yB,EAAE/E,KAAK+E,GAAGgC,EAAE9B,EAAEjF,KAAKiF,EAAEjF,KAAK+E,EAAEA,EAAE/E,KAAK+G,EAAE/B,EAAEyyB,WAAW1yB,GAAWA,EAAE,SAAS63B,GAAG73B,GAA4B,OAAdA,EAAE,CAACwB,QAAQxB,GAAhBg2B,KAA4BzgB,cAAcvV,EAAE,SAAS83B,KAAK,OAAO3B,KAAK5gB,cAAc,SAASwiB,GAAG/3B,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAEi0B,KAAKxyB,GAAE6R,OAAOrV,EAAE+B,EAAEwT,cAAckiB,GAAG,EAAEx3B,EAAEC,OAAE,OAAO,IAAS8B,EAAE,KAAKA,GACjc,SAASg2B,GAAGh4B,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAEo0B,KAAKn0B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIK,OAAE,EAAO,GAAG,OAAOoB,GAAE,CAAC,IAAItB,EAAEsB,GAAE8R,cAA0B,GAAZlT,EAAEF,EAAEw1B,QAAW,OAAO31B,GAAG0zB,GAAG1zB,EAAEG,EAAEy1B,MAAmB,YAAZH,GAAGx3B,EAAEC,EAAEmC,EAAEL,GAAWwB,GAAE6R,OAAOrV,EAAE+B,EAAEwT,cAAckiB,GAAG,EAAEx3B,EAAEC,EAAEmC,EAAEL,GAAG,SAASi2B,GAAGj4B,EAAEC,GAAG,OAAO83B,GAAG,IAAI,EAAE/3B,EAAEC,GAAG,SAASi4B,GAAGl4B,EAAEC,GAAG,OAAO+3B,GAAG,IAAI,EAAEh4B,EAAEC,GAAG,SAASk4B,GAAGn4B,EAAEC,GAAG,OAAO+3B,GAAG,EAAE,EAAEh4B,EAAEC,GAAG,SAASm4B,GAAGp4B,EAAEC,GAAG,MAAG,oBAAoBA,GAASD,EAAEA,IAAIC,EAAED,GAAG,WAAWC,EAAE,QAAU,OAAOA,QAAG,IAASA,GAASD,EAAEA,IAAIC,EAAEuB,QAAQxB,EAAE,WAAWC,EAAEuB,QAAQ,YAAtE,EACxY,SAAS62B,GAAGr4B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAEyoB,OAAO,CAAC3oB,IAAI,KAAYg4B,GAAG,EAAE,EAAEI,GAAGlzB,KAAK,KAAKjF,EAAED,GAAGE,GAAG,SAASo4B,MAAM,SAASC,GAAGv4B,EAAEC,GAAG,IAAIC,EAAEi2B,KAAKl2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAI+B,EAAE9B,EAAEqV,cAAc,OAAG,OAAOvT,GAAG,OAAO/B,GAAGy1B,GAAGz1B,EAAE+B,EAAE,IAAWA,EAAE,IAAG9B,EAAEqV,cAAc,CAACvV,EAAEC,GAAUD,GAAE,SAASw4B,GAAGx4B,EAAEC,GAAG,IAAIC,EAAEi2B,KAAKl2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAI+B,EAAE9B,EAAEqV,cAAc,OAAG,OAAOvT,GAAG,OAAO/B,GAAGy1B,GAAGz1B,EAAE+B,EAAE,IAAWA,EAAE,IAAGhC,EAAEA,IAAIE,EAAEqV,cAAc,CAACvV,EAAEC,GAAUD,GACzZ,SAASy4B,GAAGz4B,EAAEC,GAAG,IAAIC,EAAEkuB,KAAKE,GAAG,GAAGpuB,EAAE,GAAGA,GAAE,WAAWF,GAAE,MAAMsuB,GAAG,GAAGpuB,EAAE,GAAGA,GAAE,WAAW,IAAIA,EAAEm1B,GAAGxxB,WAAWwxB,GAAGxxB,WAAW,EAAE,IAAI7D,GAAE,GAAIC,IAAV,QAAsBo1B,GAAGxxB,WAAW3D,MAC5J,SAASo3B,GAAGt3B,EAAEC,EAAEC,GAAG,IAAI8B,EAAEovB,KAAKrvB,EAAEsvB,GAAGrxB,GAAGqC,EAAE,CAACmuB,KAAKzuB,EAAEw0B,OAAOr2B,EAAEs2B,aAAa,KAAKC,WAAW,KAAKx7B,KAAK,MAAMkH,EAAElC,EAAEkwB,QAA6E,GAArE,OAAOhuB,EAAEE,EAAEpH,KAAKoH,GAAGA,EAAEpH,KAAKkH,EAAElH,KAAKkH,EAAElH,KAAKoH,GAAGpC,EAAEkwB,QAAQ9tB,EAAEF,EAAEnC,EAAEmV,UAAanV,IAAIwD,IAAG,OAAOrB,GAAGA,IAAIqB,GAAEgyB,GAAGD,IAAG,MAAO,CAAC,GAAG,IAAIv1B,EAAEuvB,QAAQ,OAAOptB,GAAG,IAAIA,EAAEotB,QAAiC,QAAxBptB,EAAElC,EAAEq2B,qBAA8B,IAAI,IAAIp0B,EAAEjC,EAAEy2B,kBAAkBz0B,EAAEE,EAAED,EAAEhC,GAAmC,GAAhCmC,EAAEm0B,aAAar0B,EAAEE,EAAEo0B,WAAWx0B,EAAKqkB,GAAGrkB,EAAEC,GAAG,OAAO,MAAMjD,IAAaqyB,GAAGtxB,EAAE+B,EAAEC,IAC9Z,IAAI+zB,GAAG,CAAC2C,YAAYjJ,GAAG7pB,YAAY6vB,GAAG5vB,WAAW4vB,GAAG1vB,UAAU0vB,GAAGzvB,oBAAoByvB,GAAGxvB,gBAAgBwvB,GAAGvvB,QAAQuvB,GAAGtvB,WAAWsvB,GAAGrvB,OAAOqvB,GAAGpvB,SAASovB,GAAG3vB,cAAc2vB,GAAGkD,iBAAiBlD,GAAGmD,cAAcnD,GAAGoD,iBAAiBpD,GAAGqD,oBAAoBrD,GAAGsD,0BAAyB,GAAInD,GAAG,CAAC8C,YAAYjJ,GAAG7pB,YAAY,SAAS5F,EAAEC,GAA4C,OAAzC+1B,KAAKzgB,cAAc,CAACvV,OAAE,IAASC,EAAE,KAAKA,GAAUD,GAAG6F,WAAW4pB,GAAG1pB,UAAUkyB,GAAGjyB,oBAAoB,SAAShG,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAEyoB,OAAO,CAAC3oB,IAAI,KAAY+3B,GAAG,EAAE,EAAEK,GAAGlzB,KAAK,KACvfjF,EAAED,GAAGE,IAAI+F,gBAAgB,SAASjG,EAAEC,GAAG,OAAO83B,GAAG,EAAE,EAAE/3B,EAAEC,IAAIiG,QAAQ,SAASlG,EAAEC,GAAG,IAAIC,EAAE81B,KAAqD,OAAhD/1B,OAAE,IAASA,EAAE,KAAKA,EAAED,EAAEA,IAAIE,EAAEqV,cAAc,CAACvV,EAAEC,GAAUD,GAAGmG,WAAW,SAASnG,EAAEC,EAAEC,GAAG,IAAI8B,EAAEg0B,KAAuK,OAAlK/1B,OAAE,IAASC,EAAEA,EAAED,GAAGA,EAAE+B,EAAEuT,cAAcvT,EAAE+tB,UAAU9vB,EAAmFD,GAAjFA,EAAEgC,EAAEk0B,MAAM,CAAC/F,QAAQ,KAAKwG,SAAS,KAAKL,oBAAoBt2B,EAAE02B,kBAAkBz2B,IAAO02B,SAASW,GAAGpyB,KAAK,KAAK1B,GAAExD,GAAS,CAACgC,EAAEuT,cAAcvV,IAAIoG,OAAOyxB,GAAGxxB,SAASmxB,GAAG1xB,cAAcwyB,GAAGK,iBAAiB,SAAS34B,GAAG,IAAIC,EAAEu3B,GAAGx3B,GAAGE,EAAED,EAAE,GAAG+B,EAAE/B,EAAE,GAC5Z,OAD+Zg4B,IAAG,WAAW,IAAIh4B,EAAEo1B,GAAGxxB,WAC9ewxB,GAAGxxB,WAAW,EAAE,IAAI7B,EAAEhC,GAAN,QAAiBq1B,GAAGxxB,WAAW5D,KAAI,CAACD,IAAWE,GAAG04B,cAAc,WAAW,IAAI54B,EAAEw3B,IAAG,GAAIv3B,EAAED,EAAE,GAA8B,OAAN63B,GAArB73B,EAAEy4B,GAAGvzB,KAAK,KAAKlF,EAAE,KAAgB,CAACA,EAAEC,IAAI44B,iBAAiB,SAAS74B,EAAEC,EAAEC,GAAG,IAAI8B,EAAEg0B,KAAkF,OAA7Eh0B,EAAEuT,cAAc,CAAC1U,KAAK,CAACs2B,YAAYl3B,EAAEo3B,YAAY,MAAM34B,OAAOsB,EAAEo3B,UAAUl3B,GAAU+2B,GAAGj1B,EAAEhC,EAAEC,EAAEC,IAAI44B,oBAAoB,WAAW,GAAGtE,GAAG,CAAC,IAAIx0B,GAAE,EAAGC,EAzDlD,SAAYD,GAAG,MAAM,CAACwC,SAAS+G,EAAG7N,SAASsE,EAAEiO,QAAQjO,GAyDDg5B,EAAG,WAAiD,MAAtCh5B,IAAIA,GAAE,EAAGE,EAAE,MAAMgrB,MAAMxvB,SAAS,MAAYyF,MAAM+B,EAAE,SAAShD,EAAEs3B,GAAGv3B,GAAG,GAC1Z,OAD6Z,KAAY,EAAPuD,GAAEwvB,QAAUxvB,GAAE6R,OAAO,IAAIoiB,GAAG,GAAE,WAAWv3B,EAAE,MAAMgrB,MAAMxvB,SAAS,YAChf,EAAO,OAAcuE,EAAmC,OAANu3B,GAA3Bv3B,EAAE,MAAMirB,MAAMxvB,SAAS,KAAiBuE,GAAG84B,0BAAyB,GAAIlD,GAAG,CAAC6C,YAAYjJ,GAAG7pB,YAAY2yB,GAAG1yB,WAAW4pB,GAAG1pB,UAAUmyB,GAAGlyB,oBAAoBqyB,GAAGpyB,gBAAgBkyB,GAAGjyB,QAAQsyB,GAAGryB,WAAWkwB,GAAGjwB,OAAO0xB,GAAGzxB,SAAS,WAAW,OAAOgwB,GAAGD,KAAKtwB,cAAcwyB,GAAGK,iBAAiB,SAAS34B,GAAG,IAAIC,EAAEo2B,GAAGD,IAAIl2B,EAAED,EAAE,GAAG+B,EAAE/B,EAAE,GAA6F,OAA1Fi4B,IAAG,WAAW,IAAIj4B,EAAEo1B,GAAGxxB,WAAWwxB,GAAGxxB,WAAW,EAAE,IAAI7B,EAAEhC,GAAN,QAAiBq1B,GAAGxxB,WAAW5D,KAAI,CAACD,IAAWE,GAAG04B,cAAc,WAAW,IAAI54B,EAAEq2B,GAAGD,IAAI,GAAG,MAAM,CAAC0B,KAAKt2B,QAC9exB,IAAI64B,iBAAiBtB,GAAGuB,oBAAoB,WAAW,OAAOzC,GAAGD,IAAI,IAAI2C,0BAAyB,GAAIjD,GAAG,CAAC4C,YAAYjJ,GAAG7pB,YAAY2yB,GAAG1yB,WAAW4pB,GAAG1pB,UAAUmyB,GAAGlyB,oBAAoBqyB,GAAGpyB,gBAAgBkyB,GAAGjyB,QAAQsyB,GAAGryB,WAAWywB,GAAGxwB,OAAO0xB,GAAGzxB,SAAS,WAAW,OAAOuwB,GAAGR,KAAKtwB,cAAcwyB,GAAGK,iBAAiB,SAAS34B,GAAG,IAAIC,EAAE22B,GAAGR,IAAIl2B,EAAED,EAAE,GAAG+B,EAAE/B,EAAE,GAA6F,OAA1Fi4B,IAAG,WAAW,IAAIj4B,EAAEo1B,GAAGxxB,WAAWwxB,GAAGxxB,WAAW,EAAE,IAAI7B,EAAEhC,GAAN,QAAiBq1B,GAAGxxB,WAAW5D,KAAI,CAACD,IAAWE,GAAG04B,cAAc,WAAW,IAAI54B,EAAE42B,GAAGR,IAAI,GAAG,MAAM,CAAC0B,KAAKt2B,QACrfxB,IAAI64B,iBAAiBtB,GAAGuB,oBAAoB,WAAW,OAAOlC,GAAGR,IAAI,IAAI2C,0BAAyB,GAAIE,GAAGxwB,EAAG3E,kBAAkB0rB,IAAG,EAAG,SAAS0J,GAAGl5B,EAAEC,EAAEC,EAAE8B,GAAG/B,EAAE0V,MAAM,OAAO3V,EAAEuzB,GAAGtzB,EAAE,KAAKC,EAAE8B,GAAGsxB,GAAGrzB,EAAED,EAAE2V,MAAMzV,EAAE8B,GAAG,SAASm3B,GAAGn5B,EAAEC,EAAEC,EAAE8B,EAAED,GAAG7B,EAAEA,EAAEmF,OAAO,IAAIhD,EAAEpC,EAAE0B,IAA8B,OAA1BytB,GAAGnvB,EAAE8B,GAAGC,EAAE2zB,GAAG31B,EAAEC,EAAEC,EAAE8B,EAAEK,EAAEN,GAAM,OAAO/B,GAAIwvB,IAA0EvvB,EAAEoV,OAAO,EAAE6jB,GAAGl5B,EAAEC,EAAE+B,EAAED,GAAU9B,EAAE0V,QAAhG1V,EAAE6vB,YAAY9vB,EAAE8vB,YAAY7vB,EAAEoV,QAAQ,IAAIrV,EAAEuvB,QAAQxtB,EAAEq3B,GAAGp5B,EAAEC,EAAE8B,IACxW,SAASs3B,GAAGr5B,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAG,GAAG,OAAOrC,EAAE,CAAC,IAAImC,EAAEjC,EAAEuC,KAAK,MAAG,oBAAoBN,GAAIm3B,GAAGn3B,SAAI,IAASA,EAAEI,cAAc,OAAOrC,EAAEyF,cAAS,IAASzF,EAAEqC,eAAsDvC,EAAEkzB,GAAGhzB,EAAEuC,KAAK,KAAKT,EAAE/B,EAAEA,EAAE+yB,KAAK3wB,IAAKV,IAAI1B,EAAE0B,IAAI3B,EAAEoV,OAAOnV,EAASA,EAAE0V,MAAM3V,IAAvGC,EAAE0K,IAAI,GAAG1K,EAAEwC,KAAKN,EAAEo3B,GAAGv5B,EAAEC,EAAEkC,EAAEH,EAAED,EAAEM,IAAoF,OAAVF,EAAEnC,EAAE2V,MAAS,KAAK5T,EAAEM,KAAKN,EAAEI,EAAEiyB,eAA0Bl0B,EAAE,QAAdA,EAAEA,EAAEyF,SAAmBzF,EAAEsmB,IAAKzkB,EAAEC,IAAIhC,EAAE2B,MAAM1B,EAAE0B,KAAYy3B,GAAGp5B,EAAEC,EAAEoC,IAAGpC,EAAEoV,OAAO,GAAErV,EAAE8yB,GAAG3wB,EAAEH,IAAKL,IAAI1B,EAAE0B,IAAI3B,EAAEoV,OAAOnV,EAASA,EAAE0V,MAAM3V,GAClb,SAASu5B,GAAGv5B,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAG,GAAG,OAAOrC,GAAGwmB,GAAGxmB,EAAEo0B,cAAcpyB,IAAIhC,EAAE2B,MAAM1B,EAAE0B,IAAI,IAAG6tB,IAAG,EAAG,KAAKntB,EAAEN,GAAqC,OAAO9B,EAAEsvB,MAAMvvB,EAAEuvB,MAAM6J,GAAGp5B,EAAEC,EAAEoC,GAAhE,KAAa,MAARrC,EAAEqV,SAAema,IAAG,GAA0C,OAAOgK,GAAGx5B,EAAEC,EAAEC,EAAE8B,EAAEK,GACnL,SAASo3B,GAAGz5B,EAAEC,EAAEC,GAAG,IAAI8B,EAAE/B,EAAE20B,aAAa7yB,EAAEC,EAAEI,SAASC,EAAE,OAAOrC,EAAEA,EAAEuV,cAAc,KAAK,GAAG,WAAWvT,EAAEgxB,MAAM,kCAAkChxB,EAAEgxB,KAAK,GAAG,KAAY,EAAP/yB,EAAE+yB,MAAQ/yB,EAAEsV,cAAc,CAACmkB,UAAU,GAAGC,GAAG15B,EAAEC,OAAQ,IAAG,KAAO,WAAFA,GAA8E,OAAOF,EAAE,OAAOqC,EAAEA,EAAEq3B,UAAUx5B,EAAEA,EAAED,EAAEsvB,MAAMtvB,EAAEkvB,WAAW,WAAWlvB,EAAEsV,cAAc,CAACmkB,UAAU15B,GAAG25B,GAAG15B,EAAED,GAAG,KAAxKC,EAAEsV,cAAc,CAACmkB,UAAU,GAAGC,GAAG15B,EAAE,OAAOoC,EAAEA,EAAEq3B,UAAUx5B,QAA0H,OAAOmC,GAAGL,EAAEK,EAAEq3B,UAAUx5B,EAAED,EAAEsV,cAAc,MAAMvT,EAAE9B,EAAEy5B,GAAG15B,EAAE+B,GAAe,OAAZk3B,GAAGl5B,EAAEC,EAAE8B,EAAE7B,GAAUD,EAAE0V,MAC1e,SAASikB,GAAG55B,EAAEC,GAAG,IAAIC,EAAED,EAAE0B,KAAO,OAAO3B,GAAG,OAAOE,GAAG,OAAOF,GAAGA,EAAE2B,MAAMzB,KAAED,EAAEoV,OAAO,KAAI,SAASmkB,GAAGx5B,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,IAAIM,EAAE2pB,GAAG9rB,GAAGyrB,GAAG/oB,GAAEpB,QAA4C,OAApCa,EAAEupB,GAAG3rB,EAAEoC,GAAG+sB,GAAGnvB,EAAE8B,GAAG7B,EAAEy1B,GAAG31B,EAAEC,EAAEC,EAAE8B,EAAEK,EAAEN,GAAM,OAAO/B,GAAIwvB,IAA0EvvB,EAAEoV,OAAO,EAAE6jB,GAAGl5B,EAAEC,EAAEC,EAAE6B,GAAU9B,EAAE0V,QAAhG1V,EAAE6vB,YAAY9vB,EAAE8vB,YAAY7vB,EAAEoV,QAAQ,IAAIrV,EAAEuvB,QAAQxtB,EAAEq3B,GAAGp5B,EAAEC,EAAE8B,IAC9P,SAAS83B,GAAG75B,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,GAAGiqB,GAAG9rB,GAAG,CAAC,IAAImC,GAAE,EAAGiqB,GAAGrsB,QAAQoC,GAAE,EAAW,GAAR+sB,GAAGnvB,EAAE8B,GAAM,OAAO9B,EAAEyT,UAAU,OAAO1T,IAAIA,EAAEmV,UAAU,KAAKlV,EAAEkV,UAAU,KAAKlV,EAAEoV,OAAO,GAAGoc,GAAGxxB,EAAEC,EAAE8B,GAAG+vB,GAAG9xB,EAAEC,EAAE8B,EAAED,GAAGC,GAAE,OAAQ,GAAG,OAAOhC,EAAE,CAAC,IAAImC,EAAElC,EAAEyT,UAAUxR,EAAEjC,EAAEm0B,cAAcjyB,EAAExB,MAAMuB,EAAE,IAAID,EAAEE,EAAEvB,QAAQ3B,EAAEiB,EAAEwxB,YAAY,kBAAkBzyB,GAAG,OAAOA,EAAEA,EAAEwwB,GAAGxwB,GAAyBA,EAAE2sB,GAAG3rB,EAA1BhB,EAAE+sB,GAAG9rB,GAAGyrB,GAAG/oB,GAAEpB,SAAmB,IAAIhG,EAAE0E,EAAE8xB,yBAAyB5xB,EAAE,oBAAoB5E,GAAG,oBAAoB2G,EAAE8vB,wBAAwB7xB,GAAG,oBAAoB+B,EAAE2vB,kCACpd,oBAAoB3vB,EAAE0vB,4BAA4B3vB,IAAIF,GAAGC,IAAIhD,IAAI2yB,GAAG3xB,EAAEkC,EAAEH,EAAE/C,GAAG2wB,IAAG,EAAG,IAAI1wB,EAAEe,EAAEsV,cAAcpT,EAAEwvB,MAAMzyB,EAAE2xB,GAAG5wB,EAAE+B,EAAEG,EAAEJ,GAAGE,EAAEhC,EAAEsV,cAAcrT,IAAIF,GAAG9C,IAAI+C,GAAGY,GAAErB,SAASouB,IAAI,oBAAoBp0B,IAAIy1B,GAAGhxB,EAAEC,EAAE1E,EAAEwG,GAAGC,EAAEhC,EAAEsV,gBAAgBrT,EAAE0tB,IAAI2B,GAAGtxB,EAAEC,EAAEgC,EAAEF,EAAE9C,EAAE+C,EAAEhD,KAAKmB,GAAG,oBAAoB+B,EAAE+vB,2BAA2B,oBAAoB/vB,EAAEgwB,qBAAqB,oBAAoBhwB,EAAEgwB,oBAAoBhwB,EAAEgwB,qBAAqB,oBAAoBhwB,EAAE+vB,2BAA2B/vB,EAAE+vB,6BAA6B,oBACze/vB,EAAEiwB,oBAAoBnyB,EAAEoV,OAAO,KAAK,oBAAoBlT,EAAEiwB,oBAAoBnyB,EAAEoV,OAAO,GAAGpV,EAAEm0B,cAAcpyB,EAAE/B,EAAEsV,cAActT,GAAGE,EAAExB,MAAMqB,EAAEG,EAAEwvB,MAAM1vB,EAAEE,EAAEvB,QAAQ3B,EAAE+C,EAAEE,IAAI,oBAAoBC,EAAEiwB,oBAAoBnyB,EAAEoV,OAAO,GAAGrT,GAAE,OAAQ,CAACG,EAAElC,EAAEyT,UAAU2c,GAAGrwB,EAAEC,GAAGiC,EAAEjC,EAAEm0B,cAAcn1B,EAAEgB,EAAEwC,OAAOxC,EAAEgzB,YAAY/wB,EAAEysB,GAAG1uB,EAAEwC,KAAKP,GAAGC,EAAExB,MAAM1B,EAAEmB,EAAEH,EAAE20B,aAAa11B,EAAEiD,EAAEvB,QAAwB,kBAAhBqB,EAAE/B,EAAEwxB,cAAiC,OAAOzvB,EAAEA,EAAEwtB,GAAGxtB,GAAyBA,EAAE2pB,GAAG3rB,EAA1BgC,EAAE+pB,GAAG9rB,GAAGyrB,GAAG/oB,GAAEpB,SAAmB,IAAId,EAAER,EAAE8xB,0BAA0Bx2B,EAAE,oBAAoBkF,GACnf,oBAAoByB,EAAE8vB,0BAA0B,oBAAoB9vB,EAAE2vB,kCAAkC,oBAAoB3vB,EAAE0vB,4BAA4B3vB,IAAI9B,GAAGlB,IAAI+C,IAAI2vB,GAAG3xB,EAAEkC,EAAEH,EAAEC,GAAG2tB,IAAG,EAAG1wB,EAAEe,EAAEsV,cAAcpT,EAAEwvB,MAAMzyB,EAAE2xB,GAAG5wB,EAAE+B,EAAEG,EAAEJ,GAAG,IAAIjC,EAAEG,EAAEsV,cAAcrT,IAAI9B,GAAGlB,IAAIY,GAAG+C,GAAErB,SAASouB,IAAI,oBAAoBlvB,IAAIuwB,GAAGhxB,EAAEC,EAAEQ,EAAEsB,GAAGlC,EAAEG,EAAEsV,gBAAgBtW,EAAE2wB,IAAI2B,GAAGtxB,EAAEC,EAAEjB,EAAE+C,EAAE9C,EAAEY,EAAEmC,KAAKzG,GAAG,oBAAoB2G,EAAE23B,4BAA4B,oBAAoB33B,EAAE43B,sBAAsB,oBAAoB53B,EAAE43B,qBAAqB53B,EAAE43B,oBAAoB/3B,EAC1gBlC,EAAEmC,GAAG,oBAAoBE,EAAE23B,4BAA4B33B,EAAE23B,2BAA2B93B,EAAElC,EAAEmC,IAAI,oBAAoBE,EAAE63B,qBAAqB/5B,EAAEoV,OAAO,GAAG,oBAAoBlT,EAAE8vB,0BAA0BhyB,EAAEoV,OAAO,OAAO,oBAAoBlT,EAAE63B,oBAAoB93B,IAAIlC,EAAEo0B,eAAel1B,IAAIc,EAAEuV,gBAAgBtV,EAAEoV,OAAO,GAAG,oBAAoBlT,EAAE8vB,yBAAyB/vB,IAAIlC,EAAEo0B,eAAel1B,IAAIc,EAAEuV,gBAAgBtV,EAAEoV,OAAO,KAAKpV,EAAEm0B,cAAcpyB,EAAE/B,EAAEsV,cAAczV,GAAGqC,EAAExB,MAAMqB,EAAEG,EAAEwvB,MAAM7xB,EAAEqC,EAAEvB,QAAQqB,EAAED,EAAE/C,IAAI,oBAAoBkD,EAAE63B,oBAC7f93B,IAAIlC,EAAEo0B,eAAel1B,IAAIc,EAAEuV,gBAAgBtV,EAAEoV,OAAO,GAAG,oBAAoBlT,EAAE8vB,yBAAyB/vB,IAAIlC,EAAEo0B,eAAel1B,IAAIc,EAAEuV,gBAAgBtV,EAAEoV,OAAO,KAAKrT,GAAE,GAAI,OAAOi4B,GAAGj6B,EAAEC,EAAEC,EAAE8B,EAAEK,EAAEN,GACzL,SAASk4B,GAAGj6B,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAGu3B,GAAG55B,EAAEC,GAAG,IAAIkC,EAAE,KAAa,GAARlC,EAAEoV,OAAU,IAAIrT,IAAIG,EAAE,OAAOJ,GAAGyqB,GAAGvsB,EAAEC,GAAE,GAAIk5B,GAAGp5B,EAAEC,EAAEoC,GAAGL,EAAE/B,EAAEyT,UAAUulB,GAAGz3B,QAAQvB,EAAE,IAAIiC,EAAEC,GAAG,oBAAoBjC,EAAEg6B,yBAAyB,KAAKl4B,EAAEqD,SAAwI,OAA/HpF,EAAEoV,OAAO,EAAE,OAAOrV,GAAGmC,GAAGlC,EAAE0V,MAAM2d,GAAGrzB,EAAED,EAAE2V,MAAM,KAAKtT,GAAGpC,EAAE0V,MAAM2d,GAAGrzB,EAAE,KAAKiC,EAAEG,IAAI62B,GAAGl5B,EAAEC,EAAEiC,EAAEG,GAAGpC,EAAEsV,cAAcvT,EAAE2vB,MAAM5vB,GAAGyqB,GAAGvsB,EAAEC,GAAE,GAAWD,EAAE0V,MAAM,SAASwkB,GAAGn6B,GAAG,IAAIC,EAAED,EAAE0T,UAAUzT,EAAEm6B,eAAejO,GAAGnsB,EAAEC,EAAEm6B,eAAen6B,EAAEm6B,iBAAiBn6B,EAAEW,SAASX,EAAEW,SAASurB,GAAGnsB,EAAEC,EAAEW,SAAQ,GAAIizB,GAAG7zB,EAAEC,EAAE4X,eAC7d,IAS0VwiB,GAAMC,GAAGC,GAT/VC,GAAG,CAAChlB,WAAW,KAAKilB,UAAU,GAClC,SAASC,GAAG16B,EAAEC,EAAEC,GAAG,IAAsCiC,EAAlCH,EAAE/B,EAAE20B,aAAa7yB,EAAEoB,GAAE3B,QAAQa,GAAE,EAA6M,OAAvMF,EAAE,KAAa,GAARlC,EAAEoV,UAAalT,GAAE,OAAOnC,GAAG,OAAOA,EAAEuV,gBAAiB,KAAO,EAAFxT,IAAMI,GAAGE,GAAE,EAAGpC,EAAEoV,QAAQ,IAAI,OAAOrV,GAAG,OAAOA,EAAEuV,oBAAe,IAASvT,EAAE24B,WAAU,IAAK34B,EAAE44B,6BAA6B74B,GAAG,GAAGL,GAAEyB,GAAI,EAAFpB,GAAQ,OAAO/B,QAAG,IAASgC,EAAE24B,UAAU9F,GAAG50B,GAAGD,EAAEgC,EAAEI,SAASL,EAAEC,EAAE24B,SAAYt4B,GAASrC,EAAE66B,GAAG56B,EAAED,EAAE+B,EAAE7B,GAAGD,EAAE0V,MAAMJ,cAAc,CAACmkB,UAAUx5B,GAAGD,EAAEsV,cAAcilB,GAAGx6B,GAAK,kBAAkBgC,EAAE84B,2BAAiC96B,EAAE66B,GAAG56B,EAAED,EAAE+B,EAAE7B,GAAGD,EAAE0V,MAAMJ,cAAc,CAACmkB,UAAUx5B,GAC/fD,EAAEsV,cAAcilB,GAAGv6B,EAAEsvB,MAAM,SAASvvB,KAAEE,EAAE66B,GAAG,CAAC/H,KAAK,UAAU5wB,SAASpC,GAAGC,EAAE+yB,KAAK9yB,EAAE,OAAQkV,OAAOnV,EAASA,EAAE0V,MAAMzV,KAAYF,EAAEuV,cAAkBlT,GAASL,EAAEg5B,GAAGh7B,EAAEC,EAAE+B,EAAEI,SAASJ,EAAE24B,SAASz6B,GAAGmC,EAAEpC,EAAE0V,MAAM5T,EAAE/B,EAAE2V,MAAMJ,cAAclT,EAAEkT,cAAc,OAAOxT,EAAE,CAAC23B,UAAUx5B,GAAG,CAACw5B,UAAU33B,EAAE23B,UAAUx5B,GAAGmC,EAAE8sB,WAAWnvB,EAAEmvB,YAAYjvB,EAAED,EAAEsV,cAAcilB,GAAGx4B,IAAE9B,EAAE+6B,GAAGj7B,EAAEC,EAAE+B,EAAEI,SAASlC,GAAGD,EAAEsV,cAAc,KAAYrV,IAClQ,SAAS26B,GAAG76B,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE/B,EAAEgzB,KAAK3wB,EAAErC,EAAE2V,MAAuK,OAAjK1V,EAAE,CAAC+yB,KAAK,SAAS5wB,SAASnC,GAAG,KAAO,EAAF8B,IAAM,OAAOM,GAAGA,EAAE8sB,WAAW,EAAE9sB,EAAEuyB,aAAa30B,GAAGoC,EAAE04B,GAAG96B,EAAE8B,EAAE,EAAE,MAAM7B,EAAEmzB,GAAGnzB,EAAE6B,EAAEC,EAAE,MAAMK,EAAE+S,OAAOpV,EAAEE,EAAEkV,OAAOpV,EAAEqC,EAAEuT,QAAQ1V,EAAEF,EAAE2V,MAAMtT,EAASnC,EACrV,SAAS+6B,GAAGj7B,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE/B,EAAE2V,MAAiL,OAA3K3V,EAAE+B,EAAE6T,QAAQ1V,EAAE4yB,GAAG/wB,EAAE,CAACixB,KAAK,UAAU5wB,SAASlC,IAAI,KAAY,EAAPD,EAAE+yB,QAAU9yB,EAAEqvB,MAAMvtB,GAAG9B,EAAEkV,OAAOnV,EAAEC,EAAE0V,QAAQ,KAAK,OAAO5V,IAAIA,EAAE2yB,WAAW,KAAK3yB,EAAEqV,MAAM,EAAEpV,EAAE2yB,YAAY3yB,EAAEyyB,WAAW1yB,GAAUC,EAAE0V,MAAMzV,EAC7N,SAAS86B,GAAGh7B,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,IAAIM,EAAEpC,EAAE+yB,KAAK7wB,EAAEnC,EAAE2V,MAAM3V,EAAEmC,EAAEyT,QAAQ,IAAI1T,EAAE,CAAC8wB,KAAK,SAAS5wB,SAASlC,GAAoS,OAAjS,KAAO,EAAFmC,IAAMpC,EAAE0V,QAAQxT,IAAGjC,EAAED,EAAE0V,OAAQwZ,WAAW,EAAEjvB,EAAE00B,aAAa1yB,EAAiB,QAAfC,EAAEjC,EAAEwyB,aAAqBzyB,EAAE2yB,YAAY1yB,EAAE0yB,YAAY3yB,EAAEyyB,WAAWvwB,EAAEA,EAAEwwB,WAAW,MAAM1yB,EAAE2yB,YAAY3yB,EAAEyyB,WAAW,MAAMxyB,EAAE4yB,GAAG3wB,EAAED,GAAG,OAAOlC,EAAEgC,EAAE8wB,GAAG9yB,EAAEgC,IAAIA,EAAEqxB,GAAGrxB,EAAEK,EAAEN,EAAE,OAAQsT,OAAO,EAAGrT,EAAEoT,OAAOnV,EAAEC,EAAEkV,OAAOnV,EAAEC,EAAE0V,QAAQ5T,EAAE/B,EAAE0V,MAAMzV,EAAS8B,EAAE,SAASk5B,GAAGl7B,EAAEC,GAAGD,EAAEuvB,OAAOtvB,EAAE,IAAIC,EAAEF,EAAEmV,UAAU,OAAOjV,IAAIA,EAAEqvB,OAAOtvB,GAAGivB,GAAGlvB,EAAEoV,OAAOnV,GACtd,SAASk7B,GAAGn7B,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAG,IAAIF,EAAEnC,EAAEuV,cAAc,OAAOpT,EAAEnC,EAAEuV,cAAc,CAAC6lB,YAAYn7B,EAAEo7B,UAAU,KAAKC,mBAAmB,EAAEC,KAAKv5B,EAAEw5B,KAAKt7B,EAAEu7B,SAAS15B,EAAE2wB,WAAWrwB,IAAIF,EAAEi5B,YAAYn7B,EAAEkC,EAAEk5B,UAAU,KAAKl5B,EAAEm5B,mBAAmB,EAAEn5B,EAAEo5B,KAAKv5B,EAAEG,EAAEq5B,KAAKt7B,EAAEiC,EAAEs5B,SAAS15B,EAAEI,EAAEuwB,WAAWrwB,GACvQ,SAASq5B,GAAG17B,EAAEC,EAAEC,GAAG,IAAI8B,EAAE/B,EAAE20B,aAAa7yB,EAAEC,EAAEqyB,YAAYhyB,EAAEL,EAAEw5B,KAAsC,GAAjCtC,GAAGl5B,EAAEC,EAAE+B,EAAEI,SAASlC,GAAkB,KAAO,GAAtB8B,EAAEmB,GAAE3B,UAAqBQ,EAAI,EAAFA,EAAI,EAAE/B,EAAEoV,OAAO,OAAO,CAAC,GAAG,OAAOrV,GAAG,KAAa,GAARA,EAAEqV,OAAUrV,EAAE,IAAIA,EAAEC,EAAE0V,MAAM,OAAO3V,GAAG,CAAC,GAAG,KAAKA,EAAE2K,IAAI,OAAO3K,EAAEuV,eAAe2lB,GAAGl7B,EAAEE,QAAQ,GAAG,KAAKF,EAAE2K,IAAIuwB,GAAGl7B,EAAEE,QAAQ,GAAG,OAAOF,EAAE2V,MAAM,CAAC3V,EAAE2V,MAAMP,OAAOpV,EAAEA,EAAEA,EAAE2V,MAAM,SAAS,GAAG3V,IAAIC,EAAE,MAAMD,EAAE,KAAK,OAAOA,EAAE4V,SAAS,CAAC,GAAG,OAAO5V,EAAEoV,QAAQpV,EAAEoV,SAASnV,EAAE,MAAMD,EAAEA,EAAEA,EAAEoV,OAAOpV,EAAE4V,QAAQR,OAAOpV,EAAEoV,OAAOpV,EAAEA,EAAE4V,QAAQ5T,GAAG,EAAS,GAAPN,GAAEyB,GAAEnB,GAAM,KAAY,EAAP/B,EAAE+yB,MAAQ/yB,EAAEsV,cACze,UAAU,OAAOxT,GAAG,IAAK,WAAqB,IAAV7B,EAAED,EAAE0V,MAAU5T,EAAE,KAAK,OAAO7B,GAAiB,QAAdF,EAAEE,EAAEiV,YAAoB,OAAOgf,GAAGn0B,KAAK+B,EAAE7B,GAAGA,EAAEA,EAAE0V,QAAY,QAAJ1V,EAAE6B,IAAYA,EAAE9B,EAAE0V,MAAM1V,EAAE0V,MAAM,OAAO5T,EAAE7B,EAAE0V,QAAQ1V,EAAE0V,QAAQ,MAAMulB,GAAGl7B,GAAE,EAAG8B,EAAE7B,EAAEmC,EAAEpC,EAAEyyB,YAAY,MAAM,IAAK,YAA6B,IAAjBxyB,EAAE,KAAK6B,EAAE9B,EAAE0V,MAAU1V,EAAE0V,MAAM,KAAK,OAAO5T,GAAG,CAAe,GAAG,QAAjB/B,EAAE+B,EAAEoT,YAAuB,OAAOgf,GAAGn0B,GAAG,CAACC,EAAE0V,MAAM5T,EAAE,MAAM/B,EAAE+B,EAAE6T,QAAQ7T,EAAE6T,QAAQ1V,EAAEA,EAAE6B,EAAEA,EAAE/B,EAAEm7B,GAAGl7B,GAAE,EAAGC,EAAE,KAAKmC,EAAEpC,EAAEyyB,YAAY,MAAM,IAAK,WAAWyI,GAAGl7B,GAAE,EAAG,KAAK,UAAK,EAAOA,EAAEyyB,YAAY,MAAM,QAAQzyB,EAAEsV,cAAc,KAAK,OAAOtV,EAAE0V,MAC/f,SAASyjB,GAAGp5B,EAAEC,EAAEC,GAAyD,GAAtD,OAAOF,IAAIC,EAAEovB,aAAarvB,EAAEqvB,cAAcyB,IAAI7wB,EAAEsvB,MAAS,KAAKrvB,EAAED,EAAEkvB,YAAY,CAAC,GAAG,OAAOnvB,GAAGC,EAAE0V,QAAQ3V,EAAE2V,MAAM,MAAMxU,MAAM+B,EAAE,MAAM,GAAG,OAAOjD,EAAE0V,MAAM,CAA4C,IAAjCzV,EAAE4yB,GAAZ9yB,EAAEC,EAAE0V,MAAa3V,EAAE40B,cAAc30B,EAAE0V,MAAMzV,EAAMA,EAAEkV,OAAOnV,EAAE,OAAOD,EAAE4V,SAAS5V,EAAEA,EAAE4V,SAAQ1V,EAAEA,EAAE0V,QAAQkd,GAAG9yB,EAAEA,EAAE40B,eAAgBxf,OAAOnV,EAAEC,EAAE0V,QAAQ,KAAK,OAAO3V,EAAE0V,MAAM,OAAO,KAK5P,SAASgmB,GAAG37B,EAAEC,GAAG,IAAIu0B,GAAG,OAAOx0B,EAAEy7B,UAAU,IAAK,SAASx7B,EAAED,EAAEw7B,KAAK,IAAI,IAAIt7B,EAAE,KAAK,OAAOD,GAAG,OAAOA,EAAEkV,YAAYjV,EAAED,GAAGA,EAAEA,EAAE2V,QAAQ,OAAO1V,EAAEF,EAAEw7B,KAAK,KAAKt7B,EAAE0V,QAAQ,KAAK,MAAM,IAAK,YAAY1V,EAAEF,EAAEw7B,KAAK,IAAI,IAAIx5B,EAAE,KAAK,OAAO9B,GAAG,OAAOA,EAAEiV,YAAYnT,EAAE9B,GAAGA,EAAEA,EAAE0V,QAAQ,OAAO5T,EAAE/B,GAAG,OAAOD,EAAEw7B,KAAKx7B,EAAEw7B,KAAK,KAAKx7B,EAAEw7B,KAAK5lB,QAAQ,KAAK5T,EAAE4T,QAAQ,MAC7Z,SAASgmB,GAAG57B,EAAEC,EAAEC,GAAG,IAAI8B,EAAE/B,EAAE20B,aAAa,OAAO30B,EAAE0K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,OAAO,KAAK,KAAK,EAQyC,KAAK,GAAG,OAAOqhB,GAAG/rB,EAAEwC,OAAOypB,KAAK,KAR1C,KAAK,EAAsL,OAApL8H,KAAKvyB,GAAEoB,IAAGpB,GAAEmB,IAAGsyB,MAAKlzB,EAAE/B,EAAEyT,WAAY0mB,iBAAiBp4B,EAAEpB,QAAQoB,EAAEo4B,eAAep4B,EAAEo4B,eAAe,MAAS,OAAOp6B,GAAG,OAAOA,EAAE2V,QAAMof,GAAG90B,GAAGA,EAAEoV,OAAO,EAAErT,EAAE4V,UAAU3X,EAAEoV,OAAO,MAAkB,KAAK,KAAK,EAAE6e,GAAGj0B,GAAG,IAAI8B,EAAE6xB,GAAGD,GAAGnyB,SAAkB,GAATtB,EAAED,EAAEwC,KAAQ,OAAOzC,GAAG,MAAMC,EAAEyT,UAAU4mB,GAAGt6B,EAAEC,EAAEC,EAAE8B,GAAKhC,EAAE2B,MAAM1B,EAAE0B,MAAM1B,EAAEoV,OAAO,SAAS,CAAC,IAAIrT,EAAE,CAAC,GAAG,OAC7f/B,EAAEyT,UAAU,MAAMvS,MAAM+B,EAAE,MAAM,OAAO,KAAsB,GAAjBlD,EAAE4zB,GAAGH,GAAGjyB,SAAYuzB,GAAG90B,GAAG,CAAC+B,EAAE/B,EAAEyT,UAAUxT,EAAED,EAAEwC,KAAK,IAAIJ,EAAEpC,EAAEm0B,cAA8B,OAAhBpyB,EAAEopB,IAAInrB,EAAE+B,EAAEqpB,IAAIhpB,EAASnC,GAAG,IAAK,SAASqB,GAAE,SAASS,GAAGT,GAAE,QAAQS,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQT,GAAE,OAAOS,GAAG,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIhC,EAAE,EAAEA,EAAEyoB,GAAGxuB,OAAO+F,IAAIuB,GAAEknB,GAAGzoB,GAAGgC,GAAG,MAAM,IAAK,SAAST,GAAE,QAAQS,GAAG,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAOT,GAAE,QAAQS,GAAGT,GAAE,OAAOS,GAAG,MAAM,IAAK,UAAUT,GAAE,SAASS,GAAG,MAAM,IAAK,QAAQqK,GAAGrK,EAAEK,GAAGd,GAAE,UAAUS,GAAG,MAAM,IAAK,SAASA,EAAEmK,cAC5f,CAAC0vB,cAAcx5B,EAAEy5B,UAAUv6B,GAAE,UAAUS,GAAG,MAAM,IAAK,WAAWsL,GAAGtL,EAAEK,GAAGd,GAAE,UAAUS,GAAkB,IAAI,IAAIG,KAAvB2Q,GAAG5S,EAAEmC,GAAGrC,EAAE,KAAkBqC,EAAEA,EAAE/E,eAAe6E,KAAKJ,EAAEM,EAAEF,GAAG,aAAaA,EAAE,kBAAkBJ,EAAEC,EAAEyL,cAAc1L,IAAI/B,EAAE,CAAC,WAAW+B,IAAI,kBAAkBA,GAAGC,EAAEyL,cAAc,GAAG1L,IAAI/B,EAAE,CAAC,WAAW,GAAG+B,IAAI2E,EAAGpJ,eAAe6E,IAAI,MAAMJ,GAAG,aAAaI,GAAGZ,GAAE,SAASS,IAAI,OAAO9B,GAAG,IAAK,QAAQ+K,EAAGjJ,GAAG2K,GAAG3K,EAAEK,GAAE,GAAI,MAAM,IAAK,WAAW4I,EAAGjJ,GAAGwL,GAAGxL,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,MAAM,QAAQ,oBAAoBK,EAAE05B,UAAU/5B,EAAEg6B,QACtf7R,IAAInoB,EAAEhC,EAAEC,EAAE6vB,YAAY9tB,EAAE,OAAOA,IAAI/B,EAAEoV,OAAO,OAAO,CAAiZ,OAAhZlT,EAAE,IAAIJ,EAAE0M,SAAS1M,EAAEA,EAAE6K,cAAc5M,IAAI0N,KAAU1N,EAAE2N,GAAGzN,IAAIF,IAAI0N,GAAQ,WAAWxN,IAAGF,EAAEmC,EAAE6C,cAAc,QAASgJ,UAAU,qBAAuBhO,EAAEA,EAAEmO,YAAYnO,EAAEkO,aAAa,kBAAkBlM,EAAEgR,GAAGhT,EAAEmC,EAAE6C,cAAc9E,EAAE,CAAC8S,GAAGhR,EAAEgR,MAAMhT,EAAEmC,EAAE6C,cAAc9E,GAAG,WAAWA,IAAIiC,EAAEnC,EAAEgC,EAAE85B,SAAS35B,EAAE25B,UAAS,EAAG95B,EAAEi6B,OAAO95B,EAAE85B,KAAKj6B,EAAEi6B,QAAQj8B,EAAEmC,EAAE+5B,gBAAgBl8B,EAAEE,GAAGF,EAAEorB,IAAInrB,EAAED,EAAEqrB,IAAIrpB,EAAEq4B,GAAGr6B,EAAEC,GAASA,EAAEyT,UAAU1T,EAAEmC,EAAE4Q,GAAG7S,EAAE8B,GAAU9B,GAAG,IAAK,SAASqB,GAAE,SAASvB,GAAGuB,GAAE,QAAQvB,GACpf+B,EAAEC,EAAE,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQT,GAAE,OAAOvB,GAAG+B,EAAEC,EAAE,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAID,EAAE,EAAEA,EAAE0mB,GAAGxuB,OAAO8H,IAAIR,GAAEknB,GAAG1mB,GAAG/B,GAAG+B,EAAEC,EAAE,MAAM,IAAK,SAAST,GAAE,QAAQvB,GAAG+B,EAAEC,EAAE,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAOT,GAAE,QAAQvB,GAAGuB,GAAE,OAAOvB,GAAG+B,EAAEC,EAAE,MAAM,IAAK,UAAUT,GAAE,SAASvB,GAAG+B,EAAEC,EAAE,MAAM,IAAK,QAAQqK,GAAGrM,EAAEgC,GAAGD,EAAEiK,EAAGhM,EAAEgC,GAAGT,GAAE,UAAUvB,GAAG,MAAM,IAAK,SAAS+B,EAAE8K,GAAG7M,EAAEgC,GAAG,MAAM,IAAK,SAAShC,EAAEmM,cAAc,CAAC0vB,cAAc75B,EAAE85B,UAAU/5B,EAAEO,EAAE,GAAGN,EAAE,CAAC5G,WAAM,IAASmG,GAAE,UAAUvB,GAAG,MAAM,IAAK,WAAWsN,GAAGtN,EAAEgC,GAAGD,EACpfqL,GAAGpN,EAAEgC,GAAGT,GAAE,UAAUvB,GAAG,MAAM,QAAQ+B,EAAEC,EAAE8Q,GAAG5S,EAAE6B,GAAG,IAAIG,EAAEH,EAAE,IAAIM,KAAKH,EAAE,GAAGA,EAAE5E,eAAe+E,GAAG,CAAC,IAAIJ,EAAEC,EAAEG,GAAG,UAAUA,EAAEmP,GAAGxR,EAAEiC,GAAG,4BAA4BI,EAAuB,OAApBJ,EAAEA,EAAEA,EAAEwoB,YAAO,IAAgB3c,GAAG9N,EAAEiC,GAAI,aAAaI,EAAE,kBAAkBJ,GAAG,aAAa/B,GAAG,KAAK+B,IAAIsM,GAAGvO,EAAEiC,GAAG,kBAAkBA,GAAGsM,GAAGvO,EAAE,GAAGiC,GAAG,mCAAmCI,GAAG,6BAA6BA,GAAG,cAAcA,IAAIqE,EAAGpJ,eAAe+E,GAAG,MAAMJ,GAAG,aAAaI,GAAGd,GAAE,SAASvB,GAAG,MAAMiC,GAAG+F,EAAGhI,EAAEqC,EAAEJ,EAAEE,IAAI,OAAOjC,GAAG,IAAK,QAAQ+K,EAAGjL,GAAG2M,GAAG3M,EAAEgC,GAAE,GACnf,MAAM,IAAK,WAAWiJ,EAAGjL,GAAGwN,GAAGxN,GAAG,MAAM,IAAK,SAAS,MAAMgC,EAAE5G,OAAO4E,EAAEsI,aAAa,QAAQ,GAAGwC,EAAG9I,EAAE5G,QAAQ,MAAM,IAAK,SAAS4E,EAAE87B,WAAW95B,EAAE85B,SAAmB,OAAVz5B,EAAEL,EAAE5G,OAAc2R,GAAG/M,IAAIgC,EAAE85B,SAASz5B,GAAE,GAAI,MAAML,EAAEkK,cAAca,GAAG/M,IAAIgC,EAAE85B,SAAS95B,EAAEkK,cAAa,GAAI,MAAM,QAAQ,oBAAoBnK,EAAEg6B,UAAU/7B,EAAEg8B,QAAQ7R,IAAIG,GAAGpqB,EAAE8B,KAAK/B,EAAEoV,OAAO,GAAG,OAAOpV,EAAE0B,MAAM1B,EAAEoV,OAAO,KAAK,OAAO,KAAK,KAAK,EAAE,GAAGrV,GAAG,MAAMC,EAAEyT,UAAU6mB,GAAGv6B,EAAEC,EAAED,EAAEo0B,cAAcpyB,OAAO,CAAC,GAAG,kBAAkBA,GAAG,OAAO/B,EAAEyT,UAAU,MAAMvS,MAAM+B,EAAE,MAC/ehD,EAAE0zB,GAAGD,GAAGnyB,SAASoyB,GAAGH,GAAGjyB,SAASuzB,GAAG90B,IAAI+B,EAAE/B,EAAEyT,UAAUxT,EAAED,EAAEm0B,cAAcpyB,EAAEopB,IAAInrB,EAAE+B,EAAE0M,YAAYxO,IAAID,EAAEoV,OAAO,MAAKrT,GAAG,IAAI9B,EAAEuO,SAASvO,EAAEA,EAAE0M,eAAeuvB,eAAen6B,IAAKopB,IAAInrB,EAAEA,EAAEyT,UAAU1R,GAAG,OAAO,KAAK,KAAK,GAA0B,OAAvBP,GAAE0B,IAAGnB,EAAE/B,EAAEsV,cAAiB,KAAa,GAARtV,EAAEoV,QAAiBpV,EAAEsvB,MAAMrvB,EAAED,IAAE+B,EAAE,OAAOA,EAAE9B,GAAE,EAAG,OAAOF,OAAE,IAASC,EAAEm0B,cAAcuG,UAAU5F,GAAG90B,GAAGC,EAAE,OAAOF,EAAEuV,cAAiBvT,IAAI9B,GAAG,KAAY,EAAPD,EAAE+yB,QAAW,OAAOhzB,IAAG,IAAKC,EAAEm0B,cAAcwG,4BAA4B,KAAe,EAAVz3B,GAAE3B,SAAW,IAAI46B,KAAIA,GAAE,IAAW,IAAIA,IAAG,IAAIA,KAAEA,GACrf,GAAE,OAAOlF,IAAG,KAAQ,UAAHpG,KAAe,KAAQ,UAAHuL,KAAeC,GAAGpF,GAAEqF,OAAMv6B,GAAG9B,KAAED,EAAEoV,OAAO,GAAS,MAAK,KAAK,EAAE,OAAO2e,KAAW,OAAOh0B,GAAGqpB,GAAGppB,EAAEyT,UAAUmE,eAAe,KAAK,KAAK,GAAG,OAAOoX,GAAGhvB,GAAG,KAA0C,KAAK,GAA0B,GAAvBwB,GAAE0B,IAAwB,QAArBnB,EAAE/B,EAAEsV,eAA0B,OAAO,KAAsC,GAAjClT,EAAE,KAAa,GAARpC,EAAEoV,OAA2B,QAAjBlT,EAAEH,EAAEq5B,WAAsB,GAAGh5B,EAAEs5B,GAAG35B,GAAE,OAAQ,CAAC,GAAG,IAAIo6B,IAAG,OAAOp8B,GAAG,KAAa,GAARA,EAAEqV,OAAU,IAAIrV,EAAEC,EAAE0V,MAAM,OAAO3V,GAAG,CAAS,GAAG,QAAXmC,EAAEgyB,GAAGn0B,IAAe,CACjW,IADkWC,EAAEoV,OAAO,GAAGsmB,GAAG35B,GAAE,GAAoB,QAAhBK,EAAEF,EAAE2tB,eAAuB7vB,EAAE6vB,YAAYztB,EAAEpC,EAAEoV,OAAO,GACnf,OAAOrT,EAAE0wB,aAAazyB,EAAE2yB,YAAY,MAAM3yB,EAAEyyB,WAAW1wB,EAAE0wB,WAAW1wB,EAAE9B,EAAMA,EAAED,EAAE0V,MAAM,OAAOzV,GAAOF,EAAEgC,GAANK,EAAEnC,GAAQmV,OAAO,EAAEhT,EAAEswB,WAAW,KAAKtwB,EAAEuwB,YAAY,KAAKvwB,EAAEqwB,WAAW,KAAmB,QAAdvwB,EAAEE,EAAE8S,YAAoB9S,EAAE8sB,WAAW,EAAE9sB,EAAEktB,MAAMvvB,EAAEqC,EAAEsT,MAAM,KAAKtT,EAAE+xB,cAAc,KAAK/xB,EAAEkT,cAAc,KAAKlT,EAAEytB,YAAY,KAAKztB,EAAEgtB,aAAa,KAAKhtB,EAAEqR,UAAU,OAAOrR,EAAE8sB,WAAWhtB,EAAEgtB,WAAW9sB,EAAEktB,MAAMptB,EAAEotB,MAAMltB,EAAEsT,MAAMxT,EAAEwT,MAAMtT,EAAE+xB,cAAcjyB,EAAEiyB,cAAc/xB,EAAEkT,cAAcpT,EAAEoT,cAAclT,EAAEytB,YAAY3tB,EAAE2tB,YAAYztB,EAAEI,KAAKN,EAAEM,KAAKzC,EAAEmC,EAAEktB,aACpfhtB,EAAEgtB,aAAa,OAAOrvB,EAAE,KAAK,CAACuvB,MAAMvvB,EAAEuvB,MAAMD,aAAatvB,EAAEsvB,eAAepvB,EAAEA,EAAE0V,QAA2B,OAAnBlU,GAAEyB,GAAY,EAAVA,GAAE3B,QAAU,GAAUvB,EAAE0V,MAAM3V,EAAEA,EAAE4V,QAAQ,OAAO5T,EAAEw5B,MAAMx4B,KAAIw5B,KAAKv8B,EAAEoV,OAAO,GAAGhT,GAAE,EAAGs5B,GAAG35B,GAAE,GAAI/B,EAAEsvB,MAAM,cAAc,CAAC,IAAIltB,EAAE,GAAW,QAARrC,EAAEm0B,GAAGhyB,KAAa,GAAGlC,EAAEoV,OAAO,GAAGhT,GAAE,EAAmB,QAAhBnC,EAAEF,EAAE8vB,eAAuB7vB,EAAE6vB,YAAY5vB,EAAED,EAAEoV,OAAO,GAAGsmB,GAAG35B,GAAE,GAAI,OAAOA,EAAEw5B,MAAM,WAAWx5B,EAAEy5B,WAAWt5B,EAAEgT,YAAYqf,GAAG,OAAmC,QAA5Bv0B,EAAEA,EAAEyyB,WAAW1wB,EAAE0wB,cAAsBzyB,EAAE0yB,WAAW,MAAM,UAAU,EAAE3vB,KAAIhB,EAAEs5B,mBAAmBkB,IAAI,aAAat8B,IAAID,EAAEoV,OACjf,GAAGhT,GAAE,EAAGs5B,GAAG35B,GAAE,GAAI/B,EAAEsvB,MAAM,UAAUvtB,EAAEo5B,aAAaj5B,EAAEyT,QAAQ3V,EAAE0V,MAAM1V,EAAE0V,MAAMxT,IAAa,QAATjC,EAAE8B,EAAEu5B,MAAcr7B,EAAE0V,QAAQzT,EAAElC,EAAE0V,MAAMxT,EAAEH,EAAEu5B,KAAKp5B,GAAG,OAAO,OAAOH,EAAEw5B,MAAMt7B,EAAE8B,EAAEw5B,KAAKx5B,EAAEq5B,UAAUn7B,EAAE8B,EAAEw5B,KAAKt7B,EAAE0V,QAAQ5T,EAAE0wB,WAAWzyB,EAAEyyB,WAAW1wB,EAAEs5B,mBAAmBt4B,KAAI9C,EAAE0V,QAAQ,KAAK3V,EAAEkD,GAAE3B,QAAQE,GAAEyB,GAAEd,EAAI,EAAFpC,EAAI,EAAI,EAAFA,GAAKC,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOu8B,KAAK,OAAOz8B,GAAG,OAAOA,EAAEuV,iBAAiB,OAAOtV,EAAEsV,gBAAgB,kCAAkCvT,EAAEgxB,OAAO/yB,EAAEoV,OAAO,GAAG,KAAK,MAAMlU,MAAM+B,EAAE,IAAIjD,EAAE0K,MAChd,SAAS+xB,GAAG18B,GAAG,OAAOA,EAAE2K,KAAK,KAAK,EAAEqhB,GAAGhsB,EAAEyC,OAAOypB,KAAK,IAAIjsB,EAAED,EAAEqV,MAAM,OAAS,KAAFpV,GAAQD,EAAEqV,OAAS,KAAHpV,EAAQ,GAAGD,GAAG,KAAK,KAAK,EAAgC,GAA9Bg0B,KAAKvyB,GAAEoB,IAAGpB,GAAEmB,IAAGsyB,KAAkB,KAAO,IAApBj1B,EAAED,EAAEqV,QAAoB,MAAMlU,MAAM+B,EAAE,MAAyB,OAAnBlD,EAAEqV,OAAS,KAAHpV,EAAQ,GAAUD,EAAE,KAAK,EAAE,OAAOk0B,GAAGl0B,GAAG,KAAK,KAAK,GAAG,OAAOyB,GAAE0B,IAAe,MAAZlD,EAAED,EAAEqV,QAAcrV,EAAEqV,OAAS,KAAHpV,EAAQ,GAAGD,GAAG,KAAK,KAAK,GAAG,OAAOyB,GAAE0B,IAAG,KAAK,KAAK,EAAE,OAAO6wB,KAAK,KAAK,KAAK,GAAG,OAAO/E,GAAGjvB,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOy8B,KAAK,KAAK,QAAQ,OAAO,MACra,SAASE,GAAG38B,EAAEC,GAAG,IAAI,IAAIC,EAAE,GAAG8B,EAAE/B,EAAE,GAAGC,GAAGwK,EAAG1I,GAAGA,EAAEA,EAAEoT,aAAapT,GAAG,IAAID,EAAE7B,EAAE,MAAMmC,GAAGN,EAAE,6BAA6BM,EAAEu6B,QAAQ,KAAKv6B,EAAE0H,MAAM,MAAM,CAAC3O,MAAM4E,EAAEtB,OAAOuB,EAAE8J,MAAMhI,GAAG,SAAS86B,GAAG78B,EAAEC,GAAG,IAAIjB,QAAQrC,MAAMsD,EAAE7E,OAAO,MAAM8E,GAAGyqB,YAAW,WAAW,MAAMzqB,MAlB3Pm6B,GAAG,SAASr6B,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAE0V,MAAM,OAAOzV,GAAG,CAAC,GAAG,IAAIA,EAAEyK,KAAK,IAAIzK,EAAEyK,IAAI3K,EAAEoO,YAAYlO,EAAEwT,gBAAgB,GAAG,IAAIxT,EAAEyK,KAAK,OAAOzK,EAAEyV,MAAM,CAACzV,EAAEyV,MAAMP,OAAOlV,EAAEA,EAAEA,EAAEyV,MAAM,SAAS,GAAGzV,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAE0V,SAAS,CAAC,GAAG,OAAO1V,EAAEkV,QAAQlV,EAAEkV,SAASnV,EAAE,OAAOC,EAAEA,EAAEkV,OAAOlV,EAAE0V,QAAQR,OAAOlV,EAAEkV,OAAOlV,EAAEA,EAAE0V,UAChS0kB,GAAG,SAASt6B,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE/B,EAAEo0B,cAAc,GAAGryB,IAAIC,EAAE,CAAChC,EAAEC,EAAEyT,UAAUkgB,GAAGH,GAAGjyB,SAAS,IAAyUW,EAArUE,EAAE,KAAK,OAAOnC,GAAG,IAAK,QAAQ6B,EAAEiK,EAAGhM,EAAE+B,GAAGC,EAAEgK,EAAGhM,EAAEgC,GAAGK,EAAE,GAAG,MAAM,IAAK,SAASN,EAAE8K,GAAG7M,EAAE+B,GAAGC,EAAE6K,GAAG7M,EAAEgC,GAAGK,EAAE,GAAG,MAAM,IAAK,SAASN,EAAEO,EAAE,GAAGP,EAAE,CAAC3G,WAAM,IAAS4G,EAAEM,EAAE,GAAGN,EAAE,CAAC5G,WAAM,IAASiH,EAAE,GAAG,MAAM,IAAK,WAAWN,EAAEqL,GAAGpN,EAAE+B,GAAGC,EAAEoL,GAAGpN,EAAEgC,GAAGK,EAAE,GAAG,MAAM,QAAQ,oBAAoBN,EAAEg6B,SAAS,oBAAoB/5B,EAAE+5B,UAAU/7B,EAAEg8B,QAAQ7R,IAAyB,IAAIlrB,KAAzB6T,GAAG5S,EAAE8B,GAAS9B,EAAE,KAAc6B,EAAE,IAAIC,EAAE1E,eAAe2B,IAAI8C,EAAEzE,eAAe2B,IAAI,MAAM8C,EAAE9C,GAAG,GAAG,UAC3eA,EAAE,CAAC,IAAIiD,EAAEH,EAAE9C,GAAG,IAAIkD,KAAKD,EAAEA,EAAE5E,eAAe6E,KAAKjC,IAAIA,EAAE,IAAIA,EAAEiC,GAAG,QAAQ,4BAA4BlD,GAAG,aAAaA,GAAG,mCAAmCA,GAAG,6BAA6BA,GAAG,cAAcA,IAAIyH,EAAGpJ,eAAe2B,GAAGoD,IAAIA,EAAE,KAAKA,EAAEA,GAAG,IAAIlH,KAAK8D,EAAE,OAAO,IAAIA,KAAK+C,EAAE,CAAC,IAAIC,EAAED,EAAE/C,GAAyB,GAAtBiD,EAAE,MAAMH,EAAEA,EAAE9C,QAAG,EAAU+C,EAAE1E,eAAe2B,IAAIgD,IAAIC,IAAI,MAAMD,GAAG,MAAMC,GAAG,GAAG,UAAUjD,EAAE,GAAGiD,EAAE,CAAC,IAAIC,KAAKD,GAAGA,EAAE5E,eAAe6E,IAAIF,GAAGA,EAAE3E,eAAe6E,KAAKjC,IAAIA,EAAE,IAAIA,EAAEiC,GAAG,IAAI,IAAIA,KAAKF,EAAEA,EAAE3E,eAAe6E,IAAID,EAAEC,KAAKF,EAAEE,KAAKjC,IAClfA,EAAE,IAAIA,EAAEiC,GAAGF,EAAEE,SAASjC,IAAImC,IAAIA,EAAE,IAAIA,EAAElH,KAAK8D,EAAEiB,IAAIA,EAAE+B,MAAM,4BAA4BhD,GAAGgD,EAAEA,EAAEA,EAAEwoB,YAAO,EAAOvoB,EAAEA,EAAEA,EAAEuoB,YAAO,EAAO,MAAMxoB,GAAGC,IAAID,IAAII,EAAEA,GAAG,IAAIlH,KAAK8D,EAAEgD,IAAI,aAAahD,EAAE,kBAAkBgD,GAAG,kBAAkBA,IAAII,EAAEA,GAAG,IAAIlH,KAAK8D,EAAE,GAAGgD,GAAG,mCAAmChD,GAAG,6BAA6BA,IAAIyH,EAAGpJ,eAAe2B,IAAI,MAAMgD,GAAG,aAAahD,GAAGsC,GAAE,SAASvB,GAAGqC,GAAGH,IAAID,IAAII,EAAE,KAAK,kBAAkBJ,GAAG,OAAOA,GAAGA,EAAEO,WAAW+G,EAAGtH,EAAEvG,YAAY2G,EAAEA,GAAG,IAAIlH,KAAK8D,EAAEgD,IAAI/B,IAAImC,EAAEA,GAAG,IAAIlH,KAAK,QAC/e+E,GAAG,IAAIjB,EAAEoD,GAAKpC,EAAE6vB,YAAY7wB,KAAEgB,EAAEoV,OAAO,KAAIklB,GAAG,SAASv6B,EAAEC,EAAEC,EAAE8B,GAAG9B,IAAI8B,IAAI/B,EAAEoV,OAAO,IAcgL,IAAIynB,GAAG,oBAAoBC,QAAQA,QAAQtmB,IAAI,SAASumB,GAAGh9B,EAAEC,EAAEC,IAAGA,EAAEowB,IAAI,EAAEpwB,IAAKyK,IAAI,EAAEzK,EAAEuwB,QAAQ,CAACwM,QAAQ,MAAM,IAAIj7B,EAAE/B,EAAE7E,MAAsD,OAAhD8E,EAAEwwB,SAAS,WAAWwM,KAAKA,IAAG,EAAGC,GAAGn7B,GAAG66B,GAAG78B,EAAEC,IAAWC,EACpb,SAASk9B,GAAGp9B,EAAEC,EAAEC,IAAGA,EAAEowB,IAAI,EAAEpwB,IAAKyK,IAAI,EAAE,IAAI3I,EAAEhC,EAAEyC,KAAKy3B,yBAAyB,GAAG,oBAAoBl4B,EAAE,CAAC,IAAID,EAAE9B,EAAE7E,MAAM8E,EAAEuwB,QAAQ,WAAmB,OAARoM,GAAG78B,EAAEC,GAAU+B,EAAED,IAAI,IAAIM,EAAErC,EAAE0T,UAA8O,OAApO,OAAOrR,GAAG,oBAAoBA,EAAEg7B,oBAAoBn9B,EAAEwwB,SAAS,WAAW,oBAAoB1uB,IAAI,OAAOs7B,GAAGA,GAAG,IAAI72B,IAAI,CAACxJ,OAAOqgC,GAAGz2B,IAAI5J,MAAM4/B,GAAG78B,EAAEC,IAAI,IAAIC,EAAED,EAAE8J,MAAM9M,KAAKogC,kBAAkBp9B,EAAE7E,MAAM,CAACmiC,eAAe,OAAOr9B,EAAEA,EAAE,OAAcA,EAAE,IAAIs9B,GAAG,oBAAoBC,QAAQA,QAAQh3B,IACxc,SAASi3B,GAAG19B,GAAG,IAAIC,EAAED,EAAE2B,IAAI,GAAG,OAAO1B,EAAE,GAAG,oBAAoBA,EAAE,IAAIA,EAAE,MAAM,MAAMC,GAAGy9B,GAAG39B,EAAEE,QAAQD,EAAEuB,QAAQ,KAAK,SAASo8B,GAAG59B,EAAEC,GAAG,OAAOA,EAAE0K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAA8Q,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAjS,KAAK,EAAE,GAAW,IAAR1K,EAAEoV,OAAW,OAAOrV,EAAE,CAAC,IAAIE,EAAEF,EAAEo0B,cAAcpyB,EAAEhC,EAAEuV,cAA4BtV,GAAdD,EAAEC,EAAEyT,WAAcue,wBAAwBhyB,EAAEgzB,cAAchzB,EAAEwC,KAAKvC,EAAEyuB,GAAG1uB,EAAEwC,KAAKvC,GAAG8B,GAAGhC,EAAE69B,oCAAoC59B,EAAE,OAAO,KAAK,EAA6C,YAAnC,IAARA,EAAEoV,OAAWyV,GAAG7qB,EAAEyT,UAAUmE,gBAA0D,MAAM1W,MAAM+B,EAAE,MAC5e,SAAS46B,GAAG99B,EAAEC,EAAEC,GAAG,OAAOA,EAAEyK,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAgD,GAAG,QAAhC1K,EAAE,QAAlBA,EAAEC,EAAE4vB,aAAuB7vB,EAAEyyB,WAAW,MAAiB,CAAC1yB,EAAEC,EAAEA,EAAEhF,KAAK,EAAE,CAAC,GAAG,KAAW,EAAN+E,EAAE2K,KAAO,CAAC,IAAI3I,EAAEhC,EAAE03B,OAAO13B,EAAE23B,QAAQ31B,IAAIhC,EAAEA,EAAE/E,WAAW+E,IAAIC,GAAgD,GAAG,QAAhCA,EAAE,QAAlBA,EAAEC,EAAE4vB,aAAuB7vB,EAAEyyB,WAAW,MAAiB,CAAC1yB,EAAEC,EAAEA,EAAEhF,KAAK,EAAE,CAAC,IAAI8G,EAAE/B,EAAEgC,EAAED,EAAE9G,KAAa,KAAO,GAAf8G,EAAEA,EAAE4I,OAAe,KAAO,EAAF5I,KAAOg8B,GAAG79B,EAAEF,GAAGg+B,GAAG99B,EAAEF,IAAIA,EAAEgC,QAAQhC,IAAIC,GAAG,OAAO,KAAK,EACtR,OADwRD,EAAEE,EAAEwT,UAAkB,EAARxT,EAAEmV,QAAU,OAAOpV,EAAED,EAAEoyB,qBAAqBpwB,EAAE9B,EAAE+yB,cAAc/yB,EAAEuC,KAAKxC,EAAEm0B,cAAczF,GAAGzuB,EAAEuC,KAAKxC,EAAEm0B,eAAep0B,EAAEg6B,mBAAmBh4B,EACxgB/B,EAAEsV,cAAcvV,EAAE69B,4CAAuD,QAAhB59B,EAAEC,EAAE4vB,cAAsBiB,GAAG7wB,EAAED,EAAED,IAAU,KAAK,EAAkB,GAAG,QAAnBC,EAAEC,EAAE4vB,aAAwB,CAAQ,GAAP9vB,EAAE,KAAQ,OAAOE,EAAEyV,MAAM,OAAOzV,EAAEyV,MAAMhL,KAAK,KAAK,EAA4B,KAAK,EAAE3K,EAAEE,EAAEyV,MAAMjC,UAAUqd,GAAG7wB,EAAED,EAAED,GAAG,OAAO,KAAK,EAA2E,OAAzEA,EAAEE,EAAEwT,eAAU,OAAOzT,GAAW,EAARC,EAAEmV,OAASiV,GAAGpqB,EAAEuC,KAAKvC,EAAEk0B,gBAAgBp0B,EAAEi+B,SAAe,KAAK,EAAS,KAAK,EAAS,KAAK,GACnX,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAD6U,KAAK,GACzY,YAD4Y,OAAO/9B,EAAEqV,gBAAgBrV,EAAEA,EAAEiV,UAAU,OAAOjV,IAAIA,EAAEA,EAAEqV,cAAc,OAAOrV,IAAIA,EAAEA,EAAEsV,WAAW,OAAOtV,GAAGoY,GAAGpY,OACzb,MAAMiB,MAAM+B,EAAE,MAC5E,SAASg7B,GAAGl+B,EAAEC,GAAG,IAAI,IAAIC,EAAEF,IAAI,CAAC,GAAG,IAAIE,EAAEyK,IAAI,CAAC,IAAI3I,EAAE9B,EAAEwT,UAAU,GAAGzT,EAAY,oBAAV+B,EAAEA,EAAEyP,OAA4BE,YAAY3P,EAAE2P,YAAY,UAAU,OAAO,aAAa3P,EAAEm8B,QAAQ,WAAW,CAACn8B,EAAE9B,EAAEwT,UAAU,IAAI3R,EAAE7B,EAAEk0B,cAAc3iB,MAAM1P,OAAE,IAASA,GAAG,OAAOA,GAAGA,EAAEzE,eAAe,WAAWyE,EAAEo8B,QAAQ,KAAKn8B,EAAEyP,MAAM0sB,QAAQ5sB,GAAG,UAAUxP,SAAS,GAAG,IAAI7B,EAAEyK,IAAIzK,EAAEwT,UAAUhF,UAAUzO,EAAE,GAAGC,EAAEk0B,mBAAmB,IAAI,KAAKl0B,EAAEyK,KAAK,KAAKzK,EAAEyK,KAAK,OAAOzK,EAAEqV,eAAerV,IAAIF,IAAI,OAAOE,EAAEyV,MAAM,CAACzV,EAAEyV,MAAMP,OAAOlV,EAAEA,EAAEA,EAAEyV,MAAM,SAAS,GAAGzV,IACtfF,EAAE,MAAM,KAAK,OAAOE,EAAE0V,SAAS,CAAC,GAAG,OAAO1V,EAAEkV,QAAQlV,EAAEkV,SAASpV,EAAE,OAAOE,EAAEA,EAAEkV,OAAOlV,EAAE0V,QAAQR,OAAOlV,EAAEkV,OAAOlV,EAAEA,EAAE0V,SACjH,SAASwoB,GAAGp+B,EAAEC,GAAG,GAAGysB,IAAI,oBAAoBA,GAAG2R,qBAAqB,IAAI3R,GAAG2R,qBAAqB5R,GAAGxsB,GAAG,MAAMoC,IAAI,OAAOpC,EAAE0K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAmB,GAAG,QAAnB3K,EAAEC,EAAE6vB,cAAyC,QAAf9vB,EAAEA,EAAE0yB,YAAqB,CAAC,IAAIxyB,EAAEF,EAAEA,EAAE/E,KAAK,EAAE,CAAC,IAAI+G,EAAE9B,EAAE6B,EAAEC,EAAE21B,QAAgB,GAAR31B,EAAEA,EAAE2I,SAAO,IAAS5I,EAAE,GAAG,KAAO,EAAFC,GAAK+7B,GAAG99B,EAAEC,OAAO,CAAC8B,EAAE/B,EAAE,IAAI8B,IAAI,MAAMM,GAAGs7B,GAAG37B,EAAEK,IAAInC,EAAEA,EAAEjF,WAAWiF,IAAIF,GAAG,MAAM,KAAK,EAAsB,GAApB09B,GAAGz9B,GAAoB,oBAAjBD,EAAEC,EAAEyT,WAAmC4qB,qBAAqB,IAAIt+B,EAAEW,MAAMV,EAAEm0B,cAAcp0B,EAAE2xB,MAAM1xB,EAAEsV,cAAcvV,EAAEs+B,uBAAuB,MAAMj8B,GAAGs7B,GAAG19B,EAC/gBoC,GAAG,MAAM,KAAK,EAAEq7B,GAAGz9B,GAAG,MAAM,KAAK,EAAEs+B,GAAGv+B,EAAEC,IAAI,SAASu+B,GAAGx+B,GAAGA,EAAEmV,UAAU,KAAKnV,EAAE2V,MAAM,KAAK3V,EAAEqvB,aAAa,KAAKrvB,EAAE4yB,YAAY,KAAK5yB,EAAE0yB,WAAW,KAAK1yB,EAAEo0B,cAAc,KAAKp0B,EAAEuV,cAAc,KAAKvV,EAAE40B,aAAa,KAAK50B,EAAEoV,OAAO,KAAKpV,EAAE8vB,YAAY,KAAK,SAAS2O,GAAGz+B,GAAG,OAAO,IAAIA,EAAE2K,KAAK,IAAI3K,EAAE2K,KAAK,IAAI3K,EAAE2K,IACnS,SAAS+zB,GAAG1+B,GAAGA,EAAE,CAAC,IAAI,IAAIC,EAAED,EAAEoV,OAAO,OAAOnV,GAAG,CAAC,GAAGw+B,GAAGx+B,GAAG,MAAMD,EAAEC,EAAEA,EAAEmV,OAAO,MAAMjU,MAAM+B,EAAE,MAAO,IAAIhD,EAAED,EAAgB,OAAdA,EAAEC,EAAEwT,UAAiBxT,EAAEyK,KAAK,KAAK,EAAE,IAAI3I,GAAE,EAAG,MAAM,KAAK,EAA+B,KAAK,EAAE/B,EAAEA,EAAE4X,cAAc7V,GAAE,EAAG,MAAM,QAAQ,MAAMb,MAAM+B,EAAE,MAAe,GAARhD,EAAEmV,QAAW9G,GAAGtO,EAAE,IAAIC,EAAEmV,QAAQ,IAAIrV,EAAEC,EAAE,IAAIC,EAAEF,IAAI,CAAC,KAAK,OAAOE,EAAE0V,SAAS,CAAC,GAAG,OAAO1V,EAAEkV,QAAQqpB,GAAGv+B,EAAEkV,QAAQ,CAAClV,EAAE,KAAK,MAAMF,EAAEE,EAAEA,EAAEkV,OAAiC,IAA1BlV,EAAE0V,QAAQR,OAAOlV,EAAEkV,OAAWlV,EAAEA,EAAE0V,QAAQ,IAAI1V,EAAEyK,KAAK,IAAIzK,EAAEyK,KAAK,KAAKzK,EAAEyK,KAAK,CAAC,GAAW,EAARzK,EAAEmV,MAAQ,SAASpV,EAAE,GAAG,OAC/eC,EAAEyV,OAAO,IAAIzV,EAAEyK,IAAI,SAAS1K,EAAOC,EAAEyV,MAAMP,OAAOlV,EAAEA,EAAEA,EAAEyV,MAAM,KAAa,EAARzV,EAAEmV,OAAS,CAACnV,EAAEA,EAAEwT,UAAU,MAAM1T,GAAGgC,EAAE28B,GAAG3+B,EAAEE,EAAED,GAAG2+B,GAAG5+B,EAAEE,EAAED,GACzH,SAAS0+B,GAAG3+B,EAAEC,EAAEC,GAAG,IAAI8B,EAAEhC,EAAE2K,IAAI5I,EAAE,IAAIC,GAAG,IAAIA,EAAE,GAAGD,EAAE/B,EAAE+B,EAAE/B,EAAE0T,UAAU1T,EAAE0T,UAAUoV,SAAS7oB,EAAE,IAAIC,EAAEuO,SAASvO,EAAEkT,WAAWyrB,aAAa7+B,EAAEC,GAAGC,EAAE2+B,aAAa7+B,EAAEC,IAAI,IAAIC,EAAEuO,UAAUxO,EAAEC,EAAEkT,YAAayrB,aAAa7+B,EAAEE,IAAKD,EAAEC,GAAIkO,YAAYpO,GAA4B,QAAxBE,EAAEA,EAAE4+B,2BAA8B,IAAS5+B,GAAG,OAAOD,EAAE+7B,UAAU/7B,EAAE+7B,QAAQ7R,UAAU,GAAG,IAAInoB,GAAc,QAAVhC,EAAEA,EAAE2V,OAAgB,IAAIgpB,GAAG3+B,EAAEC,EAAEC,GAAGF,EAAEA,EAAE4V,QAAQ,OAAO5V,GAAG2+B,GAAG3+B,EAAEC,EAAEC,GAAGF,EAAEA,EAAE4V,QAC9Y,SAASgpB,GAAG5+B,EAAEC,EAAEC,GAAG,IAAI8B,EAAEhC,EAAE2K,IAAI5I,EAAE,IAAIC,GAAG,IAAIA,EAAE,GAAGD,EAAE/B,EAAE+B,EAAE/B,EAAE0T,UAAU1T,EAAE0T,UAAUoV,SAAS7oB,EAAEC,EAAE2+B,aAAa7+B,EAAEC,GAAGC,EAAEkO,YAAYpO,QAAQ,GAAG,IAAIgC,GAAc,QAAVhC,EAAEA,EAAE2V,OAAgB,IAAIipB,GAAG5+B,EAAEC,EAAEC,GAAGF,EAAEA,EAAE4V,QAAQ,OAAO5V,GAAG4+B,GAAG5+B,EAAEC,EAAEC,GAAGF,EAAEA,EAAE4V,QACrN,SAAS2oB,GAAGv+B,EAAEC,GAAG,IAAI,IAAa8B,EAAEM,EAAXnC,EAAED,EAAE+B,GAAE,IAAS,CAAC,IAAIA,EAAE,CAACA,EAAE9B,EAAEkV,OAAOpV,EAAE,OAAO,CAAC,GAAG,OAAOgC,EAAE,MAAMb,MAAM+B,EAAE,MAAoB,OAAdnB,EAAEC,EAAE0R,UAAiB1R,EAAE2I,KAAK,KAAK,EAAEtI,GAAE,EAAG,MAAMrC,EAAE,KAAK,EAAiC,KAAK,EAAE+B,EAAEA,EAAE8V,cAAcxV,GAAE,EAAG,MAAMrC,EAAEgC,EAAEA,EAAEoT,OAAOpT,GAAE,EAAG,GAAG,IAAI9B,EAAEyK,KAAK,IAAIzK,EAAEyK,IAAI,CAAC3K,EAAE,IAAI,IAAImC,EAAEnC,EAAEkC,EAAEhC,EAAE+B,EAAEC,IAAI,GAAGk8B,GAAGj8B,EAAEF,GAAG,OAAOA,EAAE0T,OAAO,IAAI1T,EAAE0I,IAAI1I,EAAE0T,MAAMP,OAAOnT,EAAEA,EAAEA,EAAE0T,UAAU,CAAC,GAAG1T,IAAIC,EAAE,MAAMlC,EAAE,KAAK,OAAOiC,EAAE2T,SAAS,CAAC,GAAG,OAAO3T,EAAEmT,QAAQnT,EAAEmT,SAASlT,EAAE,MAAMlC,EAAEiC,EAAEA,EAAEmT,OAAOnT,EAAE2T,QAAQR,OAAOnT,EAAEmT,OAAOnT,EAAEA,EAAE2T,QAAQvT,GAAGF,EAAEJ,EAAEG,EAAEhC,EAAEwT,UACrf,IAAIvR,EAAEsM,SAAStM,EAAEiR,WAAWjF,YAAYjM,GAAGC,EAAEgM,YAAYjM,IAAIH,EAAEoM,YAAYjO,EAAEwT,gBAAgB,GAAG,IAAIxT,EAAEyK,KAAK,GAAG,OAAOzK,EAAEyV,MAAM,CAAC5T,EAAE7B,EAAEwT,UAAUmE,cAAcxV,GAAE,EAAGnC,EAAEyV,MAAMP,OAAOlV,EAAEA,EAAEA,EAAEyV,MAAM,eAAe,GAAGyoB,GAAGp+B,EAAEE,GAAG,OAAOA,EAAEyV,MAAM,CAACzV,EAAEyV,MAAMP,OAAOlV,EAAEA,EAAEA,EAAEyV,MAAM,SAAS,GAAGzV,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAE0V,SAAS,CAAC,GAAG,OAAO1V,EAAEkV,QAAQlV,EAAEkV,SAASnV,EAAE,OAAkB,KAAXC,EAAEA,EAAEkV,QAAazK,MAAM3I,GAAE,GAAI9B,EAAE0V,QAAQR,OAAOlV,EAAEkV,OAAOlV,EAAEA,EAAE0V,SAClZ,SAASmpB,GAAG/+B,EAAEC,GAAG,OAAOA,EAAE0K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAIzK,EAAED,EAAE6vB,YAAyC,GAAG,QAAhC5vB,EAAE,OAAOA,EAAEA,EAAEwyB,WAAW,MAAiB,CAAC,IAAI1wB,EAAE9B,EAAEA,EAAEjF,KAAK,GAAG,KAAW,EAAN+G,EAAE2I,OAAS3K,EAAEgC,EAAE21B,QAAQ31B,EAAE21B,aAAQ,OAAO,IAAS33B,GAAGA,KAAKgC,EAAEA,EAAE/G,WAAW+G,IAAI9B,GAAG,OAAO,KAAK,EAErJ,KAAK,GAAoG,KAAK,GAAG,OAF6C,KAAK,EAAgB,GAAG,OAAjBA,EAAED,EAAEyT,WAAqB,CAAC1R,EAAE/B,EAAEm0B,cAAc,IAAIryB,EAAE,OAAO/B,EAAEA,EAAEo0B,cAAcpyB,EAAEhC,EAAEC,EAAEwC,KAAK,IAAIJ,EAAEpC,EAAE6vB,YAA+B,GAAnB7vB,EAAE6vB,YAAY,KAAQ,OAAOztB,EAAE,CAAgF,IAA/EnC,EAAEmrB,IAAIrpB,EAAE,UAAUhC,GAAG,UAAUgC,EAAES,MAAM,MAAMT,EAAElG,MAAM0Q,GAAGtM,EAAE8B,GAAG+Q,GAAG/S,EAAE+B,GAAG9B,EAAE8S,GAAG/S,EAAEgC,GAAOD,EAAE,EAAEA,EAAEM,EAAEpI,OAAO8H,GAClf,EAAE,CAAC,IAAII,EAAEE,EAAEN,GAAGG,EAAEG,EAAEN,EAAE,GAAG,UAAUI,EAAEqP,GAAGtR,EAAEgC,GAAG,4BAA4BC,EAAE2L,GAAG5N,EAAEgC,GAAG,aAAaC,EAAEoM,GAAGrO,EAAEgC,GAAG8F,EAAG9H,EAAEiC,EAAED,EAAEjC,GAAG,OAAOD,GAAG,IAAK,QAAQyM,GAAGvM,EAAE8B,GAAG,MAAM,IAAK,WAAWuL,GAAGrN,EAAE8B,GAAG,MAAM,IAAK,SAAShC,EAAEE,EAAEiM,cAAc0vB,YAAY37B,EAAEiM,cAAc0vB,cAAc75B,EAAE85B,SAAmB,OAAVz5B,EAAEL,EAAE5G,OAAc2R,GAAG7M,IAAI8B,EAAE85B,SAASz5B,GAAE,GAAIrC,MAAMgC,EAAE85B,WAAW,MAAM95B,EAAEkK,aAAaa,GAAG7M,IAAI8B,EAAE85B,SAAS95B,EAAEkK,cAAa,GAAIa,GAAG7M,IAAI8B,EAAE85B,SAAS95B,EAAE85B,SAAS,GAAG,IAAG,MAAO,OAAO,KAAK,EAAE,GAAG,OAAO77B,EAAEyT,UAAU,MAAMvS,MAAM+B,EAAE,MAC/c,YADqdjD,EAAEyT,UAAUhF,UACjfzO,EAAEm0B,eAAqB,KAAK,EAA8D,aAA5Dl0B,EAAED,EAAEyT,WAAYkE,UAAU1X,EAAE0X,SAAQ,EAAGU,GAAGpY,EAAE2X,iBAAsC,KAAK,GAAyD,OAAtD,OAAO5X,EAAEsV,gBAAgBypB,GAAGh8B,KAAIk7B,GAAGj+B,EAAE0V,OAAM,SAAKspB,GAAGh/B,GAAU,KAAK,GAAS,YAANg/B,GAAGh/B,GAAyB,KAAK,GAAG,KAAK,GAAgC,YAA7Bi+B,GAAGj+B,EAAE,OAAOA,EAAEsV,eAAsB,MAAMpU,MAAM+B,EAAE,MAAO,SAAS+7B,GAAGj/B,GAAG,IAAIC,EAAED,EAAE8vB,YAAY,GAAG,OAAO7vB,EAAE,CAACD,EAAE8vB,YAAY,KAAK,IAAI5vB,EAAEF,EAAE0T,UAAU,OAAOxT,IAAIA,EAAEF,EAAE0T,UAAU,IAAI8pB,IAAIv9B,EAAE5B,SAAQ,SAAS4B,GAAG,IAAI+B,EAAEk9B,GAAGh6B,KAAK,KAAKlF,EAAEC,GAAGC,EAAE+oB,IAAIhpB,KAAKC,EAAE2G,IAAI5G,GAAGA,EAAEpD,KAAKmF,EAAEA,QACne,SAASm9B,GAAGn/B,EAAEC,GAAG,OAAO,OAAOD,IAAsB,QAAlBA,EAAEA,EAAEuV,gBAAwB,OAAOvV,EAAEwV,cAA+B,QAAlBvV,EAAEA,EAAEsV,gBAAwB,OAAOtV,EAAEuV,YAAe,IAAI4pB,GAAG1kB,KAAK2kB,KAAKC,GAAG72B,EAAG9E,uBAAuB47B,GAAG92B,EAAG3E,kBAAkB07B,GAAE,EAAEtI,GAAE,KAAKuI,GAAE,KAAKlD,GAAE,EAAEmD,GAAG,EAAEC,GAAGlU,GAAG,GAAG2Q,GAAE,EAAEwD,GAAG,KAAKC,GAAG,EAAE/O,GAAG,EAAEuL,GAAG,EAAEyD,GAAG,EAAEC,GAAG,KAAKf,GAAG,EAAExC,GAAGwD,IAAS,SAASC,KAAKzD,GAAGx5B,KAAI,IAAI,IA8BsFk9B,GA9BlFC,GAAE,KAAKjD,IAAG,EAAGC,GAAG,KAAKG,GAAG,KAAK8C,IAAG,EAAGC,GAAG,KAAKC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,EAAEC,GAAG,KAAKC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAG,EAAG,SAAS5P,KAAK,OAAO,KAAO,GAAFoO,IAAMx8B,MAAK,IAAI49B,GAAGA,GAAGA,GAAG59B,KAC3e,SAASquB,GAAGrxB,GAAY,GAAG,KAAO,GAAnBA,EAAEA,EAAEgzB,OAAkB,OAAO,EAAE,GAAG,KAAO,EAAFhzB,GAAK,OAAO,KAAKouB,KAAK,EAAE,EAAkB,GAAhB,IAAIyS,KAAKA,GAAGhB,IAAO,IAAInR,GAAG7qB,WAAW,CAAC,IAAIi9B,KAAKA,GAAG,OAAOf,GAAGA,GAAGlmB,aAAa,GAAG7Z,EAAE6gC,GAAG,IAAI5gC,EAAE,SAAS6gC,GAAsD,OAA7C,KAAN7gC,IAAIA,KAA8B,KAAPA,GAAbD,EAAE,SAASA,IAAOA,KAAUC,EAAE,OAAcA,EAA4D,OAA1DD,EAAEouB,KAAK,KAAO,EAAFoR,KAAM,KAAKx/B,EAAEA,EAAEqa,GAAG,GAAGwmB,IAAa7gC,EAAEqa,GAAVra,EAtK3Q,SAAYA,GAAG,OAAOA,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,EAAE,KAAK,GAAG,OAAO,EAAE,QAAQ,OAAO,GAsKuJihC,CAAGjhC,GAAU6gC,IAAY7gC,EACnT,SAASsxB,GAAGtxB,EAAEC,EAAEC,GAAG,GAAG,GAAGwgC,GAAG,MAAMA,GAAG,EAAEC,GAAG,KAAKx/B,MAAM+B,EAAE,MAAgB,GAAG,QAAblD,EAAEkhC,GAAGlhC,EAAEC,IAAe,OAAO,KAAKua,GAAGxa,EAAEC,EAAEC,GAAGF,IAAIk3B,KAAImF,IAAIp8B,EAAE,IAAIm8B,IAAGE,GAAGt8B,EAAEu8B,KAAI,IAAIv6B,EAAEosB,KAAK,IAAInuB,EAAE,KAAO,EAAFu/B,KAAM,KAAO,GAAFA,IAAM2B,GAAGnhC,IAAIohC,GAAGphC,EAAEE,GAAG,IAAIs/B,KAAIS,KAAKzR,QAAQ,KAAO,EAAFgR,KAAM,KAAKx9B,GAAG,KAAKA,IAAI,OAAOy+B,GAAGA,GAAG,IAAIh6B,IAAI,CAACzG,IAAIygC,GAAG55B,IAAI7G,IAAIohC,GAAGphC,EAAEE,IAAI6/B,GAAG//B,EAAE,SAASkhC,GAAGlhC,EAAEC,GAAGD,EAAEuvB,OAAOtvB,EAAE,IAAIC,EAAEF,EAAEmV,UAAqC,IAA3B,OAAOjV,IAAIA,EAAEqvB,OAAOtvB,GAAGC,EAAEF,EAAMA,EAAEA,EAAEoV,OAAO,OAAOpV,GAAGA,EAAEmvB,YAAYlvB,EAAgB,QAAdC,EAAEF,EAAEmV,aAAqBjV,EAAEivB,YAAYlvB,GAAGC,EAAEF,EAAEA,EAAEA,EAAEoV,OAAO,OAAO,IAAIlV,EAAEyK,IAAIzK,EAAEwT,UAAU,KACze,SAAS0tB,GAAGphC,EAAEC,GAAG,IAAI,IAAIC,EAAEF,EAAEqhC,aAAar/B,EAAEhC,EAAE+Z,eAAehY,EAAE/B,EAAEga,YAAY3X,EAAErC,EAAEshC,gBAAgBn/B,EAAEnC,EAAE6Z,aAAa,EAAE1X,GAAG,CAAC,IAAID,EAAE,GAAG+X,GAAG9X,GAAGF,EAAE,GAAGC,EAAEjD,EAAEoD,EAAEH,GAAG,IAAI,IAAIjD,GAAG,GAAG,KAAKgD,EAAED,IAAI,KAAKC,EAAEF,GAAG,CAAC9C,EAAEgB,EAAE0Z,GAAG1X,GAAG,IAAIzG,EAAE6F,GAAEgB,EAAEH,GAAG,IAAI1G,EAAEyD,EAAE,IAAI,GAAGzD,EAAEyD,EAAE,KAAK,QAAQA,GAAGgB,IAAID,EAAE8Z,cAAc7X,GAAGE,IAAIF,EAAwB,GAAtBD,EAAE4X,GAAG5Z,EAAEA,IAAIk3B,GAAEqF,GAAE,GAAGt8B,EAAEoB,GAAK,IAAIW,EAAE,OAAO9B,IAAIA,IAAI4tB,IAAIjB,GAAG3sB,GAAGF,EAAEqhC,aAAa,KAAKrhC,EAAEuhC,iBAAiB,OAAO,CAAC,GAAG,OAAOrhC,EAAE,CAAC,GAAGF,EAAEuhC,mBAAmBthC,EAAE,OAAOC,IAAI4tB,IAAIjB,GAAG3sB,GAAG,KAAKD,GAAGC,EAAEihC,GAAGj8B,KAAK,KAAKlF,GAAG,OAAOguB,IAAIA,GAAG,CAAC9tB,GAAG+tB,GAAGrB,GAAGU,GAAGmB,KAAKT,GAAG7yB,KAAK+E,GACrfA,EAAE4tB,IAAI,KAAK7tB,EAAEC,EAAEquB,GAAG,GAAG4S,GAAGj8B,KAAK,KAAKlF,KAAKE,EAzK+F,SAAYF,GAAG,OAAOA,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,GAAG,KAAK,EAAE,OAAO,GAAG,QAAQ,MAAMmB,MAAM+B,EAAE,IAAIlD,KAyKxTwhC,CAAGvhC,GAAGC,EAAEquB,GAAGruB,EAAEuhC,GAAGv8B,KAAK,KAAKlF,KAAKA,EAAEuhC,iBAAiBthC,EAAED,EAAEqhC,aAAanhC,GAC5G,SAASuhC,GAAGzhC,GAAiB,GAAd4gC,IAAI,EAAEE,GAAGD,GAAG,EAAK,KAAO,GAAFrB,IAAM,MAAMr+B,MAAM+B,EAAE,MAAM,IAAIjD,EAAED,EAAEqhC,aAAa,GAAGK,MAAM1hC,EAAEqhC,eAAephC,EAAE,OAAO,KAAK,IAAIC,EAAE0Z,GAAG5Z,EAAEA,IAAIk3B,GAAEqF,GAAE,GAAG,GAAG,IAAIr8B,EAAE,OAAO,KAAK,IAAI8B,EAAE9B,EAAM6B,EAAEy9B,GAAEA,IAAG,GAAG,IAAIn9B,EAAEs/B,KAAkC,IAA1BzK,KAAIl3B,GAAGu8B,KAAIv6B,IAAEi+B,KAAK2B,GAAG5hC,EAAEgC,MAAM,IAAI6/B,KAAK,MAAM,MAAM3/B,GAAG4/B,GAAG9hC,EAAEkC,GAAgE,GAApD8sB,KAAKsQ,GAAG99B,QAAQa,EAAEm9B,GAAEz9B,EAAE,OAAO09B,GAAEz9B,EAAE,GAAGk1B,GAAE,KAAKqF,GAAE,EAAEv6B,EAAEo6B,IAAM,KAAKyD,GAAGxD,IAAIuF,GAAG5hC,EAAE,QAAQ,GAAG,IAAIgC,EAAE,CAAyF,GAAxF,IAAIA,IAAIw9B,IAAG,GAAGx/B,EAAE4X,UAAU5X,EAAE4X,SAAQ,EAAGkT,GAAG9qB,EAAE6X,gBAAwB,KAAR3X,EAAEka,GAAGpa,MAAWgC,EAAE+/B,GAAG/hC,EAAEE,KAAQ,IAAI8B,EAAE,MAAM/B,EAAE2/B,GAAGgC,GAAG5hC,EAAE,GAAGs8B,GAAGt8B,EAAEE,GAAGkhC,GAAGphC,EAAEgD,MAAK/C,EAC3c,OAD6cD,EAAEgiC,aACrfhiC,EAAEwB,QAAQ2T,UAAUnV,EAAEiiC,cAAc/hC,EAAS8B,GAAG,KAAK,EAAE,KAAK,EAAE,MAAMb,MAAM+B,EAAE,MAAM,KAAK,EACI,KAAK,EAAEg/B,GAAGliC,GAAG,MADH,KAAK,EAAU,GAARs8B,GAAGt8B,EAAEE,IAAS,SAAFA,KAAcA,GAAiB,IAAb8B,EAAEg9B,GAAG,IAAIh8B,MAAU,CAAC,GAAG,IAAI4W,GAAG5Z,EAAE,GAAG,MAAyB,KAAnB+B,EAAE/B,EAAE+Z,gBAAqB7Z,KAAKA,EAAE,CAACkxB,KAAKpxB,EAAEga,aAAaha,EAAE+Z,eAAehY,EAAE,MAAM/B,EAAEmiC,cAAczX,GAAGwX,GAAGh9B,KAAK,KAAKlF,GAAGgC,GAAG,MAAMkgC,GAAGliC,GAAG,MAAM,KAAK,EAAU,GAARs8B,GAAGt8B,EAAEE,IAAS,QAAFA,KAAaA,EAAE,MAAqB,IAAf8B,EAAEhC,EAAEya,WAAe1Y,GAAG,EAAE,EAAE7B,GAAG,CAAC,IAAIiC,EAAE,GAAG8X,GAAG/Z,GAAGmC,EAAE,GAAGF,GAAEA,EAAEH,EAAEG,IAAKJ,IAAIA,EAAEI,GAAGjC,IAAImC,EACjZ,GADmZnC,EAAE6B,EAClZ,IAD4Z7B,GAAG,KAAXA,EAAE8C,KAAI9C,GAAW,IAAI,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKA,EAAE,KAAK,IAAIA,EAAE,IAAI,KAClfA,EAAE,KAAK,KAAKk/B,GAAGl/B,EAAE,OAAOA,GAAU,CAACF,EAAEmiC,cAAczX,GAAGwX,GAAGh9B,KAAK,KAAKlF,GAAGE,GAAG,MAAMgiC,GAAGliC,GAAG,MAAyB,QAAQ,MAAMmB,MAAM+B,EAAE,OAAkB,OAAVk+B,GAAGphC,EAAEgD,MAAYhD,EAAEqhC,eAAephC,EAAEwhC,GAAGv8B,KAAK,KAAKlF,GAAG,KAAK,SAASs8B,GAAGt8B,EAAEC,GAAuD,IAApDA,IAAI6/B,GAAG7/B,IAAIo8B,GAAGr8B,EAAE+Z,gBAAgB9Z,EAAED,EAAEga,cAAc/Z,EAAMD,EAAEA,EAAEshC,gBAAgB,EAAErhC,GAAG,CAAC,IAAIC,EAAE,GAAG+Z,GAAGha,GAAG+B,EAAE,GAAG9B,EAAEF,EAAEE,IAAI,EAAED,IAAI+B,GAC1U,SAASm/B,GAAGnhC,GAAG,GAAG,KAAO,GAAFw/B,IAAM,MAAMr+B,MAAM+B,EAAE,MAAW,GAALw+B,KAAQ1hC,IAAIk3B,IAAG,KAAKl3B,EAAE8Z,aAAayiB,IAAG,CAAC,IAAIt8B,EAAEs8B,GAAMr8B,EAAE6hC,GAAG/hC,EAAEC,GAAG,KAAK4/B,GAAGxD,MAAgBn8B,EAAE6hC,GAAG/hC,EAAfC,EAAE2Z,GAAG5Z,EAAEC,UAA6BC,EAAE6hC,GAAG/hC,EAAfC,EAAE2Z,GAAG5Z,EAAE,IAAgH,GAAnG,IAAIA,EAAE2K,KAAK,IAAIzK,IAAIs/B,IAAG,GAAGx/B,EAAE4X,UAAU5X,EAAE4X,SAAQ,EAAGkT,GAAG9qB,EAAE6X,gBAAwB,KAAR5X,EAAEma,GAAGpa,MAAWE,EAAE6hC,GAAG/hC,EAAEC,KAAQ,IAAIC,EAAE,MAAMA,EAAE0/B,GAAGgC,GAAG5hC,EAAE,GAAGs8B,GAAGt8B,EAAEC,GAAGmhC,GAAGphC,EAAEgD,MAAK9C,EAAuE,OAArEF,EAAEgiC,aAAahiC,EAAEwB,QAAQ2T,UAAUnV,EAAEiiC,cAAchiC,EAAEiiC,GAAGliC,GAAGohC,GAAGphC,EAAEgD,MAAY,KACnR,SAASo/B,GAAGpiC,EAAEC,GAAG,IAAIC,EAAEs/B,GAAEA,IAAG,EAAE,IAAI,OAAOx/B,EAAEC,GAAb,QAA4B,KAAJu/B,GAAEt/B,KAAU+/B,KAAKzR,OAAO,SAAS6T,GAAGriC,EAAEC,GAAG,IAAIC,EAAEs/B,GAAEA,KAAI,EAAEA,IAAG,EAAE,IAAI,OAAOx/B,EAAEC,GAAb,QAA4B,KAAJu/B,GAAEt/B,KAAU+/B,KAAKzR,OAAO,SAASmL,GAAG35B,EAAEC,GAAGyB,GAAEi+B,GAAGD,IAAIA,IAAIz/B,EAAE4/B,IAAI5/B,EAAE,SAASw8B,KAAKiD,GAAGC,GAAGn+B,QAAQC,GAAEk+B,IAC5V,SAASiC,GAAG5hC,EAAEC,GAAGD,EAAEgiC,aAAa,KAAKhiC,EAAEiiC,cAAc,EAAE,IAAI/hC,EAAEF,EAAEmiC,cAAiD,IAAlC,IAAIjiC,IAAIF,EAAEmiC,eAAe,EAAEvX,GAAG1qB,IAAO,OAAOu/B,GAAE,IAAIv/B,EAAEu/B,GAAErqB,OAAO,OAAOlV,GAAG,CAAC,IAAI8B,EAAE9B,EAAE,OAAO8B,EAAE2I,KAAK,KAAK,EAA6B,QAA3B3I,EAAEA,EAAES,KAAKwpB,yBAA4B,IAASjqB,GAAGkqB,KAAK,MAAM,KAAK,EAAE8H,KAAKvyB,GAAEoB,IAAGpB,GAAEmB,IAAGsyB,KAAK,MAAM,KAAK,EAAEhB,GAAGlyB,GAAG,MAAM,KAAK,EAAEgyB,KAAK,MAAM,KAAK,GAAc,KAAK,GAAGvyB,GAAE0B,IAAG,MAAM,KAAK,GAAG8rB,GAAGjtB,GAAG,MAAM,KAAK,GAAG,KAAK,GAAGy6B,KAAKv8B,EAAEA,EAAEkV,OAAO8hB,GAAEl3B,EAAEy/B,GAAE3M,GAAG9yB,EAAEwB,QAAQ,MAAM+6B,GAAEmD,GAAGG,GAAG5/B,EAAEm8B,GAAE,EAAEwD,GAAG,KAAKE,GAAGzD,GAAGvL,GAAG,EACvc,SAASgR,GAAG9hC,EAAEC,GAAG,OAAE,CAAC,IAAIC,EAAEu/B,GAAE,IAAuB,GAAnBzQ,KAAKoG,GAAG5zB,QAAQu0B,GAAMR,GAAG,CAAC,IAAI,IAAIvzB,EAAEwB,GAAE+R,cAAc,OAAOvT,GAAG,CAAC,IAAID,EAAEC,EAAEk0B,MAAM,OAAOn0B,IAAIA,EAAEouB,QAAQ,MAAMnuB,EAAEA,EAAE/G,KAAKs6B,IAAG,EAAyC,GAAtCD,GAAG,EAAE5xB,GAAED,GAAED,GAAE,KAAKgyB,IAAG,EAAG+J,GAAG/9B,QAAQ,KAAQ,OAAOtB,GAAG,OAAOA,EAAEkV,OAAO,CAACgnB,GAAE,EAAEwD,GAAG3/B,EAAEw/B,GAAE,KAAK,MAAMz/B,EAAE,CAAC,IAAIqC,EAAErC,EAAEmC,EAAEjC,EAAEkV,OAAOlT,EAAEhC,EAAE+B,EAAEhC,EAAoD,GAAlDA,EAAEs8B,GAAEr6B,EAAEmT,OAAO,KAAKnT,EAAE0wB,YAAY1wB,EAAEwwB,WAAW,KAAQ,OAAOzwB,GAAG,kBAAkBA,GAAG,oBAAoBA,EAAEpF,KAAK,CAAC,IAAIoC,EAAEgD,EAAE,GAAG,KAAY,EAAPC,EAAE8wB,MAAQ,CAAC,IAAIx3B,EAAE0G,EAAEiT,UAAU3Z,GAAG0G,EAAE4tB,YAAYt0B,EAAEs0B,YAAY5tB,EAAEqT,cAAc/Z,EAAE+Z,cAAcrT,EAAEqtB,MAAM/zB,EAAE+zB,QACpfrtB,EAAE4tB,YAAY,KAAK5tB,EAAEqT,cAAc,MAAM,IAAInV,EAAE,KAAe,EAAV+C,GAAE3B,SAAWtC,EAAEiD,EAAE,EAAE,CAAC,IAAIzB,EAAE,GAAGA,EAAE,KAAKxB,EAAEyL,IAAI,CAAC,IAAI7K,EAAEZ,EAAEqW,cAAc,GAAG,OAAOzV,EAAEY,EAAE,OAAOZ,EAAE0V,eAAqB,CAAC,IAAI3V,EAAEX,EAAEk1B,cAAc1zB,OAAE,IAASb,EAAE86B,YAAY,IAAK96B,EAAE+6B,6BAA8Bx6B,IAAS,GAAGM,EAAE,CAAC,IAAIX,EAAEb,EAAE4wB,YAAY,GAAG,OAAO/vB,EAAE,CAAC,IAAIL,EAAE,IAAI+G,IAAI/G,EAAEmH,IAAI5H,GAAGC,EAAE4wB,YAAYpwB,OAAOK,EAAE8G,IAAI5H,GAAG,GAAG,KAAY,EAAPC,EAAE8zB,MAAQ,CAA2C,GAA1C9zB,EAAEmW,OAAO,GAAGnT,EAAEmT,OAAO,MAAMnT,EAAEmT,QAAQ,KAAQ,IAAInT,EAAEyI,IAAI,GAAG,OAAOzI,EAAEiT,UAAUjT,EAAEyI,IAAI,OAAO,CAAC,IAAInL,EAAE8wB,IAAI,EAAE,GAAG9wB,EAAEmL,IAAI,EAAEgmB,GAAGzuB,EAAE1C,GAAG0C,EAAEqtB,OAAO,EAAE,MAAMvvB,EAAEiC,OAC5f,EAAOC,EAAEjC,EAAE,IAAIX,EAAE+C,EAAEigC,UAA+G,GAArG,OAAOhjC,GAAGA,EAAE+C,EAAEigC,UAAU,IAAIxF,GAAG76B,EAAE,IAAIwE,IAAInH,EAAEgL,IAAIrL,EAAEgD,SAAgB,KAAXA,EAAE3C,EAAE8L,IAAInM,MAAgBgD,EAAE,IAAIwE,IAAInH,EAAEgL,IAAIrL,EAAEgD,KAASA,EAAEgnB,IAAI/mB,GAAG,CAACD,EAAE4E,IAAI3E,GAAG,IAAIvC,EAAE4iC,GAAGr9B,KAAK,KAAK7C,EAAEpD,EAAEiD,GAAGjD,EAAEpC,KAAK8C,EAAEA,GAAGT,EAAEmW,OAAO,KAAKnW,EAAEqwB,MAAMtvB,EAAE,MAAMD,EAAEd,EAAEA,EAAEkW,aAAa,OAAOlW,GAAG+C,EAAEd,OAAO0J,EAAG3I,EAAEO,OAAO,qBAAqB,yLAAyL,IAAI25B,KAAIA,GAAE,GAAGn6B,EAAE06B,GAAG16B,EAAEC,GAAGhD,EACpfiD,EAAE,EAAE,CAAC,OAAOjD,EAAEyL,KAAK,KAAK,EAAEtI,EAAEJ,EAAE/C,EAAEmW,OAAO,KAAKpV,IAAIA,EAAEf,EAAEqwB,OAAOtvB,EAAkB2wB,GAAG1xB,EAAb89B,GAAG99B,EAAEmD,EAAEpC,IAAW,MAAMD,EAAE,KAAK,EAAEqC,EAAEJ,EAAE,IAAIgB,EAAE/D,EAAEuD,KAAKW,EAAElE,EAAEwU,UAAU,GAAG,KAAa,GAARxU,EAAEmW,SAAY,oBAAoBpS,EAAEi3B,0BAA0B,OAAO92B,GAAG,oBAAoBA,EAAEi6B,oBAAoB,OAAOC,KAAKA,GAAGrU,IAAI7lB,KAAK,CAAClE,EAAEmW,OAAO,KAAKpV,IAAIA,EAAEf,EAAEqwB,OAAOtvB,EAAkB2wB,GAAG1xB,EAAbk+B,GAAGl+B,EAAEmD,EAAEpC,IAAW,MAAMD,GAAGd,EAAEA,EAAEkW,aAAa,OAAOlW,GAAGsjC,GAAGtiC,GAAG,MAAMuiC,GAAIxiC,EAAEwiC,EAAGhD,KAAIv/B,GAAG,OAAOA,IAAIu/B,GAAEv/B,EAAEA,EAAEkV,QAAQ,SAAS,OAC/a,SAASusB,KAAK,IAAI3hC,EAAEs/B,GAAG99B,QAAsB,OAAd89B,GAAG99B,QAAQu0B,GAAU,OAAO/1B,EAAE+1B,GAAG/1B,EAAE,SAAS+hC,GAAG/hC,EAAEC,GAAG,IAAIC,EAAEs/B,GAAEA,IAAG,GAAG,IAAIx9B,EAAE2/B,KAA2B,IAAtBzK,KAAIl3B,GAAGu8B,KAAIt8B,GAAG2hC,GAAG5hC,EAAEC,KAAM,IAAIyiC,KAAK,MAAM,MAAM3gC,GAAG+/B,GAAG9hC,EAAE+B,GAAkC,GAAtBitB,KAAKwQ,GAAEt/B,EAAEo/B,GAAG99B,QAAQQ,EAAK,OAAOy9B,GAAE,MAAMt+B,MAAM+B,EAAE,MAAiB,OAAXg0B,GAAE,KAAKqF,GAAE,EAASH,GAAE,SAASsG,KAAK,KAAK,OAAOjD,IAAGkD,GAAGlD,IAAG,SAASoC,KAAK,KAAK,OAAOpC,KAAI1S,MAAM4V,GAAGlD,IAAG,SAASkD,GAAG3iC,GAAG,IAAIC,EAAEigC,GAAGlgC,EAAEmV,UAAUnV,EAAE0/B,IAAI1/B,EAAEo0B,cAAcp0B,EAAE40B,aAAa,OAAO30B,EAAEuiC,GAAGxiC,GAAGy/B,GAAEx/B,EAAEs/B,GAAG/9B,QAAQ,KAC5a,SAASghC,GAAGxiC,GAAG,IAAIC,EAAED,EAAE,EAAE,CAAC,IAAIE,EAAED,EAAEkV,UAAqB,GAAXnV,EAAEC,EAAEmV,OAAU,KAAa,KAARnV,EAAEoV,OAAY,CAAc,GAAG,QAAhBnV,EAAE07B,GAAG17B,EAAED,EAAEy/B,KAAqB,YAAJD,GAAEv/B,GAAa,GAAG,MAAPA,EAAED,GAAY0K,KAAK,KAAKzK,EAAEyK,KAAK,OAAOzK,EAAEqV,eAAe,KAAQ,WAAHmqB,KAAgB,KAAY,EAAPx/B,EAAE8yB,MAAQ,CAAC,IAAI,IAAIhxB,EAAE,EAAED,EAAE7B,EAAEyV,MAAM,OAAO5T,GAAGC,GAAGD,EAAEwtB,MAAMxtB,EAAEotB,WAAWptB,EAAEA,EAAE6T,QAAQ1V,EAAEivB,WAAWntB,EAAE,OAAOhC,GAAG,KAAa,KAARA,EAAEqV,SAAc,OAAOrV,EAAE4yB,cAAc5yB,EAAE4yB,YAAY3yB,EAAE2yB,aAAa,OAAO3yB,EAAEyyB,aAAa,OAAO1yB,EAAE0yB,aAAa1yB,EAAE0yB,WAAWC,WAAW1yB,EAAE2yB,aAAa5yB,EAAE0yB,WAAWzyB,EAAEyyB,YAAY,EAAEzyB,EAAEoV,QAAQ,OAC/erV,EAAE0yB,WAAW1yB,EAAE0yB,WAAWC,WAAW1yB,EAAED,EAAE4yB,YAAY3yB,EAAED,EAAE0yB,WAAWzyB,QAAQ,CAAS,GAAG,QAAXC,EAAEw8B,GAAGz8B,IAAkC,OAAlBC,EAAEmV,OAAO,UAAKoqB,GAAEv/B,GAAS,OAAOF,IAAIA,EAAE4yB,YAAY5yB,EAAE0yB,WAAW,KAAK1yB,EAAEqV,OAAO,MAAkB,GAAG,QAAfpV,EAAEA,EAAE2V,SAAyB,YAAJ6pB,GAAEx/B,GAASw/B,GAAEx/B,EAAED,QAAQ,OAAOC,GAAG,IAAIm8B,KAAIA,GAAE,GAAG,SAAS8F,GAAGliC,GAAG,IAAIC,EAAEmuB,KAA8B,OAAzBE,GAAG,GAAGsU,GAAG19B,KAAK,KAAKlF,EAAEC,IAAW,KACtT,SAAS2iC,GAAG5iC,EAAEC,GAAG,GAAGyhC,WAAW,OAAOrB,IAAI,GAAG,KAAO,GAAFb,IAAM,MAAMr+B,MAAM+B,EAAE,MAAM,IAAIhD,EAAEF,EAAEgiC,aAAa,GAAG,OAAO9hC,EAAE,OAAO,KAA2C,GAAtCF,EAAEgiC,aAAa,KAAKhiC,EAAEiiC,cAAc,EAAK/hC,IAAIF,EAAEwB,QAAQ,MAAML,MAAM+B,EAAE,MAAMlD,EAAEqhC,aAAa,KAAK,IAAIr/B,EAAE9B,EAAEqvB,MAAMrvB,EAAEivB,WAAWptB,EAAEC,EAAEK,EAAErC,EAAE6Z,cAAc9X,EAAE/B,EAAE6Z,aAAa9X,EAAE/B,EAAE+Z,eAAe,EAAE/Z,EAAEga,YAAY,EAAEha,EAAE8Z,cAAc/X,EAAE/B,EAAEg3B,kBAAkBj1B,EAAE/B,EAAEka,gBAAgBnY,EAAEA,EAAE/B,EAAEma,cAAc,IAAI,IAAIhY,EAAEnC,EAAEya,WAAWvY,EAAElC,EAAEshC,gBAAgB,EAAEj/B,GAAG,CAAC,IAAIJ,EAAE,GAAGgY,GAAG5X,GAAGpD,EAAE,GAAGgD,EAAEF,EAAEE,GAAG,EAAEE,EAAEF,IAAI,EAAEC,EAAED,IAAI,EAAEI,IAAIpD,EACnV,GADqV,OACjfwhC,IAAI,KAAO,GAAFz+B,IAAOy+B,GAAGxX,IAAIjpB,IAAIygC,GAAGrpB,OAAOpX,GAAGA,IAAIk3B,KAAIuI,GAAEvI,GAAE,KAAKqF,GAAE,GAAG,EAAEr8B,EAAEmV,MAAM,OAAOnV,EAAEwyB,YAAYxyB,EAAEwyB,WAAWC,WAAWzyB,EAAE8B,EAAE9B,EAAE0yB,aAAa5wB,EAAE9B,EAAE8B,EAAE9B,EAAE0yB,YAAe,OAAO5wB,EAAE,CAAwC,GAAvCD,EAAEy9B,GAAEA,IAAG,GAAGD,GAAG/9B,QAAQ,KAAK4oB,GAAGjP,GAAakM,GAAVllB,EAAE8kB,MAAc,CAAC,GAAG,mBAAmB9kB,EAAED,EAAE,CAAC2lB,MAAM1lB,EAAE2lB,eAAeC,IAAI5lB,EAAE6lB,mBAAmBhoB,EAAE,GAAGkC,GAAGA,EAAEC,EAAEyK,gBAAgB1K,EAAEgmB,aAAanhB,QAAQ9H,EAAEiD,EAAEimB,cAAcjmB,EAAEimB,iBAAiB,IAAIlpB,EAAE4jC,WAAW,CAAC3gC,EAAEjD,EAAEgpB,WAAW5lB,EAAEpD,EAAEmpB,aAAanmB,EAAEhD,EAAEopB,UAAUppB,EAAEA,EAAEqpB,YAAY,IAAIpmB,EAAEuM,SAASxM,EAAEwM,SAAS,MAAMg0B,GAAIvgC,EAAE,KACnf,MAAMlC,EAAE,IAAIxE,EAAE,EAAE4E,GAAG,EAAElB,GAAG,EAAEwB,EAAE,EAAEZ,EAAE,EAAED,EAAEsC,EAAEpC,EAAE,KAAKE,EAAE,OAAO,CAAC,IAAI,IAAIP,EAAKG,IAAIqC,GAAG,IAAIG,GAAG,IAAIxC,EAAE4O,WAAWrO,EAAE5E,EAAE6G,GAAGxC,IAAIoC,GAAG,IAAIhD,GAAG,IAAIY,EAAE4O,WAAWvP,EAAE1D,EAAEyD,GAAG,IAAIY,EAAE4O,WAAWjT,GAAGqE,EAAE6O,UAAUzU,QAAW,QAAQyF,EAAEG,EAAEqO,aAAkBnO,EAAEF,EAAEA,EAAEH,EAAE,OAAO,CAAC,GAAGG,IAAIsC,EAAE,MAAMlC,EAA8C,GAA5CF,IAAImC,KAAKxB,IAAI2B,IAAIjC,EAAE5E,GAAGuE,IAAIkC,KAAKnC,IAAIb,IAAIC,EAAE1D,GAAM,QAAQkE,EAAEG,EAAEgnB,aAAa,MAAU9mB,GAAJF,EAAEE,GAAMqT,WAAWvT,EAAEH,EAAEwC,GAAG,IAAI9B,IAAI,IAAIlB,EAAE,KAAK,CAAC2oB,MAAMznB,EAAE2nB,IAAI7oB,QAAQgD,EAAE,KAAKA,EAAEA,GAAG,CAAC2lB,MAAM,EAAEE,IAAI,QAAQ7lB,EAAE,KAAKmoB,GAAG,CAACyY,YAAY3gC,EAAE4gC,eAAe7gC,GAAGiZ,IAAG,EAAG4lB,GAAG,KAAKC,IAAG,EAAGb,GAAEn+B,EAAE,GAAG,IAAIghC,KAAK,MAAMP,GAAI,GAAG,OACvgBtC,GAAE,MAAMh/B,MAAM+B,EAAE,MAAMy6B,GAAGwC,GAAEsC,GAAItC,GAAEA,GAAExN,kBAAiB,OAAOwN,IAAGY,GAAG,KAAKZ,GAAEn+B,EAAE,GAAG,IAAI,IAAIG,EAAEnC,EAAE,OAAOmgC,IAAG,CAAC,IAAI3gC,EAAE2gC,GAAE9qB,MAA+B,GAAvB,GAAF7V,GAAM+O,GAAG4xB,GAAEzsB,UAAU,IAAS,IAAFlU,EAAM,CAAC,IAAIF,EAAE6gC,GAAEhrB,UAAU,GAAG,OAAO7V,EAAE,CAAC,IAAIK,EAAEL,EAAEqC,IAAI,OAAOhC,IAAI,oBAAoBA,EAAEA,EAAE,MAAMA,EAAE6B,QAAQ,OAAO,OAAS,KAAFhC,GAAQ,KAAK,EAAEk/B,GAAGyB,IAAGA,GAAE9qB,QAAQ,EAAE,MAAM,KAAK,EAAEqpB,GAAGyB,IAAGA,GAAE9qB,QAAQ,EAAE0pB,GAAGoB,GAAEhrB,UAAUgrB,IAAG,MAAM,KAAK,KAAKA,GAAE9qB,QAAQ,KAAK,MAAM,KAAK,KAAK8qB,GAAE9qB,QAAQ,KAAK0pB,GAAGoB,GAAEhrB,UAAUgrB,IAAG,MAAM,KAAK,EAAEpB,GAAGoB,GAAEhrB,UAAUgrB,IAAG,MAAM,KAAK,EAAM5B,GAAGp8B,EAAPD,EAAEi+B,IAAU,IAAIr+B,EAAEI,EAAEiT,UAAUqpB,GAAGt8B,GAAG,OACnfJ,GAAG08B,GAAG18B,GAAGq+B,GAAEA,GAAExN,YAAY,MAAM8P,GAAI,GAAG,OAAOtC,GAAE,MAAMh/B,MAAM+B,EAAE,MAAMy6B,GAAGwC,GAAEsC,GAAItC,GAAEA,GAAExN,kBAAiB,OAAOwN,IAAkD,GAA/CxgC,EAAE0qB,GAAG/qB,EAAE2nB,KAAKznB,EAAEG,EAAEmjC,YAAY3gC,EAAExC,EAAEojC,eAAkBzjC,IAAIE,GAAGA,GAAGA,EAAEoN,eAAeka,GAAGtnB,EAAEoN,cAAcknB,gBAAgBt0B,GAAG,CAAC,OAAO2C,GAAGklB,GAAG7nB,KAAKF,EAAE6C,EAAE0lB,WAAc,KAARloB,EAAEwC,EAAE4lB,OAAiBpoB,EAAEL,GAAG,mBAAmBE,GAAGA,EAAEsoB,eAAexoB,EAAEE,EAAEwoB,aAAatN,KAAKuoB,IAAItjC,EAAEH,EAAEpE,MAAMnB,UAAU0F,GAAGL,EAAEE,EAAEoN,eAAe5F,WAAW1H,EAAE4oB,aAAanhB,QAASohB,eAAexoB,EAAEA,EAAEwoB,eAAejmB,EAAE1C,EAAEiO,YAAYxT,OAAO6H,EAAE4Y,KAAKuoB,IAAI9gC,EAAE0lB,MAAM3lB,GAAGC,OAAE,IACpfA,EAAE4lB,IAAIjmB,EAAE4Y,KAAKuoB,IAAI9gC,EAAE4lB,IAAI7lB,IAAIvC,EAAEujC,QAAQphC,EAAEK,IAAID,EAAEC,EAAEA,EAAEL,EAAEA,EAAEI,GAAGA,EAAEwkB,GAAGlnB,EAAEsC,GAAGO,EAAEqkB,GAAGlnB,EAAE2C,GAAGD,GAAGG,IAAI,IAAI1C,EAAEkjC,YAAYljC,EAAEsoB,aAAa/lB,EAAEykB,MAAMhnB,EAAEyoB,eAAelmB,EAAE0kB,QAAQjnB,EAAE0oB,YAAYhmB,EAAEskB,MAAMhnB,EAAE2oB,cAAcjmB,EAAEukB,WAAUtnB,EAAEA,EAAE6jC,eAAgBC,SAASlhC,EAAEykB,KAAKzkB,EAAE0kB,QAAQjnB,EAAE0jC,kBAAkBvhC,EAAEK,GAAGxC,EAAE2jC,SAAShkC,GAAGK,EAAEujC,OAAO7gC,EAAEskB,KAAKtkB,EAAEukB,UAAUtnB,EAAEikC,OAAOlhC,EAAEskB,KAAKtkB,EAAEukB,QAAQjnB,EAAE2jC,SAAShkC,OAAQA,EAAE,GAAG,IAAIK,EAAEH,EAAEG,EAAEA,EAAEyT,YAAY,IAAIzT,EAAE8O,UAAUnP,EAAEnE,KAAK,CAAC8hC,QAAQt9B,EAAE6jC,KAAK7jC,EAAE8jC,WAAWC,IAAI/jC,EAAEgkC,YAAmD,IAAvC,oBAAoBnkC,EAAEy+B,OAAOz+B,EAAEy+B,QAAYz+B,EACrf,EAAEA,EAAEF,EAAErF,OAAOuF,KAAIG,EAAEL,EAAEE,IAAKy9B,QAAQwG,WAAW9jC,EAAE6jC,KAAK7jC,EAAEs9B,QAAQ0G,UAAUhkC,EAAE+jC,IAAIvoB,KAAKiP,GAAGC,GAAGD,GAAG,KAAKpqB,EAAEwB,QAAQtB,EAAEigC,GAAEn+B,EAAE,GAAG,IAAI,IAAIxC,EAAEQ,EAAE,OAAOmgC,IAAG,CAAC,IAAIl9B,EAAEk9B,GAAE9qB,MAAgC,GAAxB,GAAFpS,GAAM66B,GAAGt+B,EAAE2gC,GAAEhrB,UAAUgrB,IAAQ,IAAFl9B,EAAM,CAAC3D,OAAE,EAAO,IAAI8D,EAAE+8B,GAAEx+B,IAAI,GAAG,OAAOyB,EAAE,CAAC,IAAIT,EAAEw9B,GAAEzsB,UAAiBysB,GAAEx1B,IAA8BrL,EAAEqD,EAAE,oBAAoBS,EAAEA,EAAE9D,GAAG8D,EAAE5B,QAAQlC,GAAG6gC,GAAEA,GAAExN,YAAY,MAAM8P,GAAI,GAAG,OAAOtC,GAAE,MAAMh/B,MAAM+B,EAAE,MAAMy6B,GAAGwC,GAAEsC,GAAItC,GAAEA,GAAExN,kBAAiB,OAAOwN,IAAGA,GAAE,KAAKpS,KAAKyR,GAAEz9B,OAAO/B,EAAEwB,QAAQtB,EAAE,GAAGkgC,GAAGA,IAAG,EAAGC,GAAGrgC,EAAEsgC,GAAGrgC,OAAO,IAAIkgC,GAAEn+B,EAAE,OAAOm+B,IAAGlgC,EACpfkgC,GAAExN,WAAWwN,GAAExN,WAAW,KAAa,EAARwN,GAAE9qB,SAAUpS,EAAEk9B,IAAIvqB,QAAQ,KAAK3S,EAAEyQ,UAAU,MAAMysB,GAAElgC,EAAqF,GAAlE,KAAjB+B,EAAEhC,EAAE6Z,gBAAqByjB,GAAG,MAAM,IAAIt7B,EAAEhC,IAAI2gC,GAAGD,MAAMA,GAAG,EAAEC,GAAG3gC,GAAG0gC,GAAG,EAAExgC,EAAEA,EAAEwT,UAAagZ,IAAI,oBAAoBA,GAAGkX,kBAAkB,IAAIlX,GAAGkX,kBAAkBnX,GAAGvsB,OAAE,EAAO,MAAsB,GAAhBA,EAAEsB,QAAQ6T,QAAW,MAAMotB,IAAe,GAAVrB,GAAGphC,EAAEgD,MAAQk6B,GAAG,MAAMA,IAAG,EAAGl9B,EAAEm9B,GAAGA,GAAG,KAAKn9B,EAAE,OAAG,KAAO,EAAFw/B,KAAiBhR,KAAL,KACjW,SAASwU,KAAK,KAAK,OAAO7C,IAAG,CAAC,IAAIngC,EAAEmgC,GAAEhrB,UAAU6rB,IAAI,OAAOD,KAAK,KAAa,EAARZ,GAAE9qB,OAASS,GAAGqqB,GAAEY,MAAMC,IAAG,GAAI,KAAKb,GAAEx1B,KAAKw0B,GAAGn/B,EAAEmgC,KAAIrqB,GAAGqqB,GAAEY,MAAMC,IAAG,IAAK,IAAI/gC,EAAEkgC,GAAE9qB,MAAM,KAAO,IAAFpV,IAAQ29B,GAAG59B,EAAEmgC,IAAG,KAAO,IAAFlgC,IAAQmgC,KAAKA,IAAG,EAAG7R,GAAG,IAAG,WAAgB,OAALmT,KAAY,SAAQvB,GAAEA,GAAExN,YAAY,SAAS+O,KAAK,GAAG,KAAKpB,GAAG,CAAC,IAAItgC,EAAE,GAAGsgC,GAAG,GAAGA,GAAS,OAANA,GAAG,GAAUhS,GAAGtuB,EAAE6jC,IAAI,OAAM,EAAG,SAAS7F,GAAGh+B,EAAEC,GAAGsgC,GAAGplC,KAAK8E,EAAED,GAAGogC,KAAKA,IAAG,EAAG7R,GAAG,IAAG,WAAgB,OAALmT,KAAY,SAAQ,SAAS3D,GAAG/9B,EAAEC,GAAGugC,GAAGrlC,KAAK8E,EAAED,GAAGogC,KAAKA,IAAG,EAAG7R,GAAG,IAAG,WAAgB,OAALmT,KAAY,SACzd,SAASmC,KAAK,GAAG,OAAOxD,GAAG,OAAM,EAAG,IAAIrgC,EAAEqgC,GAAW,GAARA,GAAG,KAAQ,KAAO,GAAFb,IAAM,MAAMr+B,MAAM+B,EAAE,MAAM,IAAIjD,EAAEu/B,GAAEA,IAAG,GAAG,IAAIt/B,EAAEsgC,GAAGA,GAAG,GAAG,IAAI,IAAIx+B,EAAE,EAAEA,EAAE9B,EAAEjG,OAAO+H,GAAG,EAAE,CAAC,IAAID,EAAE7B,EAAE8B,GAAGK,EAAEnC,EAAE8B,EAAE,GAAGG,EAAEJ,EAAE41B,QAAyB,GAAjB51B,EAAE41B,aAAQ,EAAU,oBAAoBx1B,EAAE,IAAIA,IAAI,MAAMF,GAAG,GAAG,OAAOI,EAAE,MAAMlB,MAAM+B,EAAE,MAAMy6B,GAAGt7B,EAAEJ,IAAe,IAAX/B,EAAEqgC,GAAGA,GAAG,GAAOv+B,EAAE,EAAEA,EAAE9B,EAAEjG,OAAO+H,GAAG,EAAE,CAACD,EAAE7B,EAAE8B,GAAGK,EAAEnC,EAAE8B,EAAE,GAAG,IAAI,IAAIE,EAAEH,EAAE21B,OAAO31B,EAAE41B,QAAQz1B,IAAI,MAAMD,GAAG,GAAG,OAAOI,EAAE,MAAMlB,MAAM+B,EAAE,MAAMy6B,GAAGt7B,EAAEJ,IAAI,IAAIC,EAAElC,EAAEwB,QAAQoxB,YAAY,OAAO1wB,GAAGlC,EAAEkC,EAAEywB,WAAWzwB,EAAEywB,WAAW,KAAa,EAARzwB,EAAEmT,QAAUnT,EAAE0T,QACjf,KAAK1T,EAAEwR,UAAU,MAAMxR,EAAElC,EAAW,OAATw/B,GAAEv/B,EAAEuuB,MAAW,EAAG,SAASsV,GAAG9jC,EAAEC,EAAEC,GAAyBywB,GAAG3wB,EAAfC,EAAE+8B,GAAGh9B,EAAfC,EAAE08B,GAAGz8B,EAAED,GAAY,IAAWA,EAAEmxB,KAAe,QAAVpxB,EAAEkhC,GAAGlhC,EAAE,MAAcwa,GAAGxa,EAAE,EAAEC,GAAGmhC,GAAGphC,EAAEC,IACzI,SAAS09B,GAAG39B,EAAEC,GAAG,GAAG,IAAID,EAAE2K,IAAIm5B,GAAG9jC,EAAEA,EAAEC,QAAQ,IAAI,IAAIC,EAAEF,EAAEoV,OAAO,OAAOlV,GAAG,CAAC,GAAG,IAAIA,EAAEyK,IAAI,CAACm5B,GAAG5jC,EAAEF,EAAEC,GAAG,MAAW,GAAG,IAAIC,EAAEyK,IAAI,CAAC,IAAI3I,EAAE9B,EAAEwT,UAAU,GAAG,oBAAoBxT,EAAEuC,KAAKy3B,0BAA0B,oBAAoBl4B,EAAEq7B,oBAAoB,OAAOC,KAAKA,GAAGrU,IAAIjnB,IAAI,CAAW,IAAID,EAAEq7B,GAAGl9B,EAAnBF,EAAE28B,GAAG18B,EAAED,GAAgB,GAA4B,GAAzB2wB,GAAGzwB,EAAE6B,GAAGA,EAAEqvB,KAAkB,QAAblxB,EAAEghC,GAAGhhC,EAAE,IAAesa,GAAGta,EAAE,EAAE6B,GAAGq/B,GAAGlhC,EAAE6B,QAAQ,GAAG,oBAAoBC,EAAEq7B,oBAAoB,OAAOC,KAAKA,GAAGrU,IAAIjnB,IAAI,IAAIA,EAAEq7B,kBAAkBp9B,EAAED,GAAG,MAAMqC,IAAI,OAAOnC,EAAEA,EAAEkV,QACpd,SAASmtB,GAAGviC,EAAEC,EAAEC,GAAG,IAAI8B,EAAEhC,EAAEsiC,UAAU,OAAOtgC,GAAGA,EAAEoV,OAAOnX,GAAGA,EAAEmxB,KAAKpxB,EAAEga,aAAaha,EAAE+Z,eAAe7Z,EAAEg3B,KAAIl3B,IAAIu8B,GAAEr8B,KAAKA,IAAI,IAAIk8B,IAAG,IAAIA,KAAM,SAAFG,MAAcA,IAAG,IAAIv5B,KAAIg8B,GAAG4C,GAAG5hC,EAAE,GAAG8/B,IAAI5/B,GAAGkhC,GAAGphC,EAAEC,GAAG,SAASi/B,GAAGl/B,EAAEC,GAAG,IAAIC,EAAEF,EAAE0T,UAAU,OAAOxT,GAAGA,EAAEkX,OAAOnX,GAAO,KAAJA,EAAE,KAAmB,KAAO,GAAhBA,EAAED,EAAEgzB,OAAe/yB,EAAE,EAAE,KAAO,EAAFA,GAAKA,EAAE,KAAKmuB,KAAK,EAAE,GAAG,IAAIyS,KAAKA,GAAGhB,IAAuB,KAAnB5/B,EAAEqa,GAAG,UAAUumB,OAAY5gC,EAAE,WAAWC,EAAEkxB,KAAe,QAAVpxB,EAAEkhC,GAAGlhC,EAAEC,MAAcua,GAAGxa,EAAEC,EAAEC,GAAGkhC,GAAGphC,EAAEE,IAUjZ,SAAS6jC,GAAG/jC,EAAEC,EAAEC,EAAE8B,GAAG/E,KAAK0N,IAAI3K,EAAE/C,KAAKT,IAAI0D,EAAEjD,KAAK2Y,QAAQ3Y,KAAK0Y,MAAM1Y,KAAKmY,OAAOnY,KAAKyW,UAAUzW,KAAKwF,KAAKxF,KAAKg2B,YAAY,KAAKh2B,KAAK41B,MAAM,EAAE51B,KAAK0E,IAAI,KAAK1E,KAAK23B,aAAa30B,EAAEhD,KAAKoyB,aAAapyB,KAAKsY,cAActY,KAAK6yB,YAAY7yB,KAAKm3B,cAAc,KAAKn3B,KAAK+1B,KAAKhxB,EAAE/E,KAAKoY,MAAM,EAAEpY,KAAKy1B,WAAWz1B,KAAK21B,YAAY31B,KAAK01B,WAAW,KAAK11B,KAAKkyB,WAAWlyB,KAAKsyB,MAAM,EAAEtyB,KAAKkY,UAAU,KAAK,SAASuf,GAAG10B,EAAEC,EAAEC,EAAE8B,GAAG,OAAO,IAAI+hC,GAAG/jC,EAAEC,EAAEC,EAAE8B,GAAG,SAASs3B,GAAGt5B,GAAiB,UAAdA,EAAEA,EAAEvE,aAAuBuE,EAAEiB,kBAErd,SAAS6xB,GAAG9yB,EAAEC,GAAG,IAAIC,EAAEF,EAAEmV,UACuB,OADb,OAAOjV,IAAGA,EAAEw0B,GAAG10B,EAAE2K,IAAI1K,EAAED,EAAExD,IAAIwD,EAAEgzB,OAAQC,YAAYjzB,EAAEizB,YAAY/yB,EAAEuC,KAAKzC,EAAEyC,KAAKvC,EAAEwT,UAAU1T,EAAE0T,UAAUxT,EAAEiV,UAAUnV,EAAEA,EAAEmV,UAAUjV,IAAIA,EAAE00B,aAAa30B,EAAEC,EAAEuC,KAAKzC,EAAEyC,KAAKvC,EAAEmV,MAAM,EAAEnV,EAAEyyB,WAAW,KAAKzyB,EAAE0yB,YAAY,KAAK1yB,EAAEwyB,WAAW,MAAMxyB,EAAEivB,WAAWnvB,EAAEmvB,WAAWjvB,EAAEqvB,MAAMvvB,EAAEuvB,MAAMrvB,EAAEyV,MAAM3V,EAAE2V,MAAMzV,EAAEk0B,cAAcp0B,EAAEo0B,cAAcl0B,EAAEqV,cAAcvV,EAAEuV,cAAcrV,EAAE4vB,YAAY9vB,EAAE8vB,YAAY7vB,EAAED,EAAEqvB,aAAanvB,EAAEmvB,aAAa,OAAOpvB,EAAE,KAAK,CAACsvB,MAAMtvB,EAAEsvB,MAAMD,aAAarvB,EAAEqvB,cAC3epvB,EAAE0V,QAAQ5V,EAAE4V,QAAQ1V,EAAE2yB,MAAM7yB,EAAE6yB,MAAM3yB,EAAEyB,IAAI3B,EAAE2B,IAAWzB,EACvD,SAASgzB,GAAGlzB,EAAEC,EAAEC,EAAE8B,EAAED,EAAEM,GAAG,IAAIF,EAAE,EAAM,GAAJH,EAAEhC,EAAK,oBAAoBA,EAAEs5B,GAAGt5B,KAAKmC,EAAE,QAAQ,GAAG,kBAAkBnC,EAAEmC,EAAE,OAAOnC,EAAE,OAAOA,GAAG,KAAK4I,EAAG,OAAOyqB,GAAGnzB,EAAEkC,SAASL,EAAEM,EAAEpC,GAAG,KAAKuJ,EAAGrH,EAAE,EAAEJ,GAAG,GAAG,MAAM,KAAK8G,EAAG1G,EAAE,EAAEJ,GAAG,EAAE,MAAM,KAAK+G,EAAG,OAAO9I,EAAE00B,GAAG,GAAGx0B,EAAED,EAAI,EAAF8B,IAAOkxB,YAAYnqB,EAAG9I,EAAEyC,KAAKqG,EAAG9I,EAAEuvB,MAAMltB,EAAErC,EAAE,KAAKkJ,EAAG,OAAOlJ,EAAE00B,GAAG,GAAGx0B,EAAED,EAAE8B,IAAKU,KAAKyG,EAAGlJ,EAAEizB,YAAY/pB,EAAGlJ,EAAEuvB,MAAMltB,EAAErC,EAAE,KAAKmJ,EAAG,OAAOnJ,EAAE00B,GAAG,GAAGx0B,EAAED,EAAE8B,IAAKkxB,YAAY9pB,EAAGnJ,EAAEuvB,MAAMltB,EAAErC,EAAE,KAAKyJ,EAAG,OAAOsxB,GAAG76B,EAAE6B,EAAEM,EAAEpC,GAAG,KAAKyJ,EAAG,OAAO1J,EAAE00B,GAAG,GAAGx0B,EAAED,EAAE8B,IAAKkxB,YAAYvpB,EAAG1J,EAAEuvB,MAAMltB,EAAErC,EAAE,QAAQ,GAAG,kBAChfA,GAAG,OAAOA,EAAE,OAAOA,EAAEwC,UAAU,KAAKuG,EAAG5G,EAAE,GAAG,MAAMnC,EAAE,KAAKgJ,EAAG7G,EAAE,EAAE,MAAMnC,EAAE,KAAKiJ,EAAG9G,EAAE,GAAG,MAAMnC,EAAE,KAAKoJ,EAAGjH,EAAE,GAAG,MAAMnC,EAAE,KAAKqJ,EAAGlH,EAAE,GAAGH,EAAE,KAAK,MAAMhC,EAAE,KAAKsJ,EAAGnH,EAAE,GAAG,MAAMnC,EAAE,MAAMmB,MAAM+B,EAAE,IAAI,MAAMlD,EAAEA,SAASA,EAAE,KAAuD,OAAjDC,EAAEy0B,GAAGvyB,EAAEjC,EAAED,EAAE8B,IAAKkxB,YAAYjzB,EAAEC,EAAEwC,KAAKT,EAAE/B,EAAEsvB,MAAMltB,EAASpC,EAAE,SAASozB,GAAGrzB,EAAEC,EAAEC,EAAE8B,GAA2B,OAAxBhC,EAAE00B,GAAG,EAAE10B,EAAEgC,EAAE/B,IAAKsvB,MAAMrvB,EAASF,EAAE,SAAS+6B,GAAG/6B,EAAEC,EAAEC,EAAE8B,GAA6C,OAA1ChC,EAAE00B,GAAG,GAAG10B,EAAEgC,EAAE/B,IAAKgzB,YAAYxpB,EAAGzJ,EAAEuvB,MAAMrvB,EAASF,EAAE,SAAS+yB,GAAG/yB,EAAEC,EAAEC,GAA8B,OAA3BF,EAAE00B,GAAG,EAAE10B,EAAE,KAAKC,IAAKsvB,MAAMrvB,EAASF,EAClc,SAASozB,GAAGpzB,EAAEC,EAAEC,GAA8J,OAA3JD,EAAEy0B,GAAG,EAAE,OAAO10B,EAAEoC,SAASpC,EAAEoC,SAAS,GAAGpC,EAAExD,IAAIyD,IAAKsvB,MAAMrvB,EAAED,EAAEyT,UAAU,CAACmE,cAAc7X,EAAE6X,cAAcmsB,gBAAgB,KAAK7Q,eAAenzB,EAAEmzB,gBAAuBlzB,EACrL,SAASgkC,GAAGjkC,EAAEC,EAAEC,GAAGjD,KAAK0N,IAAI1K,EAAEhD,KAAK4a,cAAc7X,EAAE/C,KAAK+kC,aAAa/kC,KAAKqlC,UAAUrlC,KAAKuE,QAAQvE,KAAK+mC,gBAAgB,KAAK/mC,KAAKklC,eAAe,EAAEllC,KAAKm9B,eAAen9B,KAAK2D,QAAQ,KAAK3D,KAAK2a,QAAQ1X,EAAEjD,KAAKokC,aAAa,KAAKpkC,KAAKskC,iBAAiB,EAAEtkC,KAAKwd,WAAWF,GAAG,GAAGtd,KAAKqkC,gBAAgB/mB,IAAI,GAAGtd,KAAKid,eAAejd,KAAKglC,cAAchlC,KAAK+5B,iBAAiB/5B,KAAK6c,aAAa7c,KAAK+c,YAAY/c,KAAK8c,eAAe9c,KAAK4c,aAAa,EAAE5c,KAAKkd,cAAcI,GAAG,GAAGtd,KAAKinC,gCAAgC,KAC7e,SAASC,GAAGnkC,EAAEC,EAAEC,GAAG,IAAI8B,EAAE,EAAE7E,UAAUlD,aAAQ,IAASkD,UAAU,GAAGA,UAAU,GAAG,KAAK,MAAM,CAACqF,SAASmG,EAAGnM,IAAI,MAAMwF,EAAE,KAAK,GAAGA,EAAEI,SAASpC,EAAE6X,cAAc5X,EAAEkzB,eAAejzB,GACxK,SAASkkC,GAAGpkC,EAAEC,EAAEC,EAAE8B,GAAG,IAAID,EAAE9B,EAAEuB,QAAQa,EAAE+uB,KAAKjvB,EAAEkvB,GAAGtvB,GAAG/B,EAAE,GAAGE,EAAE,CAAqBD,EAAE,CAAC,GAAGiV,GAA1BhV,EAAEA,EAAEixB,mBAA8BjxB,GAAG,IAAIA,EAAEyK,IAAI,MAAMxJ,MAAM+B,EAAE,MAAM,IAAIhB,EAAEhC,EAAE,EAAE,CAAC,OAAOgC,EAAEyI,KAAK,KAAK,EAAEzI,EAAEA,EAAEwR,UAAU9S,QAAQ,MAAMX,EAAE,KAAK,EAAE,GAAG+rB,GAAG9pB,EAAEO,MAAM,CAACP,EAAEA,EAAEwR,UAAU6Y,0CAA0C,MAAMtsB,GAAGiC,EAAEA,EAAEkT,aAAa,OAAOlT,GAAG,MAAMf,MAAM+B,EAAE,MAAO,GAAG,IAAIhD,EAAEyK,IAAI,CAAC,IAAI1I,EAAE/B,EAAEuC,KAAK,GAAGupB,GAAG/pB,GAAG,CAAC/B,EAAEksB,GAAGlsB,EAAE+B,EAAEC,GAAG,MAAMlC,GAAGE,EAAEgC,OAAOhC,EAAEwrB,GACrW,OADwW,OAAOzrB,EAAEW,QAAQX,EAAEW,QAAQV,EAAED,EAAEm6B,eAAel6B,GAAED,EAAEqwB,GAAGjuB,EAAEF,IAAKsuB,QAAQ,CAACwM,QAAQj9B,GAAuB,QAApBgC,OAAE,IAASA,EAAE,KAAKA,KAC1e/B,EAAEywB,SAAS1uB,GAAG2uB,GAAG5uB,EAAE9B,GAAGqxB,GAAGvvB,EAAEI,EAAEE,GAAUF,EAAE,SAASkiC,GAAGrkC,GAAe,OAAZA,EAAEA,EAAEwB,SAAcmU,OAAyB3V,EAAE2V,MAAMhL,IAAoD3K,EAAE2V,MAAMjC,WAAhF,KAA2F,SAAS4wB,GAAGtkC,EAAEC,GAAqB,GAAG,QAArBD,EAAEA,EAAEuV,gBAA2B,OAAOvV,EAAEwV,WAAW,CAAC,IAAItV,EAAEF,EAAEy6B,UAAUz6B,EAAEy6B,UAAU,IAAIv6B,GAAGA,EAAED,EAAEC,EAAED,GAAG,SAASskC,GAAGvkC,EAAEC,GAAGqkC,GAAGtkC,EAAEC,IAAID,EAAEA,EAAEmV,YAAYmvB,GAAGtkC,EAAEC,GACxV,SAASukC,GAAGxkC,EAAEC,EAAEC,GAAG,IAAI8B,EAAE,MAAM9B,GAAG,MAAMA,EAAEukC,kBAAkBvkC,EAAEukC,iBAAiBC,gBAAgB,KAAiK,GAA5JxkC,EAAE,IAAI+jC,GAAGjkC,EAAEC,EAAE,MAAMC,IAAG,IAAKA,EAAE0X,SAAS3X,EAAEy0B,GAAG,EAAE,KAAK,KAAK,IAAIz0B,EAAE,EAAE,IAAIA,EAAE,EAAE,GAAGC,EAAEsB,QAAQvB,EAAEA,EAAEyT,UAAUxT,EAAE2vB,GAAG5vB,GAAGD,EAAE2pB,IAAIzpB,EAAEsB,QAAQ6nB,GAAG,IAAIrpB,EAAEyO,SAASzO,EAAEoT,WAAWpT,GAAMgC,EAAE,IAAIhC,EAAE,EAAEA,EAAEgC,EAAE/H,OAAO+F,IAAI,CAAQ,IAAI+B,GAAX9B,EAAE+B,EAAEhC,IAAW82B,YAAY/0B,EAAEA,EAAE9B,EAAE82B,SAAS,MAAM72B,EAAEgkC,gCAAgChkC,EAAEgkC,gCAAgC,CAACjkC,EAAE8B,GAAG7B,EAAEgkC,gCAAgC/oC,KAAK8E,EAAE8B,GAAG9E,KAAK0nC,cAAczkC,EAC/R,SAAS0kC,GAAG5kC,GAAG,SAASA,GAAG,IAAIA,EAAEyO,UAAU,IAAIzO,EAAEyO,UAAU,KAAKzO,EAAEyO,WAAW,IAAIzO,EAAEyO,UAAU,iCAAiCzO,EAAE0O,YAEvT,SAASm2B,GAAG7kC,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,IAAIM,EAAEnC,EAAE4+B,oBAAoB,GAAGz8B,EAAE,CAAC,IAAIF,EAAEE,EAAEsiC,cAAc,GAAG,oBAAoB5iC,EAAE,CAAC,IAAIG,EAAEH,EAAEA,EAAE,WAAW,IAAI/B,EAAEqkC,GAAGliC,GAAGD,EAAEvG,KAAKqE,IAAIokC,GAAGnkC,EAAEkC,EAAEnC,EAAE+B,OAAO,CAAmD,GAAlDM,EAAEnC,EAAE4+B,oBAD1K,SAAY9+B,EAAEC,GAA0H,GAAvHA,IAA2DA,MAAvDA,EAAED,EAAE,IAAIA,EAAEyO,SAASzO,EAAE8zB,gBAAgB9zB,EAAEkO,WAAW,OAAa,IAAIjO,EAAEwO,WAAWxO,EAAE6kC,aAAa,qBAAwB7kC,EAAE,IAAI,IAAIC,EAAEA,EAAEF,EAAEwO,WAAWxO,EAAEmO,YAAYjO,GAAG,OAAO,IAAIskC,GAAGxkC,EAAE,EAAEC,EAAE,CAAC2X,SAAQ,QAAI,GAC3BmtB,CAAG7kC,EAAE8B,GAAGG,EAAEE,EAAEsiC,cAAiB,oBAAoB5iC,EAAE,CAAC,IAAIE,EAAEF,EAAEA,EAAE,WAAW,IAAI/B,EAAEqkC,GAAGliC,GAAGF,EAAEtG,KAAKqE,IAAIqiC,IAAG,WAAW+B,GAAGnkC,EAAEkC,EAAEnC,EAAE+B,MAAK,OAAOsiC,GAAGliC,GAGlG,SAAS6iC,GAAGhlC,EAAEC,GAAG,IAAIC,EAAE,EAAE/C,UAAUlD,aAAQ,IAASkD,UAAU,GAAGA,UAAU,GAAG,KAAK,IAAIynC,GAAG3kC,GAAG,MAAMkB,MAAM+B,EAAE,MAAM,OAAOihC,GAAGnkC,EAAEC,EAAE,KAAKC,GA1BtWggC,GAAG,SAASlgC,EAAEC,EAAEC,GAAG,IAAI8B,EAAE/B,EAAEsvB,MAAM,GAAG,OAAOvvB,EAAE,GAAGA,EAAEo0B,gBAAgBn0B,EAAE20B,cAAc/xB,GAAErB,QAAQguB,IAAG,MAAQ,IAAG,KAAKtvB,EAAE8B,GAAoC,CAAO,OAANwtB,IAAG,EAAUvvB,EAAE0K,KAAK,KAAK,EAAEwvB,GAAGl6B,GAAG+0B,KAAK,MAAM,KAAK,EAAEf,GAAGh0B,GAAG,MAAM,KAAK,EAAE+rB,GAAG/rB,EAAEwC,OAAO6pB,GAAGrsB,GAAG,MAAM,KAAK,EAAE4zB,GAAG5zB,EAAEA,EAAEyT,UAAUmE,eAAe,MAAM,KAAK,GAAG7V,EAAE/B,EAAEm0B,cAAch5B,MAAM,IAAI2G,EAAE9B,EAAEwC,KAAKsC,SAASrD,GAAEktB,GAAG7sB,EAAE2C,eAAe3C,EAAE2C,cAAc1C,EAAE,MAAM,KAAK,GAAG,GAAG,OAAO/B,EAAEsV,cAAe,OAAG,KAAKrV,EAAED,EAAE0V,MAAMwZ,YAAmBuL,GAAG16B,EAAEC,EAAEC,IAAGwB,GAAEyB,GAAY,EAAVA,GAAE3B,SAA8B,QAAnBvB,EAAEm5B,GAAGp5B,EAAEC,EAAEC,IAC/eD,EAAE2V,QAAQ,MAAKlU,GAAEyB,GAAY,EAAVA,GAAE3B,SAAW,MAAM,KAAK,GAA0B,GAAvBQ,EAAE,KAAK9B,EAAED,EAAEkvB,YAAe,KAAa,GAARnvB,EAAEqV,OAAU,CAAC,GAAGrT,EAAE,OAAO05B,GAAG17B,EAAEC,EAAEC,GAAGD,EAAEoV,OAAO,GAA+F,GAA1E,QAAlBtT,EAAE9B,EAAEsV,iBAAyBxT,EAAEs5B,UAAU,KAAKt5B,EAAEy5B,KAAK,KAAKz5B,EAAE2wB,WAAW,MAAMhxB,GAAEyB,GAAEA,GAAE3B,SAAYQ,EAAE,MAAW,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,OAAO/B,EAAEsvB,MAAM,EAAEkK,GAAGz5B,EAAEC,EAAEC,GAAG,OAAOk5B,GAAGp5B,EAAEC,EAAEC,GAD3LsvB,GAAG,KAAa,MAARxvB,EAAEqV,YACyLma,IAAG,EAAa,OAAVvvB,EAAEsvB,MAAM,EAAStvB,EAAE0K,KAAK,KAAK,EAA+I,GAA7I3I,EAAE/B,EAAEwC,KAAK,OAAOzC,IAAIA,EAAEmV,UAAU,KAAKlV,EAAEkV,UAAU,KAAKlV,EAAEoV,OAAO,GAAGrV,EAAEC,EAAE20B,aAAa7yB,EAAE6pB,GAAG3rB,EAAE2C,GAAEpB,SAAS4tB,GAAGnvB,EAAEC,GAAG6B,EAAE4zB,GAAG,KAAK11B,EAAE+B,EAAEhC,EAAE+B,EAAE7B,GAAGD,EAAEoV,OAAO,EAAK,kBACretT,GAAG,OAAOA,GAAG,oBAAoBA,EAAEsD,aAAQ,IAAStD,EAAES,SAAS,CAAiD,GAAhDvC,EAAE0K,IAAI,EAAE1K,EAAEsV,cAAc,KAAKtV,EAAE6vB,YAAY,KAAQ9D,GAAGhqB,GAAG,CAAC,IAAIK,GAAE,EAAGiqB,GAAGrsB,QAAQoC,GAAE,EAAGpC,EAAEsV,cAAc,OAAOxT,EAAE4vB,YAAO,IAAS5vB,EAAE4vB,MAAM5vB,EAAE4vB,MAAM,KAAK9B,GAAG5vB,GAAG,IAAIkC,EAAEH,EAAEgwB,yBAAyB,oBAAoB7vB,GAAG8uB,GAAGhxB,EAAE+B,EAAEG,EAAEnC,GAAG+B,EAAEjB,QAAQowB,GAAGjxB,EAAEyT,UAAU3R,EAAEA,EAAEovB,gBAAgBlxB,EAAE8xB,GAAG9xB,EAAE+B,EAAEhC,EAAEE,GAAGD,EAAEg6B,GAAG,KAAKh6B,EAAE+B,GAAE,EAAGK,EAAEnC,QAAQD,EAAE0K,IAAI,EAAEuuB,GAAG,KAAKj5B,EAAE8B,EAAE7B,GAAGD,EAAEA,EAAE0V,MAAM,OAAO1V,EAAE,KAAK,GAAG8B,EAAE9B,EAAEgzB,YAAYjzB,EAAE,CAChX,OADiX,OAAOA,IAAIA,EAAEmV,UAAU,KAAKlV,EAAEkV,UAAU,KAAKlV,EAAEoV,OAAO,GACnfrV,EAAEC,EAAE20B,aAAuB7yB,GAAVM,EAAEN,EAAE0D,OAAU1D,EAAEyD,UAAUvF,EAAEwC,KAAKV,EAAEM,EAAEpC,EAAE0K,IAOxD,SAAY3K,GAAG,GAAG,oBAAoBA,EAAE,OAAOs5B,GAAGt5B,GAAG,EAAE,EAAE,QAAG,IAASA,GAAG,OAAOA,EAAE,CAAc,IAAbA,EAAEA,EAAEwC,YAAgByG,EAAG,OAAO,GAAG,GAAGjJ,IAAIoJ,EAAG,OAAO,GAAG,OAAO,EAPlF67B,CAAGljC,GAAG/B,EAAE2uB,GAAG5sB,EAAE/B,GAAUqC,GAAG,KAAK,EAAEpC,EAAEu5B,GAAG,KAAKv5B,EAAE8B,EAAE/B,EAAEE,GAAG,MAAMF,EAAE,KAAK,EAAEC,EAAE45B,GAAG,KAAK55B,EAAE8B,EAAE/B,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAEk5B,GAAG,KAAKl5B,EAAE8B,EAAE/B,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAEo5B,GAAG,KAAKp5B,EAAE8B,EAAE4sB,GAAG5sB,EAAEU,KAAKzC,GAAGgC,EAAE9B,GAAG,MAAMF,EAAE,MAAMmB,MAAM+B,EAAE,IAAInB,EAAE,KAAM,OAAO9B,EAAE,KAAK,EAAE,OAAO+B,EAAE/B,EAAEwC,KAAKV,EAAE9B,EAAE20B,aAA2C4E,GAAGx5B,EAAEC,EAAE+B,EAArCD,EAAE9B,EAAEgzB,cAAcjxB,EAAED,EAAE4sB,GAAG3sB,EAAED,GAAc7B,GAAG,KAAK,EAAE,OAAO8B,EAAE/B,EAAEwC,KAAKV,EAAE9B,EAAE20B,aAA2CiF,GAAG75B,EAAEC,EAAE+B,EAArCD,EAAE9B,EAAEgzB,cAAcjxB,EAAED,EAAE4sB,GAAG3sB,EAAED,GAAc7B,GAAG,KAAK,EAAwB,GAAtBi6B,GAAGl6B,GAAG+B,EAAE/B,EAAE6vB,YAAe,OAAO9vB,GAAG,OAAOgC,EAAE,MAAMb,MAAM+B,EAAE,MAC3Y,GAA9GlB,EAAE/B,EAAE20B,aAA+B7yB,EAAE,QAApBA,EAAE9B,EAAEsV,eAAyBxT,EAAEk7B,QAAQ,KAAK5M,GAAGrwB,EAAEC,GAAG4wB,GAAG5wB,EAAE+B,EAAE,KAAK9B,IAAG8B,EAAE/B,EAAEsV,cAAc0nB,WAAel7B,EAAEizB,KAAK/0B,EAAEm5B,GAAGp5B,EAAEC,EAAEC,OAAO,CAAuF,IAArEmC,GAAjBN,EAAE9B,EAAEyT,WAAiBkE,WAAQ2c,GAAGxJ,GAAG9qB,EAAEyT,UAAUmE,cAAc3J,YAAYomB,GAAGr0B,EAAEoC,EAAEmyB,IAAG,GAAMnyB,EAAE,CAAqC,GAAG,OAAvCrC,EAAE+B,EAAEmiC,iCAA2C,IAAIniC,EAAE,EAAEA,EAAE/B,EAAE/F,OAAO8H,GAAG,GAAEM,EAAErC,EAAE+B,IAAKozB,8BAA8Bn1B,EAAE+B,EAAE,GAAGkzB,GAAG95B,KAAKkH,GAAoB,IAAjBnC,EAAEqzB,GAAGtzB,EAAE,KAAK+B,EAAE9B,GAAOD,EAAE0V,MAAMzV,EAAEA,GAAGA,EAAEmV,OAAe,EAATnV,EAAEmV,MAAS,KAAKnV,EAAEA,EAAE0V,aAAasjB,GAAGl5B,EAAEC,EAAE+B,EAAE9B,GAAG80B,KAAK/0B,EAAEA,EAAE0V,MAAM,OAAO1V,EAAE,KAAK,EAAE,OAAOg0B,GAAGh0B,GAAG,OAAOD,GACnf60B,GAAG50B,GAAG+B,EAAE/B,EAAEwC,KAAKV,EAAE9B,EAAE20B,aAAavyB,EAAE,OAAOrC,EAAEA,EAAEo0B,cAAc,KAAKjyB,EAAEJ,EAAEK,SAASooB,GAAGxoB,EAAED,GAAGI,EAAE,KAAK,OAAOE,GAAGmoB,GAAGxoB,EAAEK,KAAKpC,EAAEoV,OAAO,IAAIukB,GAAG55B,EAAEC,GAAGi5B,GAAGl5B,EAAEC,EAAEkC,EAAEjC,GAAGD,EAAE0V,MAAM,KAAK,EAAE,OAAO,OAAO3V,GAAG60B,GAAG50B,GAAG,KAAK,KAAK,GAAG,OAAOy6B,GAAG16B,EAAEC,EAAEC,GAAG,KAAK,EAAE,OAAO2zB,GAAG5zB,EAAEA,EAAEyT,UAAUmE,eAAe7V,EAAE/B,EAAE20B,aAAa,OAAO50B,EAAEC,EAAE0V,MAAM2d,GAAGrzB,EAAE,KAAK+B,EAAE9B,GAAGg5B,GAAGl5B,EAAEC,EAAE+B,EAAE9B,GAAGD,EAAE0V,MAAM,KAAK,GAAG,OAAO3T,EAAE/B,EAAEwC,KAAKV,EAAE9B,EAAE20B,aAA2CuE,GAAGn5B,EAAEC,EAAE+B,EAArCD,EAAE9B,EAAEgzB,cAAcjxB,EAAED,EAAE4sB,GAAG3sB,EAAED,GAAc7B,GAAG,KAAK,EAAE,OAAOg5B,GAAGl5B,EAAEC,EAAEA,EAAE20B,aAAa10B,GAAGD,EAAE0V,MAAM,KAAK,EACtc,KAAK,GAAG,OAAOujB,GAAGl5B,EAAEC,EAAEA,EAAE20B,aAAaxyB,SAASlC,GAAGD,EAAE0V,MAAM,KAAK,GAAG3V,EAAE,CAACgC,EAAE/B,EAAEwC,KAAKsC,SAAShD,EAAE9B,EAAE20B,aAAazyB,EAAElC,EAAEm0B,cAAc/xB,EAAEN,EAAE3G,MAAM,IAAI8G,EAAEjC,EAAEwC,KAAKsC,SAAiD,GAAxCrD,GAAEktB,GAAG1sB,EAAEwC,eAAexC,EAAEwC,cAAcrC,EAAK,OAAOF,EAAE,GAAGD,EAAEC,EAAE/G,MAA0G,KAApGiH,EAAEikB,GAAGpkB,EAAEG,GAAG,EAAwF,GAArF,oBAAoBL,EAAEyC,sBAAsBzC,EAAEyC,sBAAsBvC,EAAEG,GAAG,cAAqB,GAAGF,EAAEC,WAAWL,EAAEK,WAAWS,GAAErB,QAAQ,CAACvB,EAAEm5B,GAAGp5B,EAAEC,EAAEC,GAAG,MAAMF,QAAQ,IAAc,QAAVkC,EAAEjC,EAAE0V,SAAiBzT,EAAEkT,OAAOnV,GAAG,OAAOiC,GAAG,CAAC,IAAID,EAAEC,EAAEmtB,aAAa,GAAG,OAAOptB,EAAE,CAACE,EAAED,EAAEyT,MAAM,IAAI,IAAI1W,EACtfgD,EAAEqtB,aAAa,OAAOrwB,GAAG,CAAC,GAAGA,EAAE2B,UAAUoB,GAAG,KAAK/C,EAAEywB,aAAartB,GAAG,CAAC,IAAIH,EAAEyI,OAAM1L,EAAEqxB,IAAI,EAAEpwB,GAAGA,IAAKyK,IAAI,EAAEgmB,GAAGzuB,EAAEjD,IAAIiD,EAAEqtB,OAAOrvB,EAAgB,QAAdjB,EAAEiD,EAAEiT,aAAqBlW,EAAEswB,OAAOrvB,GAAGgvB,GAAGhtB,EAAEkT,OAAOlV,GAAG+B,EAAEstB,OAAOrvB,EAAE,MAAMjB,EAAEA,EAAEhE,WAAWkH,EAAE,KAAKD,EAAEyI,KAAIzI,EAAEO,OAAOxC,EAAEwC,KAAK,KAAaP,EAAEyT,MAAM,GAAG,OAAOxT,EAAEA,EAAEiT,OAAOlT,OAAO,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAGA,IAAIlC,EAAE,CAACkC,EAAE,KAAK,MAAkB,GAAG,QAAfD,EAAEC,EAAEyT,SAAoB,CAAC1T,EAAEkT,OAAOjT,EAAEiT,OAAOjT,EAAED,EAAE,MAAMC,EAAEA,EAAEiT,OAAOlT,EAAEC,EAAE+2B,GAAGl5B,EAAEC,EAAE8B,EAAEK,SAASlC,GAAGD,EAAEA,EAAE0V,MAAM,OAAO1V,EAAE,KAAK,EAAE,OAAO8B,EAAE9B,EAAEwC,KAAsBT,GAAjBK,EAAEpC,EAAE20B,cAAiBxyB,SAASgtB,GAAGnvB,EAAEC,GACnd8B,EAAEA,EADodD,EAAE0tB,GAAG1tB,EACpfM,EAAE6iC,wBAA8BjlC,EAAEoV,OAAO,EAAE6jB,GAAGl5B,EAAEC,EAAE+B,EAAE9B,GAAGD,EAAE0V,MAAM,KAAK,GAAG,OAAgBtT,EAAEssB,GAAX5sB,EAAE9B,EAAEwC,KAAYxC,EAAE20B,cAA6ByE,GAAGr5B,EAAEC,EAAE8B,EAAtBM,EAAEssB,GAAG5sB,EAAEU,KAAKJ,GAAcL,EAAE9B,GAAG,KAAK,GAAG,OAAOq5B,GAAGv5B,EAAEC,EAAEA,EAAEwC,KAAKxC,EAAE20B,aAAa5yB,EAAE9B,GAAG,KAAK,GAAG,OAAO8B,EAAE/B,EAAEwC,KAAKV,EAAE9B,EAAE20B,aAAa7yB,EAAE9B,EAAEgzB,cAAcjxB,EAAED,EAAE4sB,GAAG3sB,EAAED,GAAG,OAAO/B,IAAIA,EAAEmV,UAAU,KAAKlV,EAAEkV,UAAU,KAAKlV,EAAEoV,OAAO,GAAGpV,EAAE0K,IAAI,EAAEqhB,GAAGhqB,IAAIhC,GAAE,EAAGssB,GAAGrsB,IAAID,GAAE,EAAGovB,GAAGnvB,EAAEC,GAAGuxB,GAAGxxB,EAAE+B,EAAED,GAAGgwB,GAAG9xB,EAAE+B,EAAED,EAAE7B,GAAG+5B,GAAG,KAAKh6B,EAAE+B,GAAE,EAAGhC,EAAEE,GAAG,KAAK,GAAG,OAAOw7B,GAAG17B,EAAEC,EAAEC,GAAG,KAAK,GAAoB,KAAK,GAAG,OAAOu5B,GAAGz5B,EAAEC,EAAEC,GAAG,MAAMiB,MAAM+B,EAAE,IAAIjD,EAAE0K,OAa/e65B,GAAG/oC,UAAU4J,OAAO,SAASrF,GAAGokC,GAAGpkC,EAAE/C,KAAK0nC,cAAc,KAAK,OAAOH,GAAG/oC,UAAU0pC,QAAQ,WAAW,IAAInlC,EAAE/C,KAAK0nC,cAAc1kC,EAAED,EAAE6X,cAAcusB,GAAG,KAAKpkC,EAAE,MAAK,WAAWC,EAAE0pB,IAAI,SAEwJ5T,GAAG,SAAS/V,GAAM,KAAKA,EAAE2K,MAAgB2mB,GAAGtxB,EAAE,EAAVoxB,MAAemT,GAAGvkC,EAAE,KAAKgW,GAAG,SAAShW,GAAM,KAAKA,EAAE2K,MAAgB2mB,GAAGtxB,EAAE,SAAVoxB,MAAsBmT,GAAGvkC,EAAE,YACnciW,GAAG,SAASjW,GAAG,GAAG,KAAKA,EAAE2K,IAAI,CAAC,IAAI1K,EAAEmxB,KAAKlxB,EAAEmxB,GAAGrxB,GAAGsxB,GAAGtxB,EAAEE,EAAED,GAAGskC,GAAGvkC,EAAEE,KAAKgW,GAAG,SAASlW,EAAEC,GAAG,OAAOA,KAC7FoT,GAAG,SAASrT,EAAEC,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAyB,GAAjBwM,GAAGzM,EAAEE,GAAGD,EAAEC,EAAEpE,KAAQ,UAAUoE,EAAEuC,MAAM,MAAMxC,EAAE,CAAC,IAAIC,EAAEF,EAAEE,EAAEkT,YAAYlT,EAAEA,EAAEkT,WAAsF,IAA3ElT,EAAEA,EAAEklC,iBAAiB,cAAcC,KAAKC,UAAU,GAAGrlC,GAAG,mBAAuBA,EAAE,EAAEA,EAAEC,EAAEjG,OAAOgG,IAAI,CAAC,IAAI+B,EAAE9B,EAAED,GAAG,GAAG+B,IAAIhC,GAAGgC,EAAEujC,OAAOvlC,EAAEulC,KAAK,CAAC,IAAIxjC,EAAE4R,GAAG3R,GAAG,IAAID,EAAE,MAAMZ,MAAM+B,EAAE,KAAKyI,EAAG3J,GAAGyK,GAAGzK,EAAED,KAAK,MAAM,IAAK,WAAWwL,GAAGvN,EAAEE,GAAG,MAAM,IAAK,SAAmB,OAAVD,EAAEC,EAAE9E,QAAe2R,GAAG/M,IAAIE,EAAE47B,SAAS77B,GAAE,KAAM6T,GAAGsuB,GAC9ZruB,GAAG,SAAS/T,EAAEC,EAAEC,EAAE8B,EAAED,GAAG,IAAIM,EAAEm9B,GAAEA,IAAG,EAAE,IAAI,OAAOlR,GAAG,GAAGtuB,EAAEkF,KAAK,KAAKjF,EAAEC,EAAE8B,EAAED,IAAnC,QAAmD,KAAJy9B,GAAEn9B,KAAU49B,KAAKzR,QAAQxa,GAAG,WAAW,KAAO,GAAFwrB,MAhD/H,WAAc,GAAG,OAAOiB,GAAG,CAAC,IAAIzgC,EAAEygC,GAAGA,GAAG,KAAKzgC,EAAE3B,SAAQ,SAAS2B,GAAGA,EAAE8Z,cAAc,GAAG9Z,EAAE6Z,aAAaunB,GAAGphC,EAAEgD,SAAOwrB,KAgDsBgX,GAAK9D,OAAOztB,GAAG,SAASjU,EAAEC,GAAG,IAAIC,EAAEs/B,GAAEA,IAAG,EAAE,IAAI,OAAOx/B,EAAEC,GAAb,QAA4B,KAAJu/B,GAAEt/B,KAAU+/B,KAAKzR,QAA+I,IAAIiX,GAAG,CAACC,OAAO,CAACjyB,GAAG8R,GAAG5R,GAAGC,GAAGC,GAAG6tB,GAAG,CAAClgC,SAAQ,KAAMmkC,GAAG,CAACC,wBAAwBpuB,GAAGquB,WAAW,EAAEv/B,QAAQ,SAASw/B,oBAAoB,aACveC,GAAG,CAACF,WAAWF,GAAGE,WAAWv/B,QAAQq/B,GAAGr/B,QAAQw/B,oBAAoBH,GAAGG,oBAAoBE,eAAeL,GAAGK,eAAeC,kBAAkB,KAAKC,4BAA4B,KAAKC,4BAA4B,KAAKC,cAAc,KAAKC,wBAAwB,KAAKC,wBAAwB,KAAKC,mBAAmB,KAAKC,eAAe,KAAKC,qBAAqBh+B,EAAG9E,uBAAuB+iC,wBAAwB,SAAS1mC,GAAW,OAAO,QAAfA,EAAE0V,GAAG1V,IAAmB,KAAKA,EAAE0T,WAAWkyB,wBAAwBD,GAAGC,yBAR/I,WAAc,OAAO,MAS7We,4BAA4B,KAAKC,gBAAgB,KAAKC,aAAa,KAAKC,kBAAkB,KAAKC,gBAAgB,MAAM,GAAG,qBAAqBhoC,+BAA+B,CAAC,IAAIioC,GAAGjoC,+BAA+B,IAAIioC,GAAGC,YAAYD,GAAGE,cAAc,IAAIza,GAAGua,GAAGG,OAAOpB,IAAIrZ,GAAGsa,GAAG,MAAMhnC,MAAKpG,EAAQ0K,mDAAmDmhC,GAAG7rC,EAAQwtC,aAAapC,GACnXprC,EAAQytC,YAAY,SAASrnC,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,IAAIA,EAAEyO,SAAS,OAAOzO,EAAE,IAAIC,EAAED,EAAEmxB,gBAAgB,QAAG,IAASlxB,EAAE,CAAC,GAAG,oBAAoBD,EAAEqF,OAAO,MAAMlE,MAAM+B,EAAE,MAAM,MAAM/B,MAAM+B,EAAE,IAAIzI,OAAO8D,KAAKyB,KAA0C,OAA5BA,EAAE,QAAVA,EAAE0V,GAAGzV,IAAc,KAAKD,EAAE0T,WAAoB9Z,EAAQ0tC,UAAU,SAAStnC,EAAEC,GAAG,IAAIC,EAAEs/B,GAAE,GAAG,KAAO,GAAFt/B,GAAM,OAAOF,EAAEC,GAAGu/B,IAAG,EAAE,IAAI,GAAGx/B,EAAE,OAAOsuB,GAAG,GAAGtuB,EAAEkF,KAAK,KAAKjF,IAAlC,QAA8Cu/B,GAAEt/B,EAAEsuB,OAAO50B,EAAQge,QAAQ,SAAS5X,EAAEC,EAAEC,GAAG,IAAI0kC,GAAG3kC,GAAG,MAAMkB,MAAM+B,EAAE,MAAM,OAAO2hC,GAAG,KAAK7kC,EAAEC,GAAE,EAAGC,IACndtG,EAAQyL,OAAO,SAASrF,EAAEC,EAAEC,GAAG,IAAI0kC,GAAG3kC,GAAG,MAAMkB,MAAM+B,EAAE,MAAM,OAAO2hC,GAAG,KAAK7kC,EAAEC,GAAE,EAAGC,IAAItG,EAAQ2tC,uBAAuB,SAASvnC,GAAG,IAAI4kC,GAAG5kC,GAAG,MAAMmB,MAAM+B,EAAE,KAAK,QAAOlD,EAAE8+B,sBAAqBuD,IAAG,WAAWwC,GAAG,KAAK,KAAK7kC,GAAE,GAAG,WAAWA,EAAE8+B,oBAAoB,KAAK9+B,EAAE2pB,IAAI,YAAS,IAAQ/vB,EAAQ4tC,wBAAwBpF,GAAGxoC,EAAQ6tC,sBAAsB,SAASznC,EAAEC,GAAG,OAAO+kC,GAAGhlC,EAAEC,EAAE,EAAE9C,UAAUlD,aAAQ,IAASkD,UAAU,GAAGA,UAAU,GAAG,OAC9avD,EAAQ8tC,oCAAoC,SAAS1nC,EAAEC,EAAEC,EAAE8B,GAAG,IAAI4iC,GAAG1kC,GAAG,MAAMiB,MAAM+B,EAAE,MAAM,GAAG,MAAMlD,QAAG,IAASA,EAAEmxB,gBAAgB,MAAMhwB,MAAM+B,EAAE,KAAK,OAAO2hC,GAAG7kC,EAAEC,EAAEC,GAAE,EAAG8B,IAAIpI,EAAQ0M,QAAQ,U,6BCrS3L3M,EAAOC,QAAUC,EAAQ,K,6BCKd,IAAIwI,EAAEF,EAAED,EAAED,EAAE,GAAG,kBAAkB0lC,aAAa,oBAAoBA,YAAYnqB,IAAI,CAAC,IAAIve,EAAE0oC,YAAY/tC,EAAQ8f,aAAa,WAAW,OAAOza,EAAEue,WAAW,CAAC,IAAIte,EAAEqe,KAAKje,EAAEJ,EAAEse,MAAM5jB,EAAQ8f,aAAa,WAAW,OAAOxa,EAAEse,MAAMle,GAC3O,GAAG,qBAAqByH,QAAQ,oBAAoB6gC,eAAe,CAAC,IAAIpoC,EAAE,KAAKE,EAAE,KAAKG,EAAE,SAAFA,IAAa,GAAG,OAAOL,EAAE,IAAI,IAAIQ,EAAEpG,EAAQ8f,eAAela,GAAE,EAAGQ,GAAGR,EAAE,KAAK,MAAMS,GAAG,MAAM0qB,WAAW9qB,EAAE,GAAGI,IAAKoC,EAAE,SAASrC,GAAG,OAAOR,EAAEmrB,WAAWtoB,EAAE,EAAErC,IAAIR,EAAEQ,EAAE2qB,WAAW9qB,EAAE,KAAKsC,EAAE,SAASnC,EAAEC,GAAGP,EAAEirB,WAAW3qB,EAAEC,IAAIiC,EAAE,WAAW2oB,aAAanrB,IAAI9F,EAAQozB,qBAAqB,WAAW,OAAM,GAAI/qB,EAAErI,EAAQiuC,wBAAwB,iBAAiB,CAAC,IAAI/nC,EAAEiH,OAAO4jB,WAAWznB,EAAE6D,OAAO8jB,aAAa,GAAG,qBAAqB7rB,QAAQ,CAAC,IAAIe,EAC7fgH,OAAO+gC,qBAAqB,oBAAoB/gC,OAAOghC,uBAAuB/oC,QAAQrC,MAAM,sJAAsJ,oBAAoBoD,GAAGf,QAAQrC,MAAM,qJAAqJ,IAAIyD,GAAE,EAAGK,EAAE,KAAKC,GAAG,EAAEK,EAAE,EAAEC,EAAE,EAAEpH,EAAQozB,qBAAqB,WAAW,OAAOpzB,EAAQ8f,gBAChgB1Y,GAAGiB,EAAE,aAAarI,EAAQiuC,wBAAwB,SAAS7nC,GAAG,EAAEA,GAAG,IAAIA,EAAEhB,QAAQrC,MAAM,mHAAmHoE,EAAE,EAAEf,EAAE0a,KAAKstB,MAAM,IAAIhoC,GAAG,GAAG,IAAIqB,EAAE,IAAIumC,eAAermC,EAAEF,EAAE4mC,MAAM5mC,EAAE6mC,MAAMC,UAAU,WAAW,GAAG,OAAO1nC,EAAE,CAAC,IAAIT,EAAEpG,EAAQ8f,eAAe1Y,EAAEhB,EAAEe,EAAE,IAAIN,GAAE,EAAGT,GAAGuB,EAAE6mC,YAAY,OAAOhoC,GAAE,EAAGK,EAAE,MAAM,MAAMR,GAAG,MAAMsB,EAAE6mC,YAAY,MAAMnoC,QAASG,GAAE,GAAIiC,EAAE,SAASrC,GAAGS,EAAET,EAAEI,IAAIA,GAAE,EAAGmB,EAAE6mC,YAAY,QAAQjmC,EAAE,SAASnC,EAAEC,GAAGS,EACtfZ,GAAE,WAAWE,EAAEpG,EAAQ8f,kBAAiBzZ,IAAIiC,EAAE,WAAWgB,EAAExC,GAAGA,GAAG,GAAG,SAASe,EAAEzB,EAAEC,GAAG,IAAIC,EAAEF,EAAE/F,OAAO+F,EAAE7E,KAAK8E,GAAGD,EAAE,OAAO,CAAC,IAAIgC,EAAE9B,EAAE,IAAI,EAAE6B,EAAE/B,EAAEgC,GAAG,UAAG,IAASD,GAAG,EAAEL,EAAEK,EAAE9B,IAA0B,MAAMD,EAA7BA,EAAEgC,GAAG/B,EAAED,EAAEE,GAAG6B,EAAE7B,EAAE8B,GAAgB,SAASF,EAAE9B,GAAU,YAAO,KAAdA,EAAEA,EAAE,IAAqB,KAAKA,EAChP,SAASiD,EAAEjD,GAAG,IAAIC,EAAED,EAAE,GAAG,QAAG,IAASC,EAAE,CAAC,IAAIC,EAAEF,EAAEqoC,MAAM,GAAGnoC,IAAID,EAAE,CAACD,EAAE,GAAGE,EAAEF,EAAE,IAAI,IAAIgC,EAAE,EAAED,EAAE/B,EAAE/F,OAAO+H,EAAED,GAAG,CAAC,IAAIO,EAAE,GAAGN,EAAE,GAAG,EAAExG,EAAEwE,EAAEsC,GAAG3C,EAAE2C,EAAE,EAAE/C,EAAES,EAAEL,GAAG,QAAG,IAASnE,GAAG,EAAEkG,EAAElG,EAAE0E,QAAG,IAASX,GAAG,EAAEmC,EAAEnC,EAAE/D,IAAIwE,EAAEgC,GAAGzC,EAAES,EAAEL,GAAGO,EAAE8B,EAAErC,IAAIK,EAAEgC,GAAGxG,EAAEwE,EAAEsC,GAAGpC,EAAE8B,EAAEM,OAAQ,WAAG,IAAS/C,GAAG,EAAEmC,EAAEnC,EAAEW,IAA0B,MAAMF,EAA7BA,EAAEgC,GAAGzC,EAAES,EAAEL,GAAGO,EAAE8B,EAAErC,IAAgB,OAAOM,EAAE,OAAO,KAAK,SAASyB,EAAE1B,EAAEC,GAAG,IAAIC,EAAEF,EAAEsoC,UAAUroC,EAAEqoC,UAAU,OAAO,IAAIpoC,EAAEA,EAAEF,EAAEsb,GAAGrb,EAAEqb,GAAG,IAAI3Y,EAAE,GAAGC,EAAE,GAAGC,EAAE,EAAEG,EAAE,KAAKG,EAAE,EAAEC,GAAE,EAAGI,GAAE,EAAGC,GAAE,EACja,SAASC,EAAE1D,GAAG,IAAI,IAAIC,EAAE6B,EAAEc,GAAG,OAAO3C,GAAG,CAAC,GAAG,OAAOA,EAAEywB,SAASztB,EAAEL,OAAQ,MAAG3C,EAAEsoC,WAAWvoC,GAAgD,MAA9CiD,EAAEL,GAAG3C,EAAEqoC,UAAUroC,EAAEuoC,eAAe/mC,EAAEkB,EAAE1C,GAAcA,EAAE6B,EAAEc,IAAI,SAASs0B,EAAEl3B,GAAa,GAAVyD,GAAE,EAAGC,EAAE1D,IAAOwD,EAAE,GAAG,OAAO1B,EAAEa,GAAGa,GAAE,EAAGnB,EAAE+5B,OAAO,CAAC,IAAIn8B,EAAE6B,EAAEc,GAAG,OAAO3C,GAAGkC,EAAE+0B,EAAEj3B,EAAEsoC,UAAUvoC,IACtP,SAASo8B,EAAEp8B,EAAEC,GAAGuD,GAAE,EAAGC,IAAIA,GAAE,EAAGvB,KAAKkB,GAAE,EAAG,IAAIlD,EAAEiD,EAAE,IAAS,IAALO,EAAEzD,GAAO+C,EAAElB,EAAEa,GAAG,OAAOK,MAAMA,EAAEwlC,eAAevoC,IAAID,IAAIpG,EAAQozB,yBAAyB,CAAC,IAAIhrB,EAAEgB,EAAE0tB,SAAS,GAAG,oBAAoB1uB,EAAE,CAACgB,EAAE0tB,SAAS,KAAKvtB,EAAEH,EAAEylC,cAAc,IAAI1mC,EAAEC,EAAEgB,EAAEwlC,gBAAgBvoC,GAAGA,EAAErG,EAAQ8f,eAAe,oBAAoB3X,EAAEiB,EAAE0tB,SAAS3uB,EAAEiB,IAAIlB,EAAEa,IAAIM,EAAEN,GAAGe,EAAEzD,QAAQgD,EAAEN,GAAGK,EAAElB,EAAEa,GAAG,GAAG,OAAOK,EAAE,IAAIV,GAAE,MAAO,CAAC,IAAI9G,EAAEsG,EAAEc,GAAG,OAAOpH,GAAG2G,EAAE+0B,EAAE17B,EAAE+sC,UAAUtoC,GAAGqC,GAAE,EAAG,OAAOA,EAArX,QAA+XU,EAAE,KAAKG,EAAEjD,EAAEkD,GAAE,GAAI,IAAIm5B,EAAEt6B,EAAErI,EAAQi0B,sBAAsB,EACtej0B,EAAQ2zB,2BAA2B,EAAE3zB,EAAQ+zB,qBAAqB,EAAE/zB,EAAQye,wBAAwB,EAAEze,EAAQ8uC,mBAAmB,KAAK9uC,EAAQqhB,8BAA8B,EAAErhB,EAAQkzB,wBAAwB,SAAS9sB,GAAGA,EAAE0wB,SAAS,MAAM92B,EAAQ+uC,2BAA2B,WAAWnlC,GAAGJ,IAAII,GAAE,EAAGnB,EAAE+5B,KAAKxiC,EAAQyzB,iCAAiC,WAAW,OAAOlqB,GAAGvJ,EAAQgvC,8BAA8B,WAAW,OAAO9mC,EAAEa,IACpa/I,EAAQivC,cAAc,SAAS7oC,GAAG,OAAOmD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAIlD,EAAE,EAAE,MAAM,QAAQA,EAAEkD,EAAE,IAAIjD,EAAEiD,EAAEA,EAAElD,EAAE,IAAI,OAAOD,IAAX,QAAuBmD,EAAEjD,IAAItG,EAAQkvC,wBAAwB,aAAalvC,EAAQszB,sBAAsBqP,EAAE3iC,EAAQ8d,yBAAyB,SAAS1X,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,QAAQA,EAAE,EAAE,IAAIE,EAAEiD,EAAEA,EAAEnD,EAAE,IAAI,OAAOC,IAAX,QAAuBkD,EAAEjD,IACpWtG,EAAQwe,0BAA0B,SAASpY,EAAEC,EAAEC,GAAG,IAAI8B,EAAEpI,EAAQ8f,eAA8F,OAA/E,kBAAkBxZ,GAAG,OAAOA,EAAaA,EAAE,kBAAZA,EAAEA,EAAE6oC,QAA6B,EAAE7oC,EAAE8B,EAAE9B,EAAE8B,EAAG9B,EAAE8B,EAAShC,GAAG,KAAK,EAAE,IAAI+B,GAAG,EAAE,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,KAAK,EAAEA,EAAE,WAAW,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,QAAQA,EAAE,IAA2M,OAAjM/B,EAAE,CAACsb,GAAGzY,IAAI6tB,SAASzwB,EAAEwoC,cAAczoC,EAAEuoC,UAAUroC,EAAEsoC,eAAvDzmC,EAAE7B,EAAE6B,EAAoEumC,WAAW,GAAGpoC,EAAE8B,GAAGhC,EAAEsoC,UAAUpoC,EAAEuB,EAAEmB,EAAE5C,GAAG,OAAO8B,EAAEa,IAAI3C,IAAI8B,EAAEc,KAAKa,EAAEvB,IAAIuB,GAAE,EAAGtB,EAAE+0B,EAAEh3B,EAAE8B,MAAMhC,EAAEsoC,UAAUvmC,EAAEN,EAAEkB,EAAE3C,GAAGwD,GAAGJ,IAAII,GAAE,EAAGnB,EAAE+5B,KAAYp8B,GAC1dpG,EAAQovC,sBAAsB,SAAShpC,GAAG,IAAIC,EAAEkD,EAAE,OAAO,WAAW,IAAIjD,EAAEiD,EAAEA,EAAElD,EAAE,IAAI,OAAOD,EAAE5C,MAAMH,KAAKE,WAAxB,QAA2CgG,EAAEjD,M,kCCZ7H,IAAI+oC,EAAW,SAAUrvC,GACvB,aAEA,IAEIkB,EAFAouC,EAAKzuC,OAAOgB,UACZ0tC,EAASD,EAAG5rC,eAEZ8rC,EAA4B,oBAAX7uC,OAAwBA,OAAS,GAClD8uC,EAAiBD,EAAQ5uC,UAAY,aACrC8uC,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAE/C,SAASC,EAAOC,EAAKntC,EAAKpB,GAOxB,OANAX,OAAO4P,eAAes/B,EAAKntC,EAAK,CAC9BpB,MAAOA,EACPkQ,YAAY,EACZD,cAAc,EACdu+B,UAAU,IAELD,EAAIntC,GAEb,IAEEktC,EAAO,GAAI,IACX,MAAOruC,GACPquC,EAAS,SAASC,EAAKntC,EAAKpB,GAC1B,OAAOuuC,EAAIntC,GAAOpB,GAItB,SAASyuC,EAAKC,EAASC,EAAS/sC,EAAMgtC,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQtuC,qBAAqByuC,EAAYH,EAAUG,EAC/EC,EAAY1vC,OAAOi9B,OAAOuS,EAAexuC,WACzCmF,EAAU,IAAIwpC,EAAQJ,GAAe,IAMzC,OAFAG,EAAUE,QAuMZ,SAA0BP,EAAS9sC,EAAM4D,GACvC,IAAI+wB,EAAQ2Y,EAEZ,OAAO,SAAgBC,EAAQ9tC,GAC7B,GAAIk1B,IAAU6Y,EACZ,MAAM,IAAIrpC,MAAM,gCAGlB,GAAIwwB,IAAU8Y,EAAmB,CAC/B,GAAe,UAAXF,EACF,MAAM9tC,EAKR,OAAOiuC,IAMT,IAHA9pC,EAAQ2pC,OAASA,EACjB3pC,EAAQnE,IAAMA,IAED,CACX,IAAIkuC,EAAW/pC,EAAQ+pC,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAU/pC,GACnD,GAAIgqC,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBhqC,EAAQ2pC,OAGV3pC,EAAQmqC,KAAOnqC,EAAQoqC,MAAQpqC,EAAQnE,SAElC,GAAuB,UAAnBmE,EAAQ2pC,OAAoB,CACrC,GAAI5Y,IAAU2Y,EAEZ,MADA3Y,EAAQ8Y,EACF7pC,EAAQnE,IAGhBmE,EAAQqqC,kBAAkBrqC,EAAQnE,SAEN,WAAnBmE,EAAQ2pC,QACjB3pC,EAAQsqC,OAAO,SAAUtqC,EAAQnE,KAGnCk1B,EAAQ6Y,EAER,IAAIW,EAASC,EAAStB,EAAS9sC,EAAM4D,GACrC,GAAoB,WAAhBuqC,EAAO1oC,KAAmB,CAO5B,GAJAkvB,EAAQ/wB,EAAQ1F,KACZuvC,EACAY,EAEAF,EAAO1uC,MAAQquC,EACjB,SAGF,MAAO,CACL1vC,MAAO+vC,EAAO1uC,IACdvB,KAAM0F,EAAQ1F,MAGS,UAAhBiwC,EAAO1oC,OAChBkvB,EAAQ8Y,EAGR7pC,EAAQ2pC,OAAS,QACjB3pC,EAAQnE,IAAM0uC,EAAO1uC,OA/QP6uC,CAAiBxB,EAAS9sC,EAAM4D,GAE7CupC,EAcT,SAASiB,EAASruC,EAAI4sC,EAAKltC,GACzB,IACE,MAAO,CAAEgG,KAAM,SAAUhG,IAAKM,EAAGpB,KAAKguC,EAAKltC,IAC3C,MAAOpB,GACP,MAAO,CAAEoH,KAAM,QAAShG,IAAKpB,IAhBjCzB,EAAQiwC,KAAOA,EAoBf,IAAIS,EAAyB,iBACzBe,EAAyB,iBACzBb,EAAoB,YACpBC,EAAoB,YAIpBK,EAAmB,GAMvB,SAASZ,KACT,SAASqB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxB/B,EAAO+B,EAAmBpC,GAAgB,WACxC,OAAOpsC,QAGT,IAAIyuC,EAAWjxC,OAAOkxC,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B1C,GAC5BC,EAAOxtC,KAAKiwC,EAAyBvC,KAGvCoC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B/vC,UAClCyuC,EAAUzuC,UAAYhB,OAAOi9B,OAAO+T,GAYtC,SAASM,EAAsBtwC,GAC7B,CAAC,OAAQ,QAAS,UAAU4C,SAAQ,SAASksC,GAC3Cb,EAAOjuC,EAAW8uC,GAAQ,SAAS9tC,GACjC,OAAOQ,KAAKotC,QAAQE,EAAQ9tC,SAkClC,SAASuvC,EAAc7B,EAAW8B,GAChC,SAASC,EAAO3B,EAAQ9tC,EAAKL,EAASC,GACpC,IAAI8uC,EAASC,EAASjB,EAAUI,GAASJ,EAAW1tC,GACpD,GAAoB,UAAhB0uC,EAAO1oC,KAEJ,CACL,IAAI0pC,EAAShB,EAAO1uC,IAChBrB,EAAQ+wC,EAAO/wC,MACnB,OAAIA,GACiB,kBAAVA,GACP+tC,EAAOxtC,KAAKP,EAAO,WACd6wC,EAAY7vC,QAAQhB,EAAMgxC,SAASvvC,MAAK,SAASzB,GACtD8wC,EAAO,OAAQ9wC,EAAOgB,EAASC,MAC9B,SAAShB,GACV6wC,EAAO,QAAS7wC,EAAKe,EAASC,MAI3B4vC,EAAY7vC,QAAQhB,GAAOyB,MAAK,SAASwvC,GAI9CF,EAAO/wC,MAAQixC,EACfjwC,EAAQ+vC,MACP,SAASxvC,GAGV,OAAOuvC,EAAO,QAASvvC,EAAOP,EAASC,MAvBzCA,EAAO8uC,EAAO1uC,KA4BlB,IAAI6vC,EAgCJrvC,KAAKotC,QA9BL,SAAiBE,EAAQ9tC,GACvB,SAAS8vC,IACP,OAAO,IAAIN,GAAY,SAAS7vC,EAASC,GACvC6vC,EAAO3B,EAAQ9tC,EAAKL,EAASC,MAIjC,OAAOiwC,EAaLA,EAAkBA,EAAgBzvC,KAChC0vC,EAGAA,GACEA,KAkHV,SAAS1B,EAAoBF,EAAU/pC,GACrC,IAAI2pC,EAASI,EAASnwC,SAASoG,EAAQ2pC,QACvC,GAAIA,IAAWzvC,EAAW,CAKxB,GAFA8F,EAAQ+pC,SAAW,KAEI,UAAnB/pC,EAAQ2pC,OAAoB,CAE9B,GAAII,EAASnwC,SAAT,SAGFoG,EAAQ2pC,OAAS,SACjB3pC,EAAQnE,IAAM3B,EACd+vC,EAAoBF,EAAU/pC,GAEP,UAAnBA,EAAQ2pC,QAGV,OAAOO,EAIXlqC,EAAQ2pC,OAAS,QACjB3pC,EAAQnE,IAAM,IAAIR,UAChB,kDAGJ,OAAO6uC,EAGT,IAAIK,EAASC,EAASb,EAAQI,EAASnwC,SAAUoG,EAAQnE,KAEzD,GAAoB,UAAhB0uC,EAAO1oC,KAIT,OAHA7B,EAAQ2pC,OAAS,QACjB3pC,EAAQnE,IAAM0uC,EAAO1uC,IACrBmE,EAAQ+pC,SAAW,KACZG,EAGT,IAAIpuC,EAAOyuC,EAAO1uC,IAElB,OAAMC,EAOFA,EAAKxB,MAGP0F,EAAQ+pC,EAAS6B,YAAc9vC,EAAKtB,MAGpCwF,EAAQ3F,KAAO0vC,EAAS8B,QAQD,WAAnB7rC,EAAQ2pC,SACV3pC,EAAQ2pC,OAAS,OACjB3pC,EAAQnE,IAAM3B,GAUlB8F,EAAQ+pC,SAAW,KACZG,GANEpuC,GA3BPkE,EAAQ2pC,OAAS,QACjB3pC,EAAQnE,IAAM,IAAIR,UAAU,oCAC5B2E,EAAQ+pC,SAAW,KACZG,GAoDX,SAAS4B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1vC,KAAKgwC,WAAW9xC,KAAKyxC,GAGvB,SAASM,EAAcN,GACrB,IAAIzB,EAASyB,EAAMO,YAAc,GACjChC,EAAO1oC,KAAO,gBACP0oC,EAAO1uC,IACdmwC,EAAMO,WAAahC,EAGrB,SAASf,EAAQJ,GAIf/sC,KAAKgwC,WAAa,CAAC,CAAEJ,OAAQ,SAC7B7C,EAAY3rC,QAAQquC,EAAczvC,MAClCA,KAAKmwC,OAAM,GA8Bb,SAASvB,EAAOwB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAShE,GAC9B,GAAIiE,EACF,OAAOA,EAAe3xC,KAAK0xC,GAG7B,GAA6B,oBAAlBA,EAASpyC,KAClB,OAAOoyC,EAGT,IAAKnlC,MAAMmlC,EAASpzC,QAAS,CAC3B,IAAIC,GAAK,EAAGe,EAAO,SAASA,IAC1B,OAASf,EAAImzC,EAASpzC,QACpB,GAAIkvC,EAAOxtC,KAAK0xC,EAAUnzC,GAGxB,OAFAe,EAAKG,MAAQiyC,EAASnzC,GACtBe,EAAKC,MAAO,EACLD,EAOX,OAHAA,EAAKG,MAAQN,EACbG,EAAKC,MAAO,EAELD,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMyvC,GAIjB,SAASA,IACP,MAAO,CAAEtvC,MAAON,EAAWI,MAAM,GA+MnC,OA7mBAqwC,EAAkB9vC,UAAY+vC,EAC9B9B,EAAOoC,EAAI,cAAeN,GAC1B9B,EAAO8B,EAA4B,cAAeD,GAClDA,EAAkB9gC,YAAci/B,EAC9B8B,EACAhC,EACA,qBAaF5vC,EAAQ2zC,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAO3xC,YAClD,QAAO4xC,IACHA,IAASlC,GAG2B,uBAAnCkC,EAAKhjC,aAAegjC,EAAK3xC,QAIhClC,EAAQ8zC,KAAO,SAASF,GAQtB,OAPI/yC,OAAOkzC,eACTlzC,OAAOkzC,eAAeH,EAAQhC,IAE9BgC,EAAOI,UAAYpC,EACnB9B,EAAO8D,EAAQhE,EAAmB,sBAEpCgE,EAAO/xC,UAAYhB,OAAOi9B,OAAOoU,GAC1B0B,GAOT5zC,EAAQi0C,MAAQ,SAASpxC,GACvB,MAAO,CAAE2vC,QAAS3vC,IAsEpBsvC,EAAsBC,EAAcvwC,WACpCiuC,EAAOsC,EAAcvwC,UAAW6tC,GAAqB,WACnD,OAAOrsC,QAETrD,EAAQoyC,cAAgBA,EAKxBpyC,EAAQk0C,MAAQ,SAAShE,EAASC,EAAS/sC,EAAMgtC,EAAaiC,QACxC,IAAhBA,IAAwBA,EAAcrvC,SAE1C,IAAImxC,EAAO,IAAI/B,EACbnC,EAAKC,EAASC,EAAS/sC,EAAMgtC,GAC7BiC,GAGF,OAAOryC,EAAQ2zC,oBAAoBxD,GAC/BgE,EACAA,EAAK9yC,OAAO4B,MAAK,SAASsvC,GACxB,OAAOA,EAAOjxC,KAAOixC,EAAO/wC,MAAQ2yC,EAAK9yC,WAuKjD8wC,EAAsBD,GAEtBpC,EAAOoC,EAAItC,EAAmB,aAO9BE,EAAOoC,EAAIzC,GAAgB,WACzB,OAAOpsC,QAGTysC,EAAOoC,EAAI,YAAY,WACrB,MAAO,wBAkCTlyC,EAAQ2E,KAAO,SAASyvC,GACtB,IAAIzvC,EAAO,GACX,IAAK,IAAI/B,KAAOwxC,EACdzvC,EAAKpD,KAAKqB,GAMZ,OAJA+B,EAAK0vC,UAIE,SAAShzC,IACd,KAAOsD,EAAKtE,QAAQ,CAClB,IAAIuC,EAAM+B,EAAK8pC,MACf,GAAI7rC,KAAOwxC,EAGT,OAFA/yC,EAAKG,MAAQoB,EACbvB,EAAKC,MAAO,EACLD,EAQX,OADAA,EAAKC,MAAO,EACLD,IAsCXrB,EAAQiyC,OAASA,EAMjBzB,EAAQ3uC,UAAY,CAClBI,YAAauuC,EAEbgD,MAAO,SAASc,GAcd,GAbAjxC,KAAKkxC,KAAO,EACZlxC,KAAKhC,KAAO,EAGZgC,KAAK8tC,KAAO9tC,KAAK+tC,MAAQlwC,EACzBmC,KAAK/B,MAAO,EACZ+B,KAAK0tC,SAAW,KAEhB1tC,KAAKstC,OAAS,OACdttC,KAAKR,IAAM3B,EAEXmC,KAAKgwC,WAAW5uC,QAAQ6uC,IAEnBgB,EACH,IAAK,IAAIpyC,KAAQmB,KAEQ,MAAnBnB,EAAK8V,OAAO,IACZu3B,EAAOxtC,KAAKsB,KAAMnB,KACjBoM,OAAOpM,EAAKF,MAAM,MACrBqB,KAAKnB,GAAQhB,IAMrBszC,KAAM,WACJnxC,KAAK/B,MAAO,EAEZ,IACImzC,EADYpxC,KAAKgwC,WAAW,GACLE,WAC3B,GAAwB,UAApBkB,EAAW5rC,KACb,MAAM4rC,EAAW5xC,IAGnB,OAAOQ,KAAKqxC,MAGdrD,kBAAmB,SAASsD,GAC1B,GAAItxC,KAAK/B,KACP,MAAMqzC,EAGR,IAAI3tC,EAAU3D,KACd,SAASuxC,EAAOC,EAAKC,GAYnB,OAXAvD,EAAO1oC,KAAO,QACd0oC,EAAO1uC,IAAM8xC,EACb3tC,EAAQ3F,KAAOwzC,EAEXC,IAGF9tC,EAAQ2pC,OAAS,OACjB3pC,EAAQnE,IAAM3B,KAGN4zC,EAGZ,IAAK,IAAIx0C,EAAI+C,KAAKgwC,WAAWhzC,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI0yC,EAAQ3vC,KAAKgwC,WAAW/yC,GACxBixC,EAASyB,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAO2B,EAAO,OAGhB,GAAI5B,EAAMC,QAAU5vC,KAAKkxC,KAAM,CAC7B,IAAIQ,EAAWxF,EAAOxtC,KAAKixC,EAAO,YAC9BgC,EAAazF,EAAOxtC,KAAKixC,EAAO,cAEpC,GAAI+B,GAAYC,EAAY,CAC1B,GAAI3xC,KAAKkxC,KAAOvB,EAAME,SACpB,OAAO0B,EAAO5B,EAAME,UAAU,GACzB,GAAI7vC,KAAKkxC,KAAOvB,EAAMG,WAC3B,OAAOyB,EAAO5B,EAAMG,iBAGjB,GAAI4B,GACT,GAAI1xC,KAAKkxC,KAAOvB,EAAME,SACpB,OAAO0B,EAAO5B,EAAME,UAAU,OAG3B,KAAI8B,EAMT,MAAM,IAAIztC,MAAM,0CALhB,GAAIlE,KAAKkxC,KAAOvB,EAAMG,WACpB,OAAOyB,EAAO5B,EAAMG,gBAU9B7B,OAAQ,SAASzoC,EAAMhG,GACrB,IAAK,IAAIvC,EAAI+C,KAAKgwC,WAAWhzC,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI0yC,EAAQ3vC,KAAKgwC,WAAW/yC,GAC5B,GAAI0yC,EAAMC,QAAU5vC,KAAKkxC,MACrBhF,EAAOxtC,KAAKixC,EAAO,eACnB3vC,KAAKkxC,KAAOvB,EAAMG,WAAY,CAChC,IAAI8B,EAAejC,EACnB,OAIAiC,IACU,UAATpsC,GACS,aAATA,IACDosC,EAAahC,QAAUpwC,GACvBA,GAAOoyC,EAAa9B,aAGtB8B,EAAe,MAGjB,IAAI1D,EAAS0D,EAAeA,EAAa1B,WAAa,GAItD,OAHAhC,EAAO1oC,KAAOA,EACd0oC,EAAO1uC,IAAMA,EAEToyC,GACF5xC,KAAKstC,OAAS,OACdttC,KAAKhC,KAAO4zC,EAAa9B,WAClBjC,GAGF7tC,KAAK6xC,SAAS3D,IAGvB2D,SAAU,SAAS3D,EAAQ6B,GACzB,GAAoB,UAAhB7B,EAAO1oC,KACT,MAAM0oC,EAAO1uC,IAcf,MAXoB,UAAhB0uC,EAAO1oC,MACS,aAAhB0oC,EAAO1oC,KACTxF,KAAKhC,KAAOkwC,EAAO1uC,IACM,WAAhB0uC,EAAO1oC,MAChBxF,KAAKqxC,KAAOrxC,KAAKR,IAAM0uC,EAAO1uC,IAC9BQ,KAAKstC,OAAS,SACdttC,KAAKhC,KAAO,OACa,WAAhBkwC,EAAO1oC,MAAqBuqC,IACrC/vC,KAAKhC,KAAO+xC,GAGPlC,GAGTiE,OAAQ,SAAShC,GACf,IAAK,IAAI7yC,EAAI+C,KAAKgwC,WAAWhzC,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI0yC,EAAQ3vC,KAAKgwC,WAAW/yC,GAC5B,GAAI0yC,EAAMG,aAAeA,EAGvB,OAFA9vC,KAAK6xC,SAASlC,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACP9B,IAKb,MAAS,SAAS+B,GAChB,IAAK,IAAI3yC,EAAI+C,KAAKgwC,WAAWhzC,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI0yC,EAAQ3vC,KAAKgwC,WAAW/yC,GAC5B,GAAI0yC,EAAMC,SAAWA,EAAQ,CAC3B,IAAI1B,EAASyB,EAAMO,WACnB,GAAoB,UAAhBhC,EAAO1oC,KAAkB,CAC3B,IAAIusC,EAAS7D,EAAO1uC,IACpBywC,EAAcN,GAEhB,OAAOoC,GAMX,MAAM,IAAI7tC,MAAM,0BAGlB8tC,cAAe,SAAS5B,EAAUb,EAAYC,GAa5C,OAZAxvC,KAAK0tC,SAAW,CACdnwC,SAAUqxC,EAAOwB,GACjBb,WAAYA,EACZC,QAASA,GAGS,SAAhBxvC,KAAKstC,SAGPttC,KAAKR,IAAM3B,GAGNgwC,IAQJlxC,EA9sBM,CAqtBgBD,EAAOC,SAGtC,IACEs1C,mBAAqBjG,EACrB,MAAOkG,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqBjG,EAEhCoG,SAAS,IAAK,yBAAdA,CAAwCpG,K,6BCvuB/BpvC,EAAQ,GAAiB,IAAIwI,EAAExI,EAAQ,GAASsI,EAAE,MAA6B,GAAvBvI,EAAQuF,SAAS,MAAS,oBAAoB5E,QAAQA,OAAOqF,IAAI,CAAC,IAAIsC,EAAE3H,OAAOqF,IAAIuC,EAAED,EAAE,iBAAiBtI,EAAQuF,SAAS+C,EAAE,kBAAkB,IAAII,EAAED,EAAEiC,mDAAmDR,kBAAkBtI,EAAEf,OAAOgB,UAAU6B,eAAe4B,EAAE,CAAC1C,KAAI,EAAGmF,KAAI,EAAGC,QAAO,EAAGC,UAAS,GACrW,SAASvC,EAAEY,EAAEF,EAAEiC,GAAG,IAAIhC,EAAE+B,EAAE,GAAGD,EAAE,KAAK9C,EAAE,KAAiF,IAAIgB,UAAhF,IAASgC,IAAIF,EAAE,GAAGE,QAAG,IAASjC,EAAExD,MAAMuF,EAAE,GAAG/B,EAAExD,UAAK,IAASwD,EAAE2B,MAAM1C,EAAEe,EAAE2B,KAAc3B,EAAExE,EAAEG,KAAKqE,EAAEC,KAAKf,EAAE5B,eAAe2C,KAAK+B,EAAE/B,GAAGD,EAAEC,IAAI,GAAGC,GAAGA,EAAEqC,aAAa,IAAItC,KAAKD,EAAEE,EAAEqC,kBAAe,IAASP,EAAE/B,KAAK+B,EAAE/B,GAAGD,EAAEC,IAAI,MAAM,CAACuC,SAASL,EAAEM,KAAKvC,EAAE1D,IAAIuF,EAAEJ,IAAI1C,EAAE0B,MAAMqB,EAAEU,OAAOJ,EAAEd,SAAS5H,EAAQ01C,IAAIhwC,EAAE1F,EAAQ21C,KAAKjwC,G,gBCRvR3F,EAAOC,QAG9D,WAET,SAAS41C,EAAWvrC,GAChB,OAAO,IAAIwrC,UAAUxrC,GAGzB,SAASyrC,EAAUzrC,GACf,OAAO,IAAI0rC,WAAW1rC,GAG1B,SAAS2rC,EAAU3rC,GACf,OAAO,IAAI4rC,WAAW5rC,GAG1B,SAAS6rC,EAAY7rC,GACjB,OAAO,IAAI8rC,aAAa9rC,GAG5B,SAAS+rC,EAAa/rC,GAClB,OAAO,IAAIgsC,aAAahsC,GAG5B,SAASisC,EAAchzC,GACnB,GAAmB,GAAfA,EAAKjD,OACL,OAAO61C,EAAY5yC,EAAK,IAE5B,IAAIizC,EAAKjzC,EAAK,GACdA,EAAOA,EAAKtB,MAAM,GAElB,IADA,IAAIwE,EAAI,GACClG,EAAI,EAAGA,EAAIi2C,EAAIj2C,IACpBkG,EAAEjF,KAAK+0C,EAAchzC,IAEzB,OAAOkD,EAEX,SAASgwC,EAAYlzC,GACjB,GAAmB,GAAfA,EAAKjD,OACL,OAAO21C,EAAU1yC,EAAK,IAE1B,IAAIizC,EAAKjzC,EAAK,GACdA,EAAOA,EAAKtB,MAAM,GAElB,IADA,IAAIwE,EAAI,GACClG,EAAI,EAAGA,EAAIi2C,EAAIj2C,IACpBkG,EAAEjF,KAAKi1C,EAAYlzC,IAEvB,OAAOkD,EAGX,SAASiwC,EAAYnzC,GACjB,GAAmB,GAAfA,EAAKjD,OACL,OAAOy1C,EAAUxyC,EAAK,IAE1B,IAAIizC,EAAKjzC,EAAK,GACdA,EAAOA,EAAKtB,MAAM,GAElB,IADA,IAAIwE,EAAI,GACClG,EAAI,EAAGA,EAAIi2C,EAAIj2C,IACpBkG,EAAEjF,KAAKk1C,EAAYnzC,IAEvB,OAAOkD,EAGX,SAASkwC,EAAcpzC,GACnB,GAAmB,GAAfA,EAAKjD,OACL,OAAO,IAAIG,MAAM8C,EAAK,IAE1B,IAAIizC,EAAKjzC,EAAK,GACdA,EAAOA,EAAKtB,MAAM,GAElB,IADA,IAAIwE,EAAI,GACClG,EAAI,EAAGA,EAAIi2C,EAAIj2C,IACpBkG,EAAEjF,KAAKm1C,EAAcpzC,IAEzB,OAAOkD,EAIX,IAAImwC,EAAW,CAEfA,KAAgB,SAAUvwC,EAAGwwC,EAAWC,EAAS/yC,GAC7C,GAAwB,GAApBP,UAAUlD,OACV,IAAK,IAAIC,EAAI,EAAGA,EAAI8F,EAAE/F,OAAQC,IAC1B8F,EAAE9F,GAAKiD,UAAU,QAGrB,IAASjD,EAAIs2C,EAAWt2C,EAAIu2C,EAASv2C,IACjC8F,EAAE9F,GAAKwD,IAKfgzC,EAAW,CAEfA,UAAqB,SAAUC,EAAKC,EAAQC,EAAMC,EAAS72C,GAEvD,IADA,IAAI82C,EAASH,EAAS32C,EACf22C,EAASG,GACZF,EAAKC,KAAaH,EAAIC,OAI1BI,EAAS,GAUb,SAASC,EAAaC,GAClBj0C,KAAKi0C,QAAUA,EAVnBF,EAAOG,MAAQ,mBACfH,EAAOI,WAAa,SAAUtxC,GAC1B,OAAO4a,KAAK22B,MAAMvxC,IAGtBkxC,EAAOM,aAAe,SAAUxxC,EAAGoD,GAC/B,OAAOwX,KAAK22B,MAAMvxC,GAAKoD,GAS3B+tC,EAAaM,oBAAsB,IAAIN,EAAa,GAIpDA,EAAaO,oBAAsB,IAAIP,EAAa,GAIpDA,EAAaQ,sBAAwB,IAAIR,EAAa,GAItDA,EAAaS,mBAAqB,IAAIT,EAAa,GAEnD,IAAIU,EAAU,GAGd,SAASC,EAAUV,GACfj0C,KAAKi0C,QAAUA,EAHnBS,EAAQE,UAAY,YAKpBD,EAAUE,QAAU,IAAIF,EAAU,GAClCA,EAAUG,OAAS,IAAIH,EAAU,GACjCA,EAAUI,OAAS,IAAIJ,EAAU,GACjCA,EAAUK,QAAU,IAAIL,EAAU,GAClCA,EAAUM,SAAW,IAAIN,EAAU,GACnCA,EAAUO,YAAcP,EAAUM,SAElC,IAIIE,EAAS,CACT,OAAU1B,EACV,QAAWkB,EACX,MAASD,EACT,WAAcV,EACd,KAAQD,EACR,OAAUT,EACV,YAAeD,EACf,SAAYd,EACZ,WAAcQ,EACd,UAAaF,EACb,YAAeI,EACf,QAAWN,EACX,UAAaQ,EACb,UAAaV,EACb,YAAeW,EACf,OApBW,SAAUvwC,MAsDrBuyC,EAAWD,EAAOE,OAClBC,EAASH,EAAOI,KAChBC,EAAWL,EAAOM,OAClBC,EAAcP,EAAOQ,UACzB,SAASC,IAER,IAAIC,EAAW,EACb,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBP,EAAOpB,MAAQ,GAAM,QACrC,WAAgBoB,EAAOpB,MAAQ,GAAM,QACrC,WAAeoB,EAAOpB,MAAQ,GAAM,QACpC,WAAeoB,EAAOpB,MAAQ,GAAM,QACpC,UAAcoB,EAAOpB,MAAQ,GAAM,QACnC,UAAcoB,EAAOpB,MAAQ,GAAM,QACnC,UAAcoB,EAAOpB,MAAQ,GAAM,QACnC,SAAaoB,EAAOpB,MAAQ,GAAM,QAElC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGE4B,EAAK,GACLC,EAAK,GAELC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAED,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBAED,CACC,EACA,EACA,EACA,EACA,EACA,EACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAIFC,EAAWD,EAAIE,EAAUC,YACzBC,EAAKJ,EAAIE,EAAUC,YACnB1sC,EAAKusC,EAAIE,EAAUC,YACnBE,EAAKL,EAAIE,EAAUC,YAanB5iC,EAAQ,CACR,EAAG,EAAG,GAAI,GAAI,E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AAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,OAAkB,CACd,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,G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U,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,QAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,QAAU,QAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,OAAU,OAAU,QAAU,OAAU,QAAU,OAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,QACtE,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,OACtE,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,OAAU,OAAU,QAAU,QACtE,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OACtE,OAAU,OAAU,OAAU,OAAU,QAAU,QAAU,OAAU,QACtE,QAAU,QAAU,QAAU,QAAU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","file":"static/js/2.2272fb2b.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.MicRecorder = factory());\n}(this, (function () {\n\nfunction new_byte$1(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int$1(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float$1(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double$1(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n$1(args) {\n    if (args.length == 1) {\n        return new_float$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n$1(args));\n    }\n    return A;\n}\nfunction new_int_n$1(args) {\n    if (args.length == 1) {\n        return new_int$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n$1(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n$1(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n$1(args));\n    }\n    return A;\n}\n\n\nvar Arrays$1 = {};\n\nArrays$1.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System$1 = {};\n\nSystem$1.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util$1 = {};\nUtil$1.SQRT2 = 1.41421356237309504880;\nUtil$1.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil$1.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock$1(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock$1.short_block_allowed = new ShortBlock$1(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock$1.short_block_coupled = new ShortBlock$1(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock$1.short_block_dispensed = new ShortBlock$1(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock$1.short_block_forced = new ShortBlock$1(3);\n\nvar Float$1 = {};\nFloat$1.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode$1(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode$1.vbr_off = new VbrMode$1(0);\nVbrMode$1.vbr_mt = new VbrMode$1(1);\nVbrMode$1.vbr_rh = new VbrMode$1(2);\nVbrMode$1.vbr_abr = new VbrMode$1(3);\nVbrMode$1.vbr_mtrh = new VbrMode$1(4);\nVbrMode$1.vbr_default = VbrMode$1.vbr_mtrh;\n\nvar assert$1 = function (x) {\n    //console.assert(x);\n};\n\nvar common = {\n    \"System\": System$1,\n    \"VbrMode\": VbrMode$1,\n    \"Float\": Float$1,\n    \"ShortBlock\": ShortBlock$1,\n    \"Util\": Util$1,\n    \"Arrays\": Arrays$1,\n    \"new_array_n\": new_array_n$1,\n    \"new_byte\": new_byte$1,\n    \"new_double\": new_double$1,\n    \"new_float\": new_float$1,\n    \"new_float_n\": new_float_n$1,\n    \"new_int\": new_int$1,\n    \"new_int_n\": new_int_n$1,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert$1\n};\n\n/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$6 = common.System;\nvar Util$6 = common.Util;\nvar Arrays$6 = common.Arrays;\nvar new_float$6 = common.new_float;\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder_1.SHORT_TYPE];\n\tvar cx = win[Encoder_1.SHORT_TYPE];\n\tvar ca = win[Encoder_1.SHORT_TYPE];\n\tvar cs = win[Encoder_1.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util$6.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util$6.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util$6.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util$6.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util$6.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util$6.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util$6.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util$6.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util$6.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util$6.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder_1.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder_1.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays$6.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder_1.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float$6(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder_1.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem$6.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nvar NewMDCT_1 = NewMDCT;\n\nvar System$7 = common.System;\nvar new_float$7 = common.new_float;\nvar new_float_n$7 = common.new_float_n;\nfunction III_psy_xmin() {\n    this.l = new_float$7(Encoder_1.SBMAX_l);\n    this.s = new_float_n$7([Encoder_1.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System$7.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder_1.SBMAX_l);\n        for (var i = 0; i < Encoder_1.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    };\n}\n\nvar III_psy_xmin_1 = III_psy_xmin;\n\n//package mp3;\n\n\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin_1();\n\tthis.en = new III_psy_xmin_1();\n}\n\nvar III_psy_ratio_1 = III_psy_ratio;\n\nvar System$5 = common.System;\nvar VbrMode$5 = common.VbrMode;\nvar new_array_n$5 = common.new_array_n;\nvar new_float$5 = common.new_float;\nvar new_float_n$5 = common.new_float_n;\nvar new_int$5 = common.new_int;\nvar assert$5 = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder$2.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder$2.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder$2.MDCTDELAY = 48;\nEncoder$2.FFTOFFSET = (224 + Encoder$2.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder$2.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder$2.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder$2.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder$2.SBPSY_l = 21;\nEncoder$2.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder$2.SBMAX_l = 22;\nEncoder$2.SBMAX_s = 13;\nEncoder$2.PSFB21 = 6;\nEncoder$2.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder$2.BLKSIZE = 1024;\nEncoder$2.HBLKSIZE = (Encoder$2.BLKSIZE / 2 + 1);\nEncoder$2.BLKSIZE_s = 256;\nEncoder$2.HBLKSIZE_s = (Encoder$2.BLKSIZE_s / 2 + 1);\n\nEncoder$2.NORM_TYPE = 0;\nEncoder$2.START_TYPE = 1;\nEncoder$2.SHORT_TYPE = 2;\nEncoder$2.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder$2.MPG_MD_LR_LR = 0;\nEncoder$2.MPG_MD_LR_I = 1;\nEncoder$2.MPG_MD_MS_LR = 2;\nEncoder$2.MPG_MD_MS_I = 3;\n\nEncoder$2.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder$2() {\n    var NewMDCT = NewMDCT_1;\n    var III_psy_ratio = III_psy_ratio_1;\n\n    var FFTOFFSET = Encoder$2.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder$2.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert$5(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert$5(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float$5(286 + 1152 + 576);\n            var primebuff1 = new_float$5(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert$5(576 >= Encoder$2.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert$5(gfc.mf_size >= (Encoder$2.BLKSIZE + gfp.framesize - Encoder$2.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert$5(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n$5([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n$5([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n$5([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int$5(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder$2.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode$5.vbr_mtrh || gfp.VBR == VbrMode$5.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder$2.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System$5.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System$5.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode$5.vbr_off || gfp.VBR == VbrMode$5.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder$2.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    };\n}\n\n\nvar Encoder_1 = Encoder$2;\n\nvar Util$4 = common.Util;\nvar new_float$4 = common.new_float;\nfunction FFT() {\n\n    var window = new_float$4(Encoder_1.BLKSIZE);\n    var window_s = new_float$4(Encoder_1.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util$4.SQRT2 * fz[gi + k3]);\n                f2 = (Util$4.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder_1.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder_1.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder_1.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    };\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder_1.BLKSIZE / 8 - 1;\n        var x = Encoder_1.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder_1.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder_1.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder_1.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    };\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder_1.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE));\n\n        for (var i = 0; i < Encoder_1.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder_1.BLKSIZE_s)));\n\n    };\n\n}\n\nvar FFT_1 = FFT;\n\nvar VbrMode$3 = common.VbrMode;\nvar Float$3 = common.Float;\nvar ShortBlock$3 = common.ShortBlock;\nvar Util$3 = common.Util;\nvar Arrays$3 = common.Arrays;\nvar new_float$3 = common.new_float;\nvar new_float_n$3 = common.new_float_n;\nvar new_int$3 = common.new_int;\nvar assert$3 = common.assert;\n\n\n\n\nfunction PsyModel() {\n\n    var fft = new FFT_1();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder_1.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder_1.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util$3.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert$3(m1 >= 0);\n        assert$3(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util$3.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert$3(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util$3.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert$3(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder_1.BLKSIZE_s / Encoder_1.BLKSIZE);\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert$3(thr[b] >= 0);\n        }\n        for (; b <= Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype[chn] = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert$3(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert$3(x > 0);\n                            pe_s += regcoef_s[sb] * Util$3.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert$3(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert$3(x > 0);\n                        pe_l += regcoef_l[sb] * Util$3.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert$3(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert$3(gfc.rnumlines_l[b] >= 0);\n            assert$3(ebb >= 0);\n            assert$3(eb[b] >= 0);\n            assert$3(max[b] >= 0);\n            assert$3(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float$3(Encoder_1.CBANDS + 1);\n        var eb_s = new_float$3(Encoder_1.CBANDS + 1);\n        var thr = new_float$3(Encoder_1.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int$3(2), uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2), mask_idx_s = new_int$3(Encoder_1.CBANDS + 2);\n\n        Arrays$3.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode$3.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode$3.vbr_rh || gfp.VBR == VbrMode$3.vbr_mtrh\n            || gfp.VBR == VbrMode$3.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float$3(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n            var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert$3(gfc.npart_s <= Encoder_1.CBANDS);\n            assert$3(gfc.npart_l <= Encoder_1.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert$3(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert$3(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert$3(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert$3(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder_1.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    };\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float$3(12);\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert$3(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert$3(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(b + 1 < gfc.npart_s);\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder_1.CBANDS], avg = new_float$3(Encoder_1.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder_1.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert$3(ebb >= 0);\n            max[b] = m;\n            assert$3(n > 0);\n            avg[b] = ebb / n;\n            assert$3(avg[b] >= 0);\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (; b < Encoder_1.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder_1.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder_1.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n        var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n        var eb = new_float_n$3([4, Encoder_1.CBANDS]), thr = new_float_n$3([4, Encoder_1.CBANDS]);\n        var sub_short_factor = new_float_n$3([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    var new_thmm = new_float$3(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    };\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float$3(Encoder_1.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int$3(Encoder_1.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder_1.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert$3(j < Encoder_1.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert$3(i < Encoder_1.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n$3([Encoder_1.CBANDS, Encoder_1.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float$3(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float$3(Encoder_1.CBANDS);\n        var bval_width = new_float$3(Encoder_1.CBANDS);\n        var norm = new_float$3(Encoder_1.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode$3.vbr_mtrh || gfp.VBR == VbrMode$3.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder_1.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder_1.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder_1.BLKSIZE, gfc.scalefac_band.l, Encoder_1.BLKSIZE\n            / (2.0 * 576), Encoder_1.SBMAX_l);\n        assert$3(gfc.npart_l < Encoder_1.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder_1.BLKSIZE_s, gfc.scalefac_band.s, Encoder_1.BLKSIZE_s\n            / (2.0 * 192), Encoder_1.SBMAX_s);\n        assert$3(gfc.npart_s < Encoder_1.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert$3(gfc.bo_l[Encoder_1.SBMAX_l - 1] <= gfc.npart_l);\n        assert$3(gfc.bo_s[Encoder_1.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder_1.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder_1.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder_1.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder_1.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder_1.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    };\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    };\n\n}\n\nvar PsyModel_1 = PsyModel;\n\n//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode$1(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    };\n}\n\nMPEGMode$1.STEREO = new MPEGMode$1(0);\nMPEGMode$1.JOINT_STEREO = new MPEGMode$1(1);\nMPEGMode$1.DUAL_CHANNEL = new MPEGMode$1(2);\nMPEGMode$1.MONO = new MPEGMode$1(3);\nMPEGMode$1.NOT_SET = new MPEGMode$1(4);\n\nvar MPEGMode_1 = MPEGMode$1;\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode_1.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nvar LameGlobalFlags_1 = LameGlobalFlags;\n\nvar L3Side$1 = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side$1.SFBMAX = (Encoder_1.SBMAX_s * 3);\n\nvar L3Side_1 = L3Side$1;\n\nvar new_float$10 = common.new_float;\nvar new_int$10 = common.new_int;\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float$10(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int$10(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int$10(L3Side_1.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int$10(3);\n    this.subblock_gain = new_int$10(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int$10(L3Side_1.SFBMAX);\n    this.window = new_int$10(L3Side_1.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int$10(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    };\n}\n\nvar GrInfo_1 = GrInfo;\n\nvar new_int$9 = common.new_int;\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int$9(4), new_int$9(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo_1();\n        }\n    }\n}\n\nvar IIISideInfo_1 = IIISideInfo;\n\n//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\n\nvar System$11 = common.System;\nvar new_int$11 = common.new_int;\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int$11(1 + Encoder_1.SBMAX_l);\n    this.s = new_int$11(1 + Encoder_1.SBMAX_s);\n    this.psfb21 = new_int$11(1 + Encoder_1.PSFB21);\n    this.psfb12 = new_int$11(1 + Encoder_1.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System$11.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System$11.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System$11.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System$11.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nvar ScaleFac_1 = ScaleFac;\n\nvar new_float$12 = common.new_float;\nvar new_float_n$12 = common.new_float_n;\nvar new_int$12 = common.new_int;\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n$12([4, 9]);\n    this.lastAttacks = new_int$12(4);\n    this.pefirbuf = new_float$12(19);\n    this.longfact = new_float$12(Encoder_1.SBMAX_l);\n    this.shortfact = new_float$12(Encoder_1.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nvar NsPsy_1 = NsPsy;\n\n//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nvar VBRSeekInfo_1 = VBRSeekInfo;\n\nvar new_byte$8 = common.new_byte;\nvar new_double$8 = common.new_double;\nvar new_float$8 = common.new_float;\nvar new_float_n$8 = common.new_float_n;\nvar new_int$8 = common.new_int;\nvar new_int_n$8 = common.new_int_n;\nLameInternalFlags$1.MFSIZE = (3 * 1152 + Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY);\nLameInternalFlags$1.MAX_HEADER_BUF = 256;\nLameInternalFlags$1.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags$1.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags$1.BPC = 320;\n\nfunction LameInternalFlags$1() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n$8([2, LameInternalFlags$1.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo_1();\n    this.ms_ratio = new_float$8(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int$8(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int$8(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int$8(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int$8(L3Side_1.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags$1.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double$8(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n$8([2, 2, 18, Encoder_1.SBLIMIT]);\n    this.amp_filter = new_float$8(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte$8(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags$1.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac_1();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float$8(Encoder_1.CBANDS);\n    this.minval_s = new_float$8(Encoder_1.CBANDS);\n    this.nb_1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float$8(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n$8([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float$8(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float$8(Encoder_1.SBMAX_l);\n    this.mld_s = new_float$8(Encoder_1.SBMAX_s);\n    this.bm_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bo_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bm_s = new_int$8(Encoder_1.SBMAX_s);\n    this.bo_s = new_int$8(Encoder_1.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n$8([Encoder_1.CBANDS, 2]);\n    this.s3ind_s = new_int_n$8([Encoder_1.CBANDS, 2]);\n\n    this.numlines_s = new_int$8(Encoder_1.CBANDS);\n    this.numlines_l = new_int$8(Encoder_1.CBANDS);\n    this.rnumlines_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_s = new_float$8(Encoder_1.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float$8(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int$8(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy_1();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo_1();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n$8([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n$8([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nvar LameInternalFlags_1 = LameInternalFlags$1;\n\nvar new_float$13 = common.new_float;\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float$13(Encoder_1.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float$13(Encoder_1.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float$13(Encoder_1.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float$13(Encoder_1.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float$13(Encoder_1.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float$13(Encoder_1.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float$13(Encoder_1.BLKSIZE / 2);\n}\n\nvar ATH_1 = ATH;\n\n/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\n\nvar System$15 = common.System;\nvar Arrays$15 = common.Arrays;\n/**\n * Table entries per dB\n */\nGainAnalysis$1.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis$1.MAX_dB = 120.;\nGainAnalysis$1.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis$1.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.GAIN_ANALYSIS_OK = 1;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis$1.YULE_ORDER = 10;\nGainAnalysis$1.MAX_ORDER = GainAnalysis$1.YULE_ORDER;\n\nGainAnalysis$1.MAX_SAMP_FREQ = 48000;\nGainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis$1.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis$1.MAX_SAMP_FREQ * GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis$1() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis$1.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis$1.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis$1.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays$15.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays$15.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis$1.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System$15.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis$1.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    };\n\n}\n\nvar GainAnalysis_1 = GainAnalysis$1;\n\nvar new_float$14 = common.new_float;\nvar new_int$14 = common.new_int;\nfunction ReplayGain() {\n    this.linprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n    this.B = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n\n}\n\nvar ReplayGain_1 = ReplayGain;\n\nfunction MeanBits$1(meanBits) {\n    this.bits = meanBits;\n}\n\nvar MeanBits_1 = MeanBits$1;\n\nvar new_float$16 = common.new_float;\nvar new_int$16 = common.new_int;\nvar assert$16 = common.assert;\n\n\n\n\n\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float$16(L3Side_1.SFBMAX);\n\t\tvar xrpow = new_float$16(576);\n\t\tvar targ_bits = new_int$16(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits_1(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t};\n}\nvar CBRNewIterationLoop_1 = CBRNewIterationLoop;\n\nfunction HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables$1 = {};\n\n\nTables$1.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables$1.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables$1.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables$1.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables$1.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables$1.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables$1.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables$1.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables$1.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables$1.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables$1.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables$1.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables$1.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables$1.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables$1.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables$1.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables$1.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables$1.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables$1.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables$1.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables$1.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables$1.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables$1.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables$1.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables$1.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables$1.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables$1.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables$1.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables$1.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables$1.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables$1.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables$1.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables$1.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables$1.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables$1.t1HB, Tables$1.t1l),\n    new HuffCodeTab(3, 0, Tables$1.t2HB, Tables$1.t2l),\n    new HuffCodeTab(3, 0, Tables$1.t3HB, Tables$1.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables$1.t5HB, Tables$1.t5l),\n    new HuffCodeTab(4, 0, Tables$1.t6HB, Tables$1.t6l),\n    new HuffCodeTab(6, 0, Tables$1.t7HB, Tables$1.t7l),\n    new HuffCodeTab(6, 0, Tables$1.t8HB, Tables$1.t8l),\n    new HuffCodeTab(6, 0, Tables$1.t9HB, Tables$1.t9l),\n    new HuffCodeTab(8, 0, Tables$1.t10HB, Tables$1.t10l),\n    new HuffCodeTab(8, 0, Tables$1.t11HB, Tables$1.t11l),\n    new HuffCodeTab(8, 0, Tables$1.t12HB, Tables$1.t12l),\n    new HuffCodeTab(16, 0, Tables$1.t13HB, Tables$1.t13l),\n    new HuffCodeTab(0, 0, null, Tables$1.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables$1.t15HB, Tables$1.t15l),\n\n    new HuffCodeTab(1, 1, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(2, 3, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(3, 7, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(4, 15, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(6, 63, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(8, 255, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(10, 1023, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(13, 8191, Tables$1.t16HB, Tables$1.t16l),\n\n    new HuffCodeTab(4, 15, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(5, 31, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(6, 63, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(7, 127, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(8, 255, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(9, 511, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(11, 2047, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(13, 8191, Tables$1.t24HB, Tables$1.t24l),\n\n    new HuffCodeTab(0, 0, Tables$1.t32HB, Tables$1.t32l),\n    new HuffCodeTab(0, 0, Tables$1.t33HB, Tables$1.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables$1.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables$1.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables$1.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables$1.scfsi_band = [0, 6, 11, 16, 21];\n\nvar Tables_1 = Tables$1;\n\nvar VbrMode$19 = common.VbrMode;\nvar Float$19 = common.Float;\nvar Util$19 = common.Util;\nvar new_float$19 = common.new_float;\nvar new_int$19 = common.new_int;\nvar assert$19 = common.assert;\n\n\n\n\n\nQuantizePVT$1.Q_MAX = (256 + 1);\nQuantizePVT$1.Q_MAX2 = 116;\nQuantizePVT$1.LARGE_BITS = 100000;\nQuantizePVT$1.IXMAX_VAL = 8206;\n\nfunction QuantizePVT$1() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert$19(0 <= (x + QuantizePVT$1.Q_MAX2) && x < QuantizePVT$1.Q_MAX);\n        return pow20[x + QuantizePVT$1.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert$19(0 <= x && x < QuantizePVT$1.Q_MAX);\n        return ipow20[x];\n    };\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT$1.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT$1.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT$1.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT$1.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac_1([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float$19(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float$19(Q_MAX);\n    var pow43 = new_float$19(PRECALC_SIZE);\n\n    var adj43 = new_float$19(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder_1.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder_1.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    };\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int$19(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits_1(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags_1.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags_1.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert$19(sum <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    };\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert$19(max_bits <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert$19(targ_bits[0] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util$19.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util$19.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode$19.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode$19.vbr_mtrh || gfp.VBR == VbrMode$19.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder_1.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder_1.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float$19(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    };\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util$19.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    };\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float$19(L3Side.SFBMAX);\n        var xfsf = new_float$19(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder_1.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert$19(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder_1.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    };\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    \n\n}\n\nvar QuantizePVT_1 = QuantizePVT$1;\n\n/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$18 = common.System;\nvar Arrays$18 = common.Arrays;\nvar new_int$18 = common.new_int;\nvar assert$18 = common.assert;\n\n\n\n\n\n\n\nfunction Takehiro$1() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    };\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert$18(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert$18(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder_1.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder_1.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert$18(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays$18.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables_1.ht[t1].xlen * 65536 + Tables_1.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables_1.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables_1.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables_1.table23;\n        else\n            hlen = Tables_1.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen1 = Tables_1.ht[t1].hlen;\n        var hlen2 = Tables_1.ht[t1 + 1].hlen;\n        var hlen3 = Tables_1.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT_1.IXMAX_VAL) {\n                    s.bits = QuantizePVT_1.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables_1.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables_1.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder_1.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder_1.NORM_TYPE) {\n            assert$18(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert$18(a1 + a2 + 2 < Encoder_1.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder_1.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert$18(a1 >= 0);\n        assert$18(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder_1.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    };\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT_1.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT_1.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert$18(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    };\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT_1.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder_1.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo_1();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int$18(7 + 15 + 1);\n        var r01_div = new_int$18(7 + 15 + 1);\n        var r0_tbl = new_int$18(7 + 15 + 1);\n        var r1_tbl = new_int$18(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder_1.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder_1.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert$18(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder_1.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    };\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro$1.slen1_tab = slen1_tab;\n    Takehiro$1.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables_1.scfsi_band.length - 1; i++) {\n            for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables_1.scfsi_band[i + 1]) {\n                for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder_1.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert$18(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder_1.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder_1.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder_1.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder_1.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    };\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert$18(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder_1.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT_1.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT_1.LARGE_BITS;\n    };\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int$18(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System$18.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert$18(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    };\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    };\n}\n\nvar Takehiro_1 = Takehiro$1;\n\nvar System$17 = common.System;\nvar Arrays$17 = common.Arrays;\nvar new_byte$17 = common.new_byte;\nvar new_float_n$17 = common.new_float_n;\nvar new_int$17 = common.new_int;\nvar assert$17 = common.assert;\n\n\n\n\n\n\nBitStream$1.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream$1.NEQ = function (a, b) {\n    return !BitStream$1.EQ(a, b);\n};\n\nfunction BitStream$1() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables_1.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert$17(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System$17.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert$17(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert$17(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert$17(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert$17(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays$17.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder_1.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder_1.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert$17(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System$17.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables_1.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert$17(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables_1.ht[tableindex];\n        var bits = 0;\n\n        assert$17(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert$17(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert$17(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert$17((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert$17(cbits <= MAX_LENGTH);\n            assert$17(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert$17(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro_1.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro_1.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert$17(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert$17(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert$17(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert$17(data_bits == gi.part2_3_length);\n                assert$17(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags_1.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System$17.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert$17(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert$17(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System$17.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System$17.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System$17.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System$17.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System$17.err.println(\" 9%%  Your system is overclocked\");\n            System$17.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert$17(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System$17.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int$17(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n$17([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert$17(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte$17(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nvar BitStream_1 = BitStream$1;\n\nvar System$2 = common.System;\nvar VbrMode$2 = common.VbrMode;\nvar ShortBlock$2 = common.ShortBlock;\nvar new_float$2 = common.new_float;\nvar new_int_n$2 = common.new_int_n;\nvar new_short_n$1 = common.new_short_n;\nvar assert$2 = common.assert;\n\n\n\n\n\n\n\n\n\n\n\nfunction Lame$1() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame$1.V9 = 410;\n    Lame$1.V8 = 420;\n    Lame$1.V7 = 430;\n    Lame$1.V6 = 440;\n    Lame$1.V5 = 450;\n    Lame$1.V4 = 460;\n    Lame$1.V3 = 470;\n    Lame$1.V2 = 480;\n    Lame$1.V1 = 490;\n    Lame$1.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame$1.R3MIX = 1000;\n    Lame$1.STANDARD = 1001;\n    Lame$1.EXTREME = 1002;\n    Lame$1.INSANE = 1003;\n    Lame$1.STANDARD_FAST = 1004;\n    Lame$1.EXTREME_FAST = 1005;\n    Lame$1.MEDIUM = 1006;\n    Lame$1.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame$1.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel_1();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder_1();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    };\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float$2(Encoder_1.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float$2(Encoder_1.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags_1();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode$2.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags_1();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    };\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    };\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables_1.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables_1.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables_1.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Tables_1.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System$2.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n$2([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n$2([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH_1();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain_1();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder_1.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_mtrh\n            || gfp.VBR == VbrMode$2.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream_1.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode$2.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode$2.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder_1.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode$2.vbr_mt:\n            case VbrMode$2.vbr_rh:\n            case VbrMode$2.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode$2.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder_1.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder_1.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder_1.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder_1.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder_1.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder_1.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder_1.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder_1.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert$2(gfp.VBR_q <= 9);\n        assert$2(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode$2.vbr_mt:\n                gfp.VBR = VbrMode$2.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode$2.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode$2.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode$2.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode$2.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop_1(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert$2(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode$2.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert$2(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock$2.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock$2.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock$2.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel_1.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel_1.NSATTACKTHRE_S;\n\n        assert$2(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode$2.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert$2(gfp.scale >= 0);\n        return 0;\n    };\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float$2(nsamples);\n            gfc.in_buffer_1 = new_float$2(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n$1([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder_1.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    };\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder_1.BLKSIZE + gfp.framesize - Encoder_1.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert$2(LameInternalFlags_1.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream_1.NEQ(gfp.scale, 0) && BitStream_1.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream_1.NEQ(gfp.scale_left, 0)\n            && BitStream_1.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream_1.NEQ(gfp.scale_right, 0)\n            && BitStream_1.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert$2(gfc.mf_size <= LameInternalFlags_1.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert$2(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags_1.BPC)\n            bpc = LameInternalFlags_1.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float$2(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float$2(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float$2(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert$2(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert$2(j2 < len);\n                assert$2(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert$2(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nvar Lame_1 = Lame$1;\n\nvar VbrMode$20 = common.VbrMode;\nfunction Presets$1() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode$20.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode$20.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode$20.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    };\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nvar Presets_1 = Presets$1;\n\nfunction VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    };\n    //TODO\n\n}\n\nvar VBRQuantize_1 = VBRQuantize;\n\n//package mp3;\n\nfunction CalcNoiseResult$1() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nvar CalcNoiseResult_1 = CalcNoiseResult$1;\n\nvar new_float$22 = common.new_float;\nvar new_int$22 = common.new_int;\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int$22(39);\n    this.noise = new_float$22(39);\n    this.noise_log = new_float$22(39);\n}\n\nvar CalcNoiseData_1 = CalcNoiseData;\n\n/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$21 = common.System;\nvar VbrMode$21 = common.VbrMode;\nvar Util$21 = common.Util;\nvar Arrays$21 = common.Arrays;\nvar new_float$21 = common.new_float;\nvar assert$21 = common.assert;\n\n\n\n\n\n\n\n\nfunction Quantize$1() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize_1();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    };\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util$21.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util$21.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert$21(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert$21(0 <= upper && upper <= 575);\n\n        Arrays$21.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays$21.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    };\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder_1.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder_1.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder_1.SBPSY_l;\n        cod_info.sfb_smin = Encoder_1.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder_1.SBMAX_l : Encoder_1.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            var ixwork = new_float$21(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder_1.SBMAX_s : Encoder_1.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder_1.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System$21.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays$21.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert$21(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert$21(cod_info.global_gain >= 0);\n        assert$21(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float$21(L3Side_1.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder_1.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult_1(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder_1.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays$21.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util$21.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert$21(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays$21.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder_1.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo_1();\n        var save_xrpow = new_float$21(576);\n        var distort = new_float$21(L3Side_1.SFBMAX);\n        var best_noise_info = new CalcNoiseResult_1();\n        var better;\n        var prev_noise = new CalcNoiseData_1();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult_1();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder_1.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert$21((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode$21.vbr_rh || gfp.VBR == VbrMode$21.vbr_mtrh)\n        /* restore for reuse on next try */\n            System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    };\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo_1();\n        var bst_xrpow = new_float$21(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert$21(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays$21.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert$21(this_bits >= min_bits);\n            assert$21(this_bits <= max_bits);\n            assert$21(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System$21.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System$21.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System$21.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert$21(cod_info.part2_3_length <= Max_bits);\n    };\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder_1.SBMAX_l / Encoder_1.SBMAX_l;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    };\n\n}\n\nvar Quantize_1 = Quantize$1;\n\n/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\n\nvar assert$23 = common.assert;\n\nfunction Reservoir$1() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t};\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert$23 (0 == gfc.ResvMax % 8);\n\t\tassert$23 (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t};\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t};\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t};\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert$23 (0 == over_bits % 8);\n\t\t\tassert$23 (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t};\n}\n\nvar Reservoir_1 = Reservoir$1;\n\nfunction Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    };\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    };\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    };\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    };\n\n}\n\nvar Version_1 = Version;\n\nvar System$22 = common.System;\nvar VbrMode$22 = common.VbrMode;\nvar ShortBlock$22 = common.ShortBlock;\nvar Arrays$22 = common.Arrays;\nvar new_byte$22 = common.new_byte;\nvar assert$24 = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert$24(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    };\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    };\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte$22(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    };\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    };\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock$22.short_block_forced\n            || gfp.short_blocks == ShortBlock$22.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte$22(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays$22.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte$22(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode$22.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System$22.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    };\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte$22(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    };\n\n}\n\nvar VBRTag_1 = VBRTag;\n\nvar new_byte = common.new_byte;\nvar assert = common.assert;\n\nLame = Lame_1;\nPresets = Presets_1;\nGainAnalysis = GainAnalysis_1;\nQuantizePVT = QuantizePVT_1;\nQuantize = Quantize_1;\nTakehiro = Takehiro_1;\nReservoir = Reservoir_1;\nMPEGMode = MPEGMode_1;\nBitStream = BitStream_1;\n\n\n\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    };\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    };\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    };\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag_1();\n    var ver = new Version_1();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nvar Mp3Encoder_1 = Mp3Encoder;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar Encoder = function () {\n  function Encoder(config) {\n    classCallCheck(this, Encoder);\n\n    this.config = {\n      sampleRate: 44100,\n      bitRate: 128\n    };\n\n    Object.assign(this.config, config);\n\n    this.mp3Encoder = new Mp3Encoder_1(1, this.config.sampleRate, this.config.bitRate);\n\n    // Audio is processed by frames of 1152 samples per audio channel\n    // http://lame.sourceforge.net/tech-FAQ.txt\n    this.maxSamples = 1152;\n\n    this.samplesMono = null;\n    this.clearBuffer();\n  }\n\n  /**\n   * Clear active buffer\n   */\n\n\n  createClass(Encoder, [{\n    key: 'clearBuffer',\n    value: function clearBuffer() {\n      this.dataBuffer = [];\n    }\n\n    /**\n     * Append new audio buffer to current active buffer\n     * @param {Buffer} buffer\n     */\n\n  }, {\n    key: 'appendToBuffer',\n    value: function appendToBuffer(buffer) {\n      this.dataBuffer.push(new Int8Array(buffer));\n    }\n\n    /**\n     * Float current data to 16 bits PCM\n     * @param {Float32Array} input\n     * @param {Int16Array} output\n     */\n\n  }, {\n    key: 'floatTo16BitPCM',\n    value: function floatTo16BitPCM(input, output) {\n      for (var i = 0; i < input.length; i++) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output[i] = s < 0 ? s * 0x8000 : s * 0x7FFF;\n      }\n    }\n\n    /**\n     * Convert buffer to proper format\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'convertBuffer',\n    value: function convertBuffer(arrayBuffer) {\n      var data = new Float32Array(arrayBuffer);\n      var out = new Int16Array(arrayBuffer.length);\n      this.floatTo16BitPCM(data, out);\n\n      return out;\n    }\n\n    /**\n     * Encode and append current buffer to dataBuffer\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(arrayBuffer) {\n      this.samplesMono = this.convertBuffer(arrayBuffer);\n      var remaining = this.samplesMono.length;\n\n      for (var i = 0; remaining >= 0; i += this.maxSamples) {\n        var left = this.samplesMono.subarray(i, i + this.maxSamples);\n        var mp3buffer = this.mp3Encoder.encodeBuffer(left);\n        this.appendToBuffer(mp3buffer);\n        remaining -= this.maxSamples;\n      }\n    }\n\n    /**\n     * Return full dataBuffer\n     */\n\n  }, {\n    key: 'finish',\n    value: function finish() {\n      this.appendToBuffer(this.mp3Encoder.flush());\n\n      return this.dataBuffer;\n    }\n  }]);\n  return Encoder;\n}();\n\nvar MicRecorder = function () {\n  function MicRecorder(config) {\n    classCallCheck(this, MicRecorder);\n\n    this.config = {\n      // 128 or 160 kbit/s – mid-range bitrate quality\n      bitRate: 128,\n\n      // There is a known issue with some macOS machines, where the recording\n      // will sometimes have a loud 'pop' or 'pop-click' sound. This flag\n      // prevents getting audio from the microphone a few milliseconds after\n      // the begining of the recording. It also helps to remove the mouse\n      // \"click\" sound from the output mp3 file.\n      startRecordingAt: 300,\n      deviceId: null\n    };\n\n    this.activeStream = null;\n    this.context = null;\n    this.microphone = null;\n    this.processor = null;\n    this.startTime = 0;\n\n    Object.assign(this.config, config);\n  }\n\n  /**\n   * Starts to listen for the microphone sound\n   * @param {MediaStream} stream\n   */\n\n\n  createClass(MicRecorder, [{\n    key: 'addMicrophoneListener',\n    value: function addMicrophoneListener(stream) {\n      var _this = this;\n\n      this.activeStream = stream;\n\n      // This prevents the weird noise once you start listening to the microphone\n      this.timerToStart = setTimeout(function () {\n        delete _this.timerToStart;\n      }, this.config.startRecordingAt);\n\n      // Set up Web Audio API to process data from the media stream (microphone).\n      this.microphone = this.context.createMediaStreamSource(stream);\n\n      // Settings a bufferSize of 0 instructs the browser to choose the best bufferSize\n      this.processor = this.context.createScriptProcessor(0, 1, 1);\n\n      // Add all buffers from LAME into an array.\n      this.processor.onaudioprocess = function (event) {\n        if (_this.timerToStart) {\n          return;\n        }\n\n        // Send microphone data to LAME for MP3 encoding while recording.\n        _this.lameEncoder.encode(event.inputBuffer.getChannelData(0));\n      };\n\n      // Begin retrieving microphone data.\n      this.microphone.connect(this.processor);\n      this.processor.connect(this.context.destination);\n    }\n  }, {\n    key: 'stop',\n\n\n    /**\n     * Disconnect microphone, processor and remove activeStream\n     */\n    value: function stop() {\n      if (this.processor && this.microphone) {\n        // Clean up the Web Audio API resources.\n        this.microphone.disconnect();\n        this.processor.disconnect();\n\n        // If all references using this.context are destroyed, context is closed\n        // automatically. DOMException is fired when trying to close again\n        if (this.context && this.context.state !== 'closed') {\n          this.context.close();\n        }\n\n        this.processor.onaudioprocess = null;\n\n        // Stop all audio tracks. Also, removes recording icon from chrome tab\n        this.activeStream.getAudioTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: 'start',\n\n\n    /**\n     * Requests access to the microphone and start recording\n     * @return Promise\n     */\n    value: function start() {\n      var _this2 = this;\n\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.context = new AudioContext();\n      this.config.sampleRate = this.context.sampleRate;\n      this.lameEncoder = new Encoder(this.config);\n\n      var audio = this.config.deviceId ? { deviceId: { exact: this.config.deviceId } } : true;\n\n      return new Promise(function (resolve, reject) {\n        navigator.mediaDevices.getUserMedia({ audio: audio }).then(function (stream) {\n          _this2.addMicrophoneListener(stream);\n          resolve(stream);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'getMp3',\n\n\n    /**\n     * Return Mp3 Buffer and Blob with type mp3\n     * @return {Promise}\n     */\n    value: function getMp3() {\n      var _this3 = this;\n\n      var finalBuffer = this.lameEncoder.finish();\n\n      return new Promise(function (resolve, reject) {\n        if (finalBuffer.length === 0) {\n          reject(new Error('No buffer to send'));\n        } else {\n          resolve([finalBuffer, new Blob(finalBuffer, { type: 'audio/mp3' })]);\n          _this3.lameEncoder.clearBuffer();\n        }\n      });\n    }\n  }]);\n  return MicRecorder;\n}();\n\nreturn MicRecorder;\n\n})));\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}